{"version":3,"file":"index-d596a4bb.js","sources":["../../../src/views/assembly/excel/index.tsx"],"sourcesContent":["import { Button, Input, message, Select, Table, Upload } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport * as XLSX from 'xlsx'\r\nimport './index.less'\r\n\r\ninterface sheetNamesSelectType {\r\n\tlabel: string\r\n\tvalue: string\r\n}\r\n\r\nconst TableDataImport = () => {\r\n\tconst [tableData, setTableData] = useState<any>([]) // 表格数据\r\n\tconst [columns, setColumns] = useState<any[]>([]) // 列 表头\r\n\tconst [tableLoading, setTableLoading] = useState<boolean>(false) // 加载状态\r\n\tconst [tableFile, setTableFile] = useState<Blob>() // 文件\r\n\tconst [sheetNames, setSheetNames] = useState<sheetNamesSelectType[]>([]) // 工作表列表\r\n\tconst [fileName, setFileName] = useState<string>('') // 文件NAME\r\n\tconst [defaultSheetName, setDefaultSheetName] = useState<string>('') // 默认工作表\r\n\r\n\t// 参数设置   (file:文件 Blob类型,sheetName:工作区名称 string类型)\r\n\tconst handleUpload = (file: Blob, sheetName?: string) => {\r\n\t\t// 只要该调用当前方法就清空数据重新渲染\r\n\t\tsetColumns([])\r\n\t\tsetTableData([])\r\n\t\tif (!sheetName) {\r\n\t\t\t// 将默认工作区名称设为空\r\n\t\t\tsetDefaultSheetName('')\r\n\t\t}\r\n\t\t// 表格加载状态\r\n\t\tsetTableLoading(true)\r\n\t\t// 异步读取文件\r\n\t\tconst reader = new FileReader()\r\n\t\treader.onload = (e: any) => {\r\n\t\t\t// 格式化数组\r\n\t\t\tconst data = new Uint8Array(e.target.result)\r\n\t\t\t// 读取文件内容\r\n\t\t\tconst workbook = XLSX.read(data, { type: 'array' })\r\n\t\t\t// 如果指定了 sheetName，则将其用于查找工作表；否则，使用默认的第一个工作表。\r\n\t\t\tconst worksheet = sheetName ? workbook.Sheets[sheetName] : workbook.Sheets[workbook.SheetNames[0]]\r\n\t\t\t// 将工作表数据转换为 JSON 格式\r\n\t\t\tconst jsonData: any = XLSX.utils.sheet_to_json(worksheet, { header: 1 })\r\n\t\t\t// 将工作区转为options需要的格式\r\n\t\t\tconst newSheetNames = workbook.SheetNames.map(item => ({ label: item, value: item }))\r\n\t\t\t// 保存工作区\r\n\t\t\tsetSheetNames(newSheetNames)\r\n\t\t\t// 设置默认工作区\r\n\t\t\tsetDefaultSheetName(sheetName ? sheetName : newSheetNames[0].value)\r\n\t\t\t// 判断所选工作区的内容是否为空\r\n\t\t\tif (jsonData.length > 0) {\r\n\t\t\t\tconst newData: any[] = []\r\n\t\t\t\t// 第一行默认认为是表头 除开第一行以外都是数据\r\n\t\t\t\tjsonData.slice(1).forEach((item: any, itemIndex: number) => {\r\n\t\t\t\t\tif (item.length === 0) return false\r\n\t\t\t\t\tconst obj: any = { key: itemIndex }\r\n\t\t\t\t\tjsonData[0].forEach((header: any, index: any) => {\r\n\t\t\t\t\t\tobj[header] = item[index]\r\n\t\t\t\t\t})\r\n\t\t\t\t\tnewData.push(obj)\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// 将第一行转为表头\r\n\t\t\t\tconst columns = jsonData[0].map((header: any) => ({\r\n\t\t\t\t\ttitle: header,\r\n\t\t\t\t\tdataIndex: header,\r\n\t\t\t\t\tkey: header,\r\n\t\t\t\t\talign: 'center',\r\n\t\t\t\t\t// 以input格式渲染可以对导入的数据进行编辑  如果不需要此功能可以将render删除 也就不用changeTableData方法了\r\n\t\t\t\t\trender: (text: any, record: any, renderIndex: any) => (\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tkey={renderIndex}\r\n\t\t\t\t\t\t\tstyle={{ color: '#000', height: '100%', textAlign: 'center' }}\r\n\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\tdefaultValue={text}\r\n\t\t\t\t\t\t\tonBlur={eee => {\r\n\t\t\t\t\t\t\t\tchangeTableData(eee.target.value, renderIndex, header, newData)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t),\r\n\t\t\t\t}))\r\n\t\t\t\t// 设置表头\r\n\t\t\t\tsetColumns(columns)\r\n\t\t\t\t// 设置数据\r\n\t\t\t\tsetTableData(newData)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('没数据')\r\n\t\t\t}\r\n\t\t\t// 取消表格加载状态\r\n\t\t\tsetTableLoading(false)\r\n\t\t}\r\n\t\treader.readAsArrayBuffer(file)\r\n\t}\r\n\r\n\t// 需要参数    value:输入框输入的值   index:下标索引    key:表头对应字段     allData:表格中的数据\r\n\tconst changeTableData = (value: string, index: any, key: any, allData: any) => {\r\n\t\tconst newTableData = JSON.parse(JSON.stringify(allData))\r\n\t\tnewTableData[index][key] = value\r\n\t\tsetTableData(newTableData)\r\n\t}\r\n\r\n\t//  4、导入方法（tableDataImport）。作用：将最终数据进行保存数据库\r\n\tconst tableDataImport = () => {\r\n\t\tconsole.log('tableData', tableData)\r\n\t}\r\n\r\n\t// 需要参数  value:工作区\r\n\tconst handleChange = (value: string) => {\r\n\t\t// 调用数据渲染的方法 传入文件以及工作区\r\n\t\tif (tableFile) handleUpload(tableFile, value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"TableDataImport\">\r\n\t\t\t<div className=\"fileUpDiv\" style={{ marginTop: 10 }}>\r\n\t\t\t\t<span style={{ marginRight: 42 }}>文件名称</span>\r\n\t\t\t\t<span className=\"fileName\">{fileName}</span>\r\n\t\t\t\t<Upload\r\n\t\t\t\t\tbeforeUpload={file => {\r\n\t\t\t\t\t\tconst isExcel = /\\.(xlsx|xls)$/.test(file.name.toLowerCase())\r\n\t\t\t\t\t\tif (!isExcel) {\r\n\t\t\t\t\t\t\tmessage.error('请上传Excel文件（.xlsx 或 .xls）')\r\n\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 文件名称选工作区的时候并不会改变\r\n\t\t\t\t\t\tsetFileName(file.name)\r\n\t\t\t\t\t\t// 保存上传的文件\r\n\t\t\t\t\t\tsetTableFile(file)\r\n\t\t\t\t\t\t// 调用数据渲染的方法\r\n\t\t\t\t\t\thandleUpload(file)\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<Button>上传Excel文件</Button>\r\n\t\t\t\t</Upload>\r\n\r\n\t\t\t\t<span style={{ marginRight: 26 }}>选择工作区</span>\r\n\t\t\t\t{!defaultSheetName && <Select disabled style={{ width: 120 }} options={[]} />}\r\n\t\t\t\t{defaultSheetName && <Select defaultValue={defaultSheetName} style={{ width: 120 }} onChange={handleChange} options={sheetNames} />}\r\n\r\n\t\t\t\t<Button type=\"primary\" onClick={tableDataImport}>\r\n\t\t\t\t\t导入\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t\t<Table\r\n\t\t\t\t// style={{ height: '100%' }}\r\n\t\t\t\tscroll={{ x: '100%', y: 'calc( 100vh - 270px )' }}\r\n\t\t\t\trowKey={record => record.key}\r\n\t\t\t\tbordered\r\n\t\t\t\tloading={tableLoading}\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tdataSource={tableData}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TableDataImport\r\n"],"names":["TableDataImport","tableData","setTableData","useState","columns","setColumns","tableLoading","setTableLoading","tableFile","setTableFile","sheetNames","setSheetNames","fileName","setFileName","defaultSheetName","setDefaultSheetName","handleUpload","file","sheetName","reader","e","data","workbook","XLSX.read","worksheet","jsonData","XLSX.utils","newSheetNames","item","newData","itemIndex","obj","header","index","text","record","renderIndex","jsx","Input","eee","changeTableData","value","key","allData","newTableData","tableDataImport","handleChange","jsxs","Upload","message","Button","Select","Table"],"mappings":"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"}