{"version":3,"file":"index-2d04e68d.js","sources":["../../../node_modules/toggle-selection/index.js","../../../node_modules/copy-to-clipboard/index.js","../../../node_modules/antd/es/typography/style/mixins.js","../../../node_modules/antd/es/typography/style/index.js","../../../node_modules/antd/es/typography/Editable.js","../../../node_modules/antd/es/typography/hooks/useMergedConfig.js","../../../node_modules/antd/es/typography/hooks/useUpdatedEffect.js","../../../node_modules/antd/es/typography/Typography.js","../../../node_modules/antd/es/typography/Base/Ellipsis.js","../../../node_modules/antd/es/typography/Base/EllipsisTooltip.js","../../../node_modules/antd/es/typography/Base/index.js","../../../node_modules/antd/es/typography/Link.js","../../../node_modules/antd/es/typography/Paragraph.js","../../../node_modules/antd/es/typography/Text.js","../../../node_modules/antd/es/typography/Title.js","../../../node_modules/antd/es/typography/index.js"],"sourcesContent":["\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"âŒ˜\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","/*\n.typography-title(@fontSize; @fontWeight; @lineHeight; @headingColor; @headingMarginBottom;) {\n  margin-bottom: @headingMarginBottom;\n  color: @headingColor;\n  font-weight: @fontWeight;\n  fontSize: @fontSize;\n  line-height: @lineHeight;\n}\n*/\nimport { gold } from '@ant-design/colors';\nimport { unit } from '@ant-design/cssinjs';\nimport { operationUnit } from '../../style';\n// eslint-disable-next-line import/prefer-default-export\nconst getTitleStyle = (fontSize, lineHeight, color, token) => {\n  const {\n    titleMarginBottom,\n    fontWeightStrong\n  } = token;\n  return {\n    marginBottom: titleMarginBottom,\n    color,\n    fontWeight: fontWeightStrong,\n    fontSize,\n    lineHeight\n  };\n};\n// eslint-disable-next-line import/prefer-default-export\nexport const getTitleStyles = token => {\n  const headings = [1, 2, 3, 4, 5];\n  const styles = {};\n  headings.forEach(headingLevel => {\n    styles[`\n      h${headingLevel}&,\n      div&-h${headingLevel},\n      div&-h${headingLevel} > textarea,\n      h${headingLevel}\n    `] = getTitleStyle(token[`fontSizeHeading${headingLevel}`], token[`lineHeightHeading${headingLevel}`], token.colorTextHeading, token);\n  });\n  return styles;\n};\nexport const getLinkStyles = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    'a&, a': Object.assign(Object.assign({}, operationUnit(token)), {\n      textDecoration: token.linkDecoration,\n      '&:active, &:hover': {\n        textDecoration: token.linkHoverDecoration\n      },\n      [`&[disabled], &${componentCls}-disabled`]: {\n        color: token.colorTextDisabled,\n        cursor: 'not-allowed',\n        '&:active, &:hover': {\n          color: token.colorTextDisabled\n        },\n        '&:active': {\n          pointerEvents: 'none'\n        }\n      }\n    })\n  };\n};\nexport const getResetStyles = token => ({\n  code: {\n    margin: '0 0.2em',\n    paddingInline: '0.4em',\n    paddingBlock: '0.2em 0.1em',\n    fontSize: '85%',\n    fontFamily: token.fontFamilyCode,\n    background: 'rgba(150, 150, 150, 0.1)',\n    border: '1px solid rgba(100, 100, 100, 0.2)',\n    borderRadius: 3\n  },\n  kbd: {\n    margin: '0 0.2em',\n    paddingInline: '0.4em',\n    paddingBlock: '0.15em 0.1em',\n    fontSize: '90%',\n    fontFamily: token.fontFamilyCode,\n    background: 'rgba(150, 150, 150, 0.06)',\n    border: '1px solid rgba(100, 100, 100, 0.2)',\n    borderBottomWidth: 2,\n    borderRadius: 3\n  },\n  mark: {\n    padding: 0,\n    // FIXME hardcode in v4\n    backgroundColor: gold[2]\n  },\n  'u, ins': {\n    textDecoration: 'underline',\n    textDecorationSkipInk: 'auto'\n  },\n  's, del': {\n    textDecoration: 'line-through'\n  },\n  strong: {\n    fontWeight: 600\n  },\n  // list\n  'ul, ol': {\n    marginInline: 0,\n    marginBlock: '0 1em',\n    padding: 0,\n    li: {\n      marginInline: '20px 0',\n      marginBlock: 0,\n      paddingInline: '4px 0',\n      paddingBlock: 0\n    }\n  },\n  ul: {\n    listStyleType: 'circle',\n    ul: {\n      listStyleType: 'disc'\n    }\n  },\n  ol: {\n    listStyleType: 'decimal'\n  },\n  // pre & block\n  'pre, blockquote': {\n    margin: '1em 0'\n  },\n  pre: {\n    padding: '0.4em 0.6em',\n    whiteSpace: 'pre-wrap',\n    wordWrap: 'break-word',\n    background: 'rgba(150, 150, 150, 0.1)',\n    border: '1px solid rgba(100, 100, 100, 0.2)',\n    borderRadius: 3,\n    fontFamily: token.fontFamilyCode,\n    // Compatible for marked\n    code: {\n      display: 'inline',\n      margin: 0,\n      padding: 0,\n      fontSize: 'inherit',\n      fontFamily: 'inherit',\n      background: 'transparent',\n      border: 0\n    }\n  },\n  blockquote: {\n    paddingInline: '0.6em 0',\n    paddingBlock: 0,\n    borderInlineStart: '4px solid rgba(100, 100, 100, 0.2)',\n    opacity: 0.85\n  }\n});\nexport const getEditableStyles = token => {\n  const {\n    componentCls,\n    paddingSM\n  } = token;\n  const inputShift = paddingSM;\n  return {\n    '&-edit-content': {\n      position: 'relative',\n      'div&': {\n        insetInlineStart: token.calc(token.paddingSM).mul(-1).equal(),\n        marginTop: token.calc(inputShift).mul(-1).equal(),\n        marginBottom: `calc(1em - ${unit(inputShift)})`\n      },\n      [`${componentCls}-edit-content-confirm`]: {\n        position: 'absolute',\n        insetInlineEnd: token.calc(token.marginXS).add(2).equal(),\n        insetBlockEnd: token.marginXS,\n        color: token.colorTextDescription,\n        // default style\n        fontWeight: 'normal',\n        fontSize: token.fontSize,\n        fontStyle: 'normal',\n        pointerEvents: 'none'\n      },\n      textarea: {\n        margin: '0!important',\n        // Fix Editable Textarea flash in Firefox\n        MozTransition: 'none',\n        height: '1em'\n      }\n    }\n  };\n};\nexport const getCopyableStyles = token => ({\n  [`${token.componentCls}-copy-success`]: {\n    [`\n    &,\n    &:hover,\n    &:focus`]: {\n      color: token.colorSuccess\n    }\n  },\n  [`${token.componentCls}-copy-icon-only`]: {\n    marginInlineStart: 0\n  }\n});\nexport const getEllipsisStyles = () => ({\n  [`\n  a&-ellipsis,\n  span&-ellipsis\n  `]: {\n    display: 'inline-block',\n    maxWidth: '100%'\n  },\n  '&-single-line': {\n    whiteSpace: 'nowrap'\n  },\n  '&-ellipsis-single-line': {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    // https://blog.csdn.net/iefreer/article/details/50421025\n    'a&, span&': {\n      verticalAlign: 'bottom'\n    },\n    '> code': {\n      paddingBlock: 0,\n      maxWidth: 'calc(100% - 1.2em)',\n      display: 'inline-block',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      verticalAlign: 'bottom',\n      // https://github.com/ant-design/ant-design/issues/45953\n      boxSizing: 'content-box'\n    }\n  },\n  '&-ellipsis-multiple-line': {\n    display: '-webkit-box',\n    overflow: 'hidden',\n    WebkitLineClamp: 3,\n    WebkitBoxOrient: 'vertical'\n  }\n});","import { operationUnit } from '../../style';\nimport { genStyleHooks } from '../../theme/internal';\nimport { getCopyableStyles, getEditableStyles, getEllipsisStyles, getLinkStyles, getResetStyles, getTitleStyles } from './mixins';\nconst genTypographyStyle = token => {\n  const {\n    componentCls,\n    titleMarginTop\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n      color: token.colorText,\n      wordBreak: 'break-word',\n      lineHeight: token.lineHeight,\n      [`&${componentCls}-secondary`]: {\n        color: token.colorTextDescription\n      },\n      [`&${componentCls}-success`]: {\n        color: token.colorSuccess\n      },\n      [`&${componentCls}-warning`]: {\n        color: token.colorWarning\n      },\n      [`&${componentCls}-danger`]: {\n        color: token.colorError,\n        'a&:active, a&:focus': {\n          color: token.colorErrorActive\n        },\n        'a&:hover': {\n          color: token.colorErrorHover\n        }\n      },\n      [`&${componentCls}-disabled`]: {\n        color: token.colorTextDisabled,\n        cursor: 'not-allowed',\n        userSelect: 'none'\n      },\n      [`\n        div&,\n        p\n      `]: {\n        marginBottom: '1em'\n      }\n    }, getTitleStyles(token)), {\n      [`\n      & + h1${componentCls},\n      & + h2${componentCls},\n      & + h3${componentCls},\n      & + h4${componentCls},\n      & + h5${componentCls}\n      `]: {\n        marginTop: titleMarginTop\n      },\n      [`\n      div,\n      ul,\n      li,\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5`]: {\n        [`\n        + h1,\n        + h2,\n        + h3,\n        + h4,\n        + h5\n        `]: {\n          marginTop: titleMarginTop\n        }\n      }\n    }), getResetStyles(token)), getLinkStyles(token)), {\n      // Operation\n      [`\n        ${componentCls}-expand,\n        ${componentCls}-edit,\n        ${componentCls}-copy\n      `]: Object.assign(Object.assign({}, operationUnit(token)), {\n        marginInlineStart: token.marginXXS\n      })\n    }), getEditableStyles(token)), getCopyableStyles(token)), getEllipsisStyles()), {\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\nexport const prepareComponentToken = () => ({\n  titleMarginTop: '1.2em',\n  titleMarginBottom: '0.5em'\n});\n// ============================== Export ==============================\nexport default genStyleHooks('Typography', token => [genTypographyStyle(token)], prepareComponentToken);","\"use client\";\n\nimport EnterOutlined from \"@ant-design/icons/es/icons/EnterOutlined\";\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport * as React from 'react';\nimport { cloneElement } from '../_util/reactNode';\nimport TextArea from '../input/TextArea';\nimport useStyle from './style';\nconst Editable = props => {\n  const {\n    prefixCls,\n    'aria-label': ariaLabel,\n    className,\n    style,\n    direction,\n    maxLength,\n    autoSize = true,\n    value,\n    onSave,\n    onCancel,\n    onEnd,\n    component,\n    enterIcon = /*#__PURE__*/React.createElement(EnterOutlined, null)\n  } = props;\n  const ref = React.useRef(null);\n  const inComposition = React.useRef(false);\n  const lastKeyCode = React.useRef();\n  const [current, setCurrent] = React.useState(value);\n  React.useEffect(() => {\n    setCurrent(value);\n  }, [value]);\n  React.useEffect(() => {\n    if (ref.current && ref.current.resizableTextArea) {\n      const {\n        textArea\n      } = ref.current.resizableTextArea;\n      textArea.focus();\n      const {\n        length\n      } = textArea.value;\n      textArea.setSelectionRange(length, length);\n    }\n  }, []);\n  const onChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setCurrent(target.value.replace(/[\\n\\r]/g, ''));\n  };\n  const onCompositionStart = () => {\n    inComposition.current = true;\n  };\n  const onCompositionEnd = () => {\n    inComposition.current = false;\n  };\n  const onKeyDown = _ref2 => {\n    let {\n      keyCode\n    } = _ref2;\n    // We don't record keyCode when IME is using\n    if (inComposition.current) return;\n    lastKeyCode.current = keyCode;\n  };\n  const confirmChange = () => {\n    onSave(current.trim());\n  };\n  const onKeyUp = _ref3 => {\n    let {\n      keyCode,\n      ctrlKey,\n      altKey,\n      metaKey,\n      shiftKey\n    } = _ref3;\n    // Check if it's a real key\n    if (lastKeyCode.current === keyCode && !inComposition.current && !ctrlKey && !altKey && !metaKey && !shiftKey) {\n      if (keyCode === KeyCode.ENTER) {\n        confirmChange();\n        onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n      } else if (keyCode === KeyCode.ESC) {\n        onCancel();\n      }\n    }\n  };\n  const onBlur = () => {\n    confirmChange();\n  };\n  const textClassName = component ? `${prefixCls}-${component}` : '';\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const textAreaClassName = classNames(prefixCls, `${prefixCls}-edit-content`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, textClassName, hashId, cssVarCls);\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n    className: textAreaClassName,\n    style: style\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    ref: ref,\n    maxLength: maxLength,\n    value: current,\n    onChange: onChange,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd,\n    onBlur: onBlur,\n    \"aria-label\": ariaLabel,\n    rows: 1,\n    autoSize: autoSize\n  }), enterIcon !== null ? cloneElement(enterIcon, {\n    className: `${prefixCls}-edit-content-confirm`\n  }) : null));\n};\nexport default Editable;","import * as React from 'react';\nexport default function useMergedConfig(propConfig, templateConfig) {\n  return React.useMemo(() => {\n    const support = !!propConfig;\n    return [support, Object.assign(Object.assign({}, templateConfig), support && typeof propConfig === 'object' ? propConfig : null)];\n  }, [propConfig]);\n}","import * as React from 'react';\n/** Similar with `useEffect` but only trigger after mounted */\nconst useUpdatedEffect = (callback, conditions) => {\n  const mountRef = React.useRef(false);\n  React.useEffect(() => {\n    if (mountRef.current) {\n      callback();\n    } else {\n      mountRef.current = true;\n    }\n  }, conditions);\n};\nexport default useUpdatedEffect;","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { composeRef } from \"rc-util/es/ref\";\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst Typography = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      component: Component = 'article',\n      className,\n      rootClassName,\n      setContentRef,\n      children,\n      direction: typographyDirection,\n      style\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"component\", \"className\", \"rootClassName\", \"setContentRef\", \"children\", \"direction\", \"style\"]);\n  const {\n    getPrefixCls,\n    direction: contextDirection,\n    typography\n  } = React.useContext(ConfigContext);\n  const direction = typographyDirection !== null && typographyDirection !== void 0 ? typographyDirection : contextDirection;\n  let mergedRef = ref;\n  if (setContentRef) {\n    mergedRef = composeRef(ref, setContentRef);\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Typography');\n    warning.deprecated(!setContentRef, 'setContentRef', 'ref');\n  }\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  // Style\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const componentClassName = classNames(prefixCls, typography === null || typography === void 0 ? void 0 : typography.className, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId, cssVarCls);\n  const mergedStyle = Object.assign(Object.assign({}, typography === null || typography === void 0 ? void 0 : typography.style), style);\n  return wrapCSSVar(\n  /*#__PURE__*/\n  // @ts-expect-error: Expression produces a union type that is too complex to represent.\n  React.createElement(Component, Object.assign({\n    className: componentClassName,\n    style: mergedStyle,\n    ref: mergedRef\n  }, restProps), children));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Typography.displayName = 'Typography';\n}\n// es default export should use const instead of let\nexport default Typography;","\"use client\";\n\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nfunction cuttable(node) {\n  const type = typeof node;\n  return type === 'string' || type === 'number';\n}\nfunction getNodesLen(nodeList) {\n  let totalLen = 0;\n  nodeList.forEach(node => {\n    if (cuttable(node)) {\n      totalLen += String(node).length;\n    } else {\n      totalLen += 1;\n    }\n  });\n  return totalLen;\n}\nfunction sliceNodes(nodeList, len) {\n  let currLen = 0;\n  const currentNodeList = [];\n  for (let i = 0; i < nodeList.length; i += 1) {\n    // Match to return\n    if (currLen === len) {\n      return currentNodeList;\n    }\n    const node = nodeList[i];\n    const canCut = cuttable(node);\n    const nodeLen = canCut ? String(node).length : 1;\n    const nextLen = currLen + nodeLen;\n    // Exceed but current not which means we need cut this\n    // This will not happen on validate ReactElement\n    if (nextLen > len) {\n      const restLen = len - currLen;\n      currentNodeList.push(String(node).slice(0, restLen));\n      return currentNodeList;\n    }\n    currentNodeList.push(node);\n    currLen = nextLen;\n  }\n  return nodeList;\n}\nconst NONE = 0;\nconst PREPARE = 1;\nconst WALKING = 2;\nconst DONE_WITH_ELLIPSIS = 3;\nconst DONE_WITHOUT_ELLIPSIS = 4;\nconst Ellipsis = _ref => {\n  let {\n    enabledMeasure,\n    children,\n    text,\n    width,\n    fontSize,\n    rows,\n    onEllipsis\n  } = _ref;\n  const [[startLen, midLen, endLen], setCutLength] = React.useState([0, 0, 0]);\n  // record last done with ellipsis width\n  const [lastLen, setLastLen] = React.useState(0);\n  const [walkingState, setWalkingState] = React.useState(NONE);\n  const [singleRowHeight, setSingleRowHeight] = React.useState(0);\n  const singleRowRef = React.useRef(null);\n  const midRowRef = React.useRef(null);\n  const nodeList = React.useMemo(() => toArray(text), [text]);\n  const totalLen = React.useMemo(() => getNodesLen(nodeList), [nodeList]);\n  const mergedChildren = React.useMemo(() => {\n    if (!enabledMeasure || walkingState !== DONE_WITH_ELLIPSIS) {\n      // if has lastLen, use it as temporary width to avoid lots of text to squeeze space.\n      if (lastLen && walkingState !== DONE_WITHOUT_ELLIPSIS && enabledMeasure) return children(sliceNodes(nodeList, lastLen), lastLen < totalLen);\n      return children(nodeList, false);\n    }\n    return children(sliceNodes(nodeList, midLen), midLen < totalLen);\n  }, [enabledMeasure, walkingState, children, nodeList, midLen, totalLen]);\n  // ======================== Walk ========================\n  useIsomorphicLayoutEffect(() => {\n    if (enabledMeasure && width && fontSize && totalLen) {\n      setWalkingState(PREPARE);\n      setCutLength([0, Math.ceil(totalLen / 2), totalLen]);\n    }\n  }, [enabledMeasure, width, fontSize, text, totalLen, rows]);\n  useIsomorphicLayoutEffect(() => {\n    var _a;\n    if (walkingState === PREPARE) {\n      setSingleRowHeight(((_a = singleRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0);\n    }\n  }, [walkingState]);\n  useIsomorphicLayoutEffect(() => {\n    var _a, _b;\n    if (singleRowHeight) {\n      if (walkingState === PREPARE) {\n        // Ignore if position is enough\n        const midHeight = ((_a = midRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0;\n        const maxHeight = rows * singleRowHeight;\n        if (midHeight <= maxHeight) {\n          setWalkingState(DONE_WITHOUT_ELLIPSIS);\n          onEllipsis(false);\n        } else {\n          setWalkingState(WALKING);\n        }\n      } else if (walkingState === WALKING) {\n        if (startLen !== endLen) {\n          const midHeight = ((_b = midRowRef.current) === null || _b === void 0 ? void 0 : _b.offsetHeight) || 0;\n          const maxHeight = rows * singleRowHeight;\n          let nextStartLen = startLen;\n          let nextEndLen = endLen;\n          // We reach the last round\n          if (startLen === endLen - 1) {\n            nextEndLen = startLen;\n          } else if (midHeight <= maxHeight) {\n            nextStartLen = midLen;\n          } else {\n            nextEndLen = midLen;\n          }\n          const nextMidLen = Math.ceil((nextStartLen + nextEndLen) / 2);\n          setCutLength([nextStartLen, nextMidLen, nextEndLen]);\n        } else {\n          setWalkingState(DONE_WITH_ELLIPSIS);\n          setLastLen(midLen);\n          onEllipsis(true);\n        }\n      }\n    }\n  }, [walkingState, startLen, endLen, rows, singleRowHeight]);\n  // ======================= Render =======================\n  const measureStyle = {\n    width,\n    whiteSpace: 'normal',\n    margin: 0,\n    padding: 0\n  };\n  const renderMeasure = (content, ref, style) => ( /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    ref: ref,\n    style: Object.assign({\n      position: 'fixed',\n      display: 'block',\n      left: 0,\n      top: 0,\n      zIndex: -9999,\n      visibility: 'hidden',\n      pointerEvents: 'none',\n      fontSize: Math.ceil(fontSize / 2) * 2\n    }, style)\n  }, content));\n  const renderMeasureSlice = (len, ref) => {\n    const sliceNodeList = sliceNodes(nodeList, len);\n    return renderMeasure(children(sliceNodeList, true), ref, measureStyle);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mergedChildren, enabledMeasure && walkingState !== DONE_WITH_ELLIPSIS && walkingState !== DONE_WITHOUT_ELLIPSIS && ( /*#__PURE__*/React.createElement(React.Fragment, null, renderMeasure('lg', singleRowRef, {\n    wordBreak: 'keep-all',\n    whiteSpace: 'nowrap'\n  }), walkingState === PREPARE ? renderMeasure(children(nodeList, false), midRowRef, measureStyle) : renderMeasureSlice(midLen, midRowRef))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Ellipsis.displayName = 'Ellipsis';\n}\nexport default Ellipsis;","\"use client\";\n\nimport * as React from 'react';\nimport Tooltip from '../../tooltip';\nconst EllipsisTooltip = _ref => {\n  let {\n    enabledEllipsis,\n    isEllipsis,\n    children,\n    tooltipProps\n  } = _ref;\n  if (!(tooltipProps === null || tooltipProps === void 0 ? void 0 : tooltipProps.title) || !enabledEllipsis) {\n    return children;\n  }\n  return /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    open: isEllipsis ? undefined : false\n  }, tooltipProps), children);\n};\nif (process.env.NODE_ENV !== 'production') {\n  EllipsisTooltip.displayName = 'EllipsisTooltip';\n}\nexport default EllipsisTooltip;","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport copy from 'copy-to-clipboard';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport TransButton from '../../_util/transButton';\nimport { ConfigContext } from '../../config-provider';\nimport useLocale from '../../locale/useLocale';\nimport Tooltip from '../../tooltip';\nimport Editable from '../Editable';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Typography from '../Typography';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\nfunction wrapperDecorations(_ref, content) {\n  let {\n    mark,\n    code,\n    underline,\n    delete: del,\n    strong,\n    keyboard,\n    italic\n  } = _ref;\n  let currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n  return dom || needDom && defaultNode;\n}\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n  return Array.isArray(val) ? val : [val];\n}\nconst ELLIPSIS_STR = '...';\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b, _c;\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      style,\n      type,\n      disabled,\n      children,\n      ellipsis,\n      editable,\n      copyable,\n      component,\n      title\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [textLocale] = useLocale('Text');\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']);\n  // ========================== Editable ==========================\n  const [enableEdit, editConfig] = useMergedConfig(editable);\n  const [editing, setEditing] = useMergedState(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n  const triggerEdit = edit => {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  useUpdatedEffect(() => {\n    var _a;\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  const onEditChange = value => {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  const onEditCancel = () => {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  const [enableCopy, copyConfig] = useMergedConfig(copyable);\n  const [copied, setCopied] = React.useState(false);\n  const copyIdRef = React.useRef(null);\n  const copyOptions = {};\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n  const cleanCopyId = () => {\n    if (copyIdRef.current) {\n      clearTimeout(copyIdRef.current);\n    }\n  };\n  const onCopyClick = e => {\n    var _a;\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true);\n    // Trigger tips update\n    cleanCopyId();\n    copyIdRef.current = setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n  React.useEffect(() => cleanCopyId, []);\n  // ========================== Ellipsis ==========================\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = useMergedConfig(ellipsis, {\n    expandable: false\n  });\n  const mergedEnableEllipsis = enableEllipsis && !expanded;\n  // Shared prop to reduce bundle size\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() =>\n  // Disable ellipsis\n  !mergedEnableEllipsis ||\n  // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n  // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const cssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  const onExpandClick = e => {\n    var _a;\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n  const [ellipsisFontSize, setEllipsisFontSize] = React.useState(0);\n  const onResize = (_ref2, element) => {\n    let {\n      offsetWidth\n    } = _ref2;\n    var _a;\n    setEllipsisWidth(offsetWidth);\n    setEllipsisFontSize(parseInt((_a = window.getComputedStyle) === null || _a === void 0 ? void 0 : _a.call(window, element).fontSize, 10) || 0);\n  };\n  // >>>>> JS Ellipsis\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible, ellipsisWidth]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  let tooltipProps = {};\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n  const topAriaLabel = React.useMemo(() => {\n    const isValid = val => ['string', 'number'].includes(typeof val);\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n    if (isValid(children)) {\n      return children;\n    }\n    if (isValid(title)) {\n      return title;\n    }\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    if (!expandable) return null;\n    let expandContent;\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand;\n    }\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: `${prefixCls}-expand`,\n      onClick: onExpandClick,\n      \"aria-label\": textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, expandContent);\n  };\n  // Edit\n  const renderEdit = () => {\n    if (!enableEdit) return;\n    const {\n      icon,\n      tooltip\n    } = editConfig;\n    const editTitle = toArray(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? ( /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    })))) : null;\n  };\n  // Copy\n  const renderCopy = () => {\n    if (!enableCopy) {\n      return null;\n    }\n    const {\n      tooltips,\n      icon\n    } = copyConfig;\n    const tooltipNodes = toList(tooltips);\n    const iconNodes = toList(icon);\n    const copyTitle = copied ? getNode(tooltipNodes[1], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied) : getNode(tooltipNodes[0], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy);\n    const systemStr = copied ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied : textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy;\n    const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      className: classNames(`${prefixCls}-copy`, {\n        [`${prefixCls}-copy-success`]: copied,\n        [`${prefixCls}-copy-icon-only`]: children === null || children === undefined\n      }),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n  };\n  const renderOperations = renderExpanded => [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  const renderEllipsis = needEllipsis => [needEllipsis && ( /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR)), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis\n  }, resizeRef => ( /*#__PURE__*/React.createElement(EllipsisTooltip, {\n    tooltipProps: tooltipProps,\n    enabledEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n    className: classNames({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-single-line`]: mergedEnableEllipsis && rows === 1,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: composeRef(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n    enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    fontSize: ellipsisFontSize,\n    onEllipsis: onJsEllipsis\n  }, (node, needEllipsis) => {\n    let renderNode = node;\n    if (node.length && needEllipsis && topAriaLabel) {\n      renderNode = /*#__PURE__*/React.createElement(\"span\", {\n        key: \"show-content\",\n        \"aria-hidden\": true\n      }, renderNode);\n    }\n    const wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n    return wrappedContext;\n  })))));\n});\nexport default Base;","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { devUseWarning } from '../_util/warning';\nimport Base from './Base';\nconst Link = /*#__PURE__*/React.forwardRef((_a, ref) => {\n  var {\n      ellipsis,\n      rel\n    } = _a,\n    restProps = __rest(_a, [\"ellipsis\", \"rel\"]);\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Typography.Link');\n    process.env.NODE_ENV !== \"production\" ? warning(typeof ellipsis !== 'object', 'usage', '`ellipsis` only supports boolean value.') : void 0;\n  }\n  const mergedProps = Object.assign(Object.assign({}, restProps), {\n    rel: rel === undefined && restProps.target === '_blank' ? 'noopener noreferrer' : rel\n  });\n  // @ts-expect-error: https://github.com/ant-design/ant-design/issues/26622\n  delete mergedProps.navigate;\n  return /*#__PURE__*/React.createElement(Base, Object.assign({}, mergedProps, {\n    ref: ref,\n    ellipsis: !!ellipsis,\n    component: \"a\"\n  }));\n});\nexport default Link;","\"use client\";\n\nimport * as React from 'react';\nimport Base from './Base';\nconst Paragraph = /*#__PURE__*/React.forwardRef((props, ref) => ( /*#__PURE__*/React.createElement(Base, Object.assign({\n  ref: ref\n}, props, {\n  component: \"div\"\n}))));\nexport default Paragraph;","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport omit from \"rc-util/es/omit\";\nimport { devUseWarning } from '../_util/warning';\nimport Base from './Base';\nconst Text = (_a, ref) => {\n  var {\n      ellipsis\n    } = _a,\n    restProps = __rest(_a, [\"ellipsis\"]);\n  const mergedEllipsis = React.useMemo(() => {\n    if (ellipsis && typeof ellipsis === 'object') {\n      return omit(ellipsis, ['expandable', 'rows']);\n    }\n    return ellipsis;\n  }, [ellipsis]);\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Typography.Text');\n    process.env.NODE_ENV !== \"production\" ? warning(typeof ellipsis !== 'object' || !ellipsis || !('expandable' in ellipsis) && !('rows' in ellipsis), 'usage', '`ellipsis` do not support `expandable` or `rows` props.') : void 0;\n  }\n  return /*#__PURE__*/React.createElement(Base, Object.assign({\n    ref: ref\n  }, restProps, {\n    ellipsis: mergedEllipsis,\n    component: \"span\"\n  }));\n};\nexport default /*#__PURE__*/React.forwardRef(Text);","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { devUseWarning } from '../_util/warning';\nimport Base from './Base';\nconst TITLE_ELE_LIST = [1, 2, 3, 4, 5];\nconst Title = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      level = 1\n    } = props,\n    restProps = __rest(props, [\"level\"]);\n  let component;\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Typography.Title');\n    process.env.NODE_ENV !== \"production\" ? warning(TITLE_ELE_LIST.includes(level), 'usage', 'Title only accept `1 | 2 | 3 | 4 | 5` as `level` value. And `5` need 4.6.0+ version.') : void 0;\n  }\n  if (TITLE_ELE_LIST.includes(level)) {\n    component = `h${level}`;\n  } else {\n    component = 'h1';\n  }\n  return /*#__PURE__*/React.createElement(Base, Object.assign({\n    ref: ref\n  }, restProps, {\n    component: component\n  }));\n});\nexport default Title;","\"use client\";\n\nimport Link from './Link';\nimport Paragraph from './Paragraph';\nimport Text from './Text';\nimport Title from './Title';\nimport OriginTypography from './Typography';\nconst Typography = OriginTypography;\nTypography.Text = Text;\nTypography.Link = Link;\nTypography.Title = Title;\nTypography.Paragraph = Paragraph;\nexport default Typography;"],"names":["toggleSelection","selection","active","ranges","i","range","deselectCurrent","require$$0","clipboardToIE11Formatting","defaultMessage","format","message","copyKey","copy","text","options","debug","reselectPrevious","mark","success","e","successful","err","copyToClipboard","getTitleStyle","fontSize","lineHeight","color","token","titleMarginBottom","fontWeightStrong","getTitleStyles","headings","styles","headingLevel","getLinkStyles","componentCls","operationUnit","getResetStyles","gold","getEditableStyles","paddingSM","inputShift","unit","getCopyableStyles","getEllipsisStyles","genTypographyStyle","titleMarginTop","prepareComponentToken","useStyle","genStyleHooks","Editable","props","prefixCls","ariaLabel","className","style","direction","maxLength","autoSize","value","onSave","onCancel","onEnd","component","enterIcon","React.createElement","EnterOutlined","ref","React.useRef","inComposition","lastKeyCode","current","setCurrent","React.useState","React.useEffect","textArea","length","onChange","_ref","target","onCompositionStart","onCompositionEnd","onKeyDown","_ref2","keyCode","confirmChange","onKeyUp","_ref3","ctrlKey","altKey","metaKey","shiftKey","KeyCode","onBlur","textClassName","wrapCSSVar","hashId","cssVarCls","textAreaClassName","classNames","TextArea","cloneElement","Editable$1","useMergedConfig","propConfig","templateConfig","React.useMemo","support","useUpdatedEffect","callback","conditions","mountRef","useUpdatedEffect$1","__rest","this","s","t","p","Typography","React.forwardRef","customizePrefixCls","Component","rootClassName","setContentRef","children","typographyDirection","restProps","getPrefixCls","contextDirection","typography","React.useContext","ConfigContext","mergedRef","composeRef","componentClassName","mergedStyle","OriginTypography","cuttable","node","type","getNodesLen","nodeList","totalLen","sliceNodes","len","currLen","currentNodeList","nodeLen","nextLen","restLen","NONE","PREPARE","WALKING","DONE_WITH_ELLIPSIS","DONE_WITHOUT_ELLIPSIS","Ellipsis","enabledMeasure","width","rows","onEllipsis","startLen","midLen","endLen","setCutLength","lastLen","setLastLen","walkingState","setWalkingState","singleRowHeight","setSingleRowHeight","singleRowRef","midRowRef","toArray","mergedChildren","useIsomorphicLayoutEffect","_a","_b","midHeight","maxHeight","nextStartLen","nextEndLen","nextMidLen","measureStyle","renderMeasure","content","renderMeasureSlice","sliceNodeList","React.Fragment","Ellipsis$1","EllipsisTooltip","enabledEllipsis","isEllipsis","tooltipProps","Tooltip","EllipsisTooltip$1","wrapperDecorations","code","underline","del","strong","keyboard","italic","currentContent","wrap","tag","needed","getNode","dom","defaultNode","needDom","toList","val","ELLIPSIS_STR","Base","_c","disabled","ellipsis","editable","copyable","title","textLocale","useLocale","typographyRef","editIconRef","textProps","omit","enableEdit","editConfig","editing","setEditing","useMergedState","triggerType","triggerEdit","edit","onEditClick","onEditChange","onEditCancel","enableCopy","copyConfig","copied","setCopied","copyIdRef","copyOptions","cleanCopyId","onCopyClick","isLineClampSupport","setIsLineClampSupport","isTextOverflowSupport","setIsTextOverflowSupport","expanded","setExpanded","isJsEllipsis","setIsJsEllipsis","isNativeEllipsis","setIsNativeEllipsis","isNativeVisible","setIsNativeVisible","enableEllipsis","ellipsisConfig","mergedEnableEllipsis","needMeasureEllipsis","isStyleSupport","cssEllipsis","isMergedEllipsis","cssTextOverflow","cssLineClamp","onExpandClick","ellipsisWidth","setEllipsisWidth","ellipsisFontSize","setEllipsisFontSize","onResize","element","offsetWidth","onJsEllipsis","jsEllipsis","textEle","currentEllipsis","observer","React.isValidElement","topAriaLabel","isValid","renderExpand","expandable","symbol","expandContent","renderEdit","icon","tooltip","editTitle","TransButton","EditOutlined","renderCopy","tooltips","tooltipNodes","iconNodes","copyTitle","systemStr","CheckOutlined","CopyOutlined","renderOperations","renderExpanded","renderEllipsis","needEllipsis","ResizeObserver","resizeRef","renderNode","Base$1","Link","rel","mergedProps","Link$1","Paragraph","Paragraph$1","Text","mergedEllipsis","Text$1","TITLE_ELE_LIST","Title","level","Title$1","Typography$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}