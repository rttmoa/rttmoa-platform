{"version":3,"file":"tableAjax-d9d4205d.js","sources":["../../../node_modules/qs/lib/index.js","../../../src/views/list/basicTable/components/tableAjax.tsx"],"sourcesContent":["'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Table } from \"antd\";\nimport type { GetProp, TableProps } from \"antd\";\nimport qs from \"qs\";\n\ntype ColumnsType<T> = TableProps<T>[\"columns\"];\ntype TablePaginationConfig = Exclude<GetProp<TableProps, \"pagination\">, boolean>;\n\ninterface DataType {\n  description: string;\n  name: {\n    first: string;\n    last: string;\n  };\n  gender: string;\n  email: string;\n  login: {\n    uuid: string;\n  };\n}\n\ninterface TableParams {\n  pagination?: TablePaginationConfig;\n  sortField?: string;\n  sortOrder?: string;\n  filters?: Parameters<GetProp<TableProps, \"onChange\">>[1];\n}\n\nconst columns: ColumnsType<DataType> = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    sorter: true,\n    render: name => `${name.first} ${name.last}`,\n    width: \"20%\"\n  },\n  Table.EXPAND_COLUMN, // FIXME: 可展开列\n  {\n    title: \"Gender\",\n    dataIndex: \"gender\",\n    filters: [\n      { text: \"Male\", value: \"male\" },\n      { text: \"Female\", value: \"female\" }\n    ],\n    width: \"20%\"\n  },\n  Table.SELECTION_COLUMN, // FIXME: 选择框添加属性\n  {\n    title: \"Email\",\n    dataIndex: \"email\"\n  }\n];\n\nconst getRandomuserParams = (params: TableParams) => ({\n  results: params.pagination?.pageSize,\n  page: params.pagination?.current,\n  ...params\n});\n\nconst App: any = ({ isShow }: any) => {\n  const [data, setData] = useState<DataType[]>();\n  const [loading, setLoading] = useState(false);\n  const [tableParams, setTableParams] = useState<TableParams>({\n    pagination: {\n      current: 1,\n      pageSize: 10\n    }\n  });\n\n  const fetchData = () => {\n    setLoading(true);\n    fetch(`https://randomuser.me/api?${qs.stringify(getRandomuserParams(tableParams))}`)\n      .then(res => res.json())\n      .then(({ results }) => {\n        setData(results);\n        setLoading(false);\n        setTableParams({\n          ...tableParams,\n          pagination: {\n            ...tableParams.pagination,\n            total: 200\n            // 200 is mock data, you should read it from server\n            // total: data.totalCount,\n          }\n        });\n      });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [JSON.stringify(tableParams)]);\n\n  const handleTableChange: TableProps[\"onChange\"] = (pagination, filters, sorter) => {\n    setTableParams({\n      pagination,\n      filters,\n      ...sorter\n    });\n\n    // `dataSource` is useless since `pageSize` changed\n    if (pagination.pageSize !== tableParams.pagination?.pageSize) {\n      setData([]);\n    }\n  };\n\n  return (\n    isShow && (\n      <Table\n        size=\"middle\"\n        bordered\n        title={() => \"Header\"}\n        footer={() => \"Footer\"}\n        columns={columns}\n        rowKey={record => record.login.uuid}\n        dataSource={data}\n        pagination={tableParams.pagination}\n        loading={loading}\n        onChange={handleTableChange}\n        expandable={{\n          expandedRowRender: record => (\n            <p style={{ margin: 0 }}>\n              {record.description || \"My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.\"}\n            </p>\n          ),\n          rowExpandable: record => record?.name.first != \"Not Expandable\"\n        }}\n        rowSelection={{}} // FIXME: 选择框需要添加的属性\n      />\n    )\n  );\n};\n\nexport default App;\n"],"names":["stringify","require$$0","parse","require$$1","formats","require$$2","lib","columns","name","Table","getRandomuserParams","params","_a","_b","App","isShow","data","setData","useState","loading","setLoading","tableParams","setTableParams","fetchData","qs","res","results","useEffect","handleTableChange","pagination","filters","sorter","jsx","record"],"mappings":"6bAEA,IAAIA,EAAYC,EACZC,EAAQC,EACRC,EAAUC,EAEdC,EAAiB,CACb,QAASF,EACT,MAAOF,EACP,UAAWF,CACf,eCkBMO,EAAiC,CACrC,CACE,MAAO,OACP,UAAW,OACX,OAAQ,GACR,OAAgBC,GAAA,GAAGA,EAAK,KAAK,IAAIA,EAAK,IAAI,GAC1C,MAAO,KACT,EACAC,EAAM,cACN,CACE,MAAO,SACP,UAAW,SACX,QAAS,CACP,CAAE,KAAM,OAAQ,MAAO,MAAO,EAC9B,CAAE,KAAM,SAAU,MAAO,QAAS,CACpC,EACA,MAAO,KACT,EACAA,EAAM,iBACN,CACE,MAAO,QACP,UAAW,OACb,CACF,EAEMC,EAAuBC,GAAyB,SAAA,OACpD,SAASC,EAAAD,EAAO,aAAP,YAAAC,EAAmB,SAC5B,MAAMC,EAAAF,EAAO,aAAP,YAAAE,EAAmB,QACzB,GAAGF,CACL,GAEMG,EAAW,CAAC,CAAE,OAAAC,KAAkB,CACpC,KAAM,CAACC,EAAMC,CAAO,EAAIC,EAAqB,SAAA,EACvC,CAACC,EAASC,CAAU,EAAIF,WAAS,EAAK,EACtC,CAACG,EAAaC,CAAc,EAAIJ,WAAsB,CAC1D,WAAY,CACV,QAAS,EACT,SAAU,EACZ,CAAA,CACD,EAEKK,EAAY,IAAM,CACtBH,EAAW,EAAI,EACf,MAAM,6BAA6BI,EAAG,UAAUd,EAAoBW,CAAW,CAAC,CAAC,EAAE,EAChF,KAAYI,GAAAA,EAAI,MAAM,EACtB,KAAK,CAAC,CAAE,QAAAC,KAAc,CACrBT,EAAQS,CAAO,EACfN,EAAW,EAAK,EACDE,EAAA,CACb,GAAGD,EACH,WAAY,CACV,GAAGA,EAAY,WACf,MAAO,GAGT,CAAA,CACD,CAAA,CACF,CAAA,EAGLM,EAAAA,UAAU,IAAM,CACJJ,KACT,CAAC,KAAK,UAAUF,CAAW,CAAC,CAAC,EAEhC,MAAMO,EAA4C,CAACC,EAAYC,EAASC,IAAW,OAClET,EAAA,CACb,WAAAO,EACA,QAAAC,EACA,GAAGC,CAAA,CACJ,EAGGF,EAAW,aAAajB,EAAAS,EAAY,aAAZ,YAAAT,EAAwB,WAClDK,EAAQ,CAAE,CAAA,CACZ,EAGF,OACEF,GACEiB,EAAA,IAACvB,EAAA,CACC,KAAK,SACL,SAAQ,GACR,MAAO,IAAM,SACb,OAAQ,IAAM,SACd,QAAAF,EACA,OAAkB0B,GAAAA,EAAO,MAAM,KAC/B,WAAYjB,EACZ,WAAYK,EAAY,WACxB,QAAAF,EACA,SAAUS,EACV,WAAY,CACV,kBACEK,GAAAD,EAAA,IAAC,IAAE,CAAA,MAAO,CAAE,OAAQ,CAAE,EACnB,SAAOC,EAAA,aAAe,4EACzB,CAAA,EAEF,cAAeA,IAAUA,GAAA,YAAAA,EAAQ,KAAK,QAAS,gBACjD,EACA,aAAc,CAAC,CAAA,CAAA,CAIvB","x_google_ignoreList":[0]}