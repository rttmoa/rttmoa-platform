{"version":3,"file":"tableSelectCustom-26c3e703.js","sources":["../../../src/views/list/basicTable/components/tableSelectCustom.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Table } from 'antd'\r\nimport type { TableColumnsType, TableProps } from 'antd'\r\n\r\ntype TableRowSelection<T> = TableProps<T>['rowSelection']\r\n\r\ninterface DataType {\r\n\tkey: React.Key\r\n\tname: string\r\n\tage: number\r\n\taddress: string\r\n}\r\n\r\nconst columns: TableColumnsType<DataType> = [\r\n\t{\r\n\t\ttitle: 'Name',\r\n\t\tdataIndex: 'name',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Age',\r\n\t\tdataIndex: 'age',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Address',\r\n\t\tdataIndex: 'address',\r\n\t},\r\n]\r\n\r\nconst data: DataType[] = []\r\nfor (let i = 0; i < 46; i++) {\r\n\tdata.push({\r\n\t\tkey: i,\r\n\t\tname: `Edward King ${i}`,\r\n\t\tage: 32,\r\n\t\taddress: `London, Park Lane no. ${i}`,\r\n\t})\r\n}\r\n\r\n// ? 左上角选择数据操作：全选所有、反选当页、清空所有\r\nconst App: any = ({ isShow }: any) => {\r\n\tconst [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([])\r\n\r\n\tconst onSelectChange = (newSelectedRowKeys: React.Key[]) => {\r\n\t\tconsole.log('selectedRowKeys changed: ', newSelectedRowKeys)\r\n\t\tsetSelectedRowKeys(newSelectedRowKeys)\r\n\t}\r\n\r\n\tconst rowSelection: TableRowSelection<DataType> = {\r\n\t\tselectedRowKeys,\r\n\t\tonChange: onSelectChange,\r\n\t\tselections: [\r\n\t\t\tTable.SELECTION_ALL,\r\n\t\t\tTable.SELECTION_INVERT,\r\n\t\t\tTable.SELECTION_NONE,\r\n\t\t\t{\r\n\t\t\t\tkey: 'odd',\r\n\t\t\t\ttext: 'Select Odd Row',\r\n\t\t\t\tonSelect: changeableRowKeys => {\r\n\t\t\t\t\tlet newSelectedRowKeys = []\r\n\t\t\t\t\tnewSelectedRowKeys = changeableRowKeys.filter((_, index) => {\r\n\t\t\t\t\t\tif (index % 2 !== 0) {\r\n\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetSelectedRowKeys(newSelectedRowKeys)\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkey: 'even',\r\n\t\t\t\ttext: 'Select Even Row',\r\n\t\t\t\tonSelect: changeableRowKeys => {\r\n\t\t\t\t\tlet newSelectedRowKeys = []\r\n\t\t\t\t\tnewSelectedRowKeys = changeableRowKeys.filter((_, index) => {\r\n\t\t\t\t\t\tif (index % 2 !== 0) {\r\n\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetSelectedRowKeys(newSelectedRowKeys)\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\r\n\treturn isShow && <Table rowSelection={rowSelection} columns={columns} dataSource={data} />\r\n}\r\n\r\nexport default App\r\n"],"names":["columns","data","i","App","isShow","selectedRowKeys","setSelectedRowKeys","useState","rowSelection","newSelectedRowKeys","Table","changeableRowKeys","_","index","jsx"],"mappings":"slBAaA,MAAMA,EAAsC,CAC3C,CACC,MAAO,OACP,UAAW,MACZ,EACA,CACC,MAAO,MACP,UAAW,KACZ,EACA,CACC,MAAO,UACP,UAAW,SACZ,CACD,EAEMC,EAAmB,CAAA,EACzB,QAASC,EAAI,EAAGA,EAAI,GAAIA,IACvBD,EAAK,KAAK,CACT,IAAKC,EACL,KAAM,eAAeA,CAAC,GACtB,IAAK,GACL,QAAS,yBAAyBA,CAAC,EAAA,CACnC,EAIF,MAAMC,EAAW,CAAC,CAAE,OAAAC,KAAkB,CACrC,KAAM,CAACC,EAAiBC,CAAkB,EAAIC,EAAA,SAAsB,CAAE,CAAA,EAOhEC,EAA4C,CACjD,gBAAAH,EACA,SAPuBI,GAAoC,CAE3DH,EAAmBG,CAAkB,CAAA,EAMrC,WAAY,CACXC,EAAM,cACNA,EAAM,iBACNA,EAAM,eACN,CACC,IAAK,MACL,KAAM,iBACN,SAA+BC,GAAA,CAC9B,IAAIF,EAAqB,CAAA,EACzBA,EAAqBE,EAAkB,OAAO,CAACC,EAAGC,IAC7CA,EAAQ,IAAM,CAIlB,EACDP,EAAmBG,CAAkB,CACtC,CACD,EACA,CACC,IAAK,OACL,KAAM,kBACN,SAA+BE,GAAA,CAC9B,IAAIF,EAAqB,CAAA,EACzBA,EAAqBE,EAAkB,OAAO,CAACC,EAAGC,IAC7CA,EAAQ,IAAM,CAIlB,EACDP,EAAmBG,CAAkB,CACtC,CACD,CACD,CAAA,EAGD,OAAOL,GAAWU,EAAA,IAAAJ,EAAA,CAAM,aAAAF,EAA4B,QAAAR,EAAkB,WAAYC,CAAM,CAAA,CACzF"}