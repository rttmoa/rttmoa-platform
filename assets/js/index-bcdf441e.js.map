{"version":3,"file":"index-bcdf441e.js","sources":["../../../src/components/Tables/index.tsx","../../../src/hooks/useExportExcle.ts","../../../src/components/AdvancedSearchForm/index.tsx","../../../src/views/system/userManage/index.tsx"],"sourcesContent":["import useEventListener from '@/hooks/useEventListener';\r\n// import math from '@/utils/math';\r\nimport { Table } from 'antd';\r\nimport { TableProps } from 'antd/es/table/InternalTable';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { MultiTableProps } from './type';\r\nimport './index.less';\r\n\r\nexport default function Tables<T extends object>(props: MultiTableProps<T>) {\r\n\t// console.log('Tables props: ', props);\r\n\tconst { id, xScroll = false, yScroll = false, scroll, dataSource, columns, pagination, selectedRowKeys, rowSelection, updatePage, updateSelectedItem } = props;\r\n\tconst [state, setState] = useState<any>({});\r\n\r\n\tconst dataSourceLength = dataSource?.length;\r\n\tconst [x, setX] = useState(scroll?.x);\r\n\t// const [y, setY] = useState(scroll?.y)\r\n\r\n\t// 没数据的时候，表头过长，请一定要在规定的区域内，都能左右滑动表头，不能死死的规定鼠标只能在表头范围内才能滑动\r\n\tuseEffect(() => {\r\n\t\tif (xScroll && id) {\r\n\t\t\tconst parent = document.getElementById(id);\r\n\t\t\tif (parent) {\r\n\t\t\t\tconst FixedWidth = props\r\n\t\t\t\t\t.columns!.filter((item: { width: any }) => item.width)\r\n\t\t\t\t\t.map((item: { width: any }) => Number(item.width))\r\n\t\t\t\t\t.reduce((m: any, n: any) => m + n, 0);\r\n\t\t\t\tconst RemainItemArr = props.columns!.filter((item: { width: any }) => !item.width).map((item: { title: any }) => item.title!.toString().length);\r\n\t\t\t\tconst RemainItemWidth = (Math.max(...RemainItemArr) + 1) * 12 + 8 * 2 + 2;\r\n\t\t\t\tconst RemainWidth = RemainItemArr.length * RemainItemWidth;\r\n\t\t\t\t// debugger\r\n\t\t\t\t// console.log(\"sss\", parent.getBoundingClientRect().width);\r\n\t\t\t\t// 表头列数据过多时，自动可以横向滚动，不要挤压在一起\r\n\t\t\t\tsetX(Math.max(parent.getBoundingClientRect().width, FixedWidth + RemainWidth));\r\n\t\t\t}\r\n\t\t}\r\n\t}, [xScroll, id]);\r\n\r\n\t// 有数据的时候，请一定要在规定的区域内，表头死活不能上下移动，表格内容死活一定要能上下左右随意滑动\r\n\t// const handleResizeY = useCallback(() => {\r\n\t// \tif (yScroll && id) {\r\n\t// \t\tconst parent = document.getElementById(id)\r\n\t// \t\tif (parent) {\r\n\t// \t\t\tconst thead = parent.getElementsByClassName('ant-table-thead')[0]\r\n\t// \t\t\tif (thead) {\r\n\t// \t\t\t\tconst ParentHeight = parent.getBoundingClientRect().height\r\n\t// \t\t\t\tconst TheadHeight = thead.getBoundingClientRect().height\r\n\t// \t\t\t\tconst height = math.subtract(ParentHeight, TheadHeight)\r\n\t// \t\t\t\tsetY(height)\r\n\t// \t\t\t\t// debugger\r\n\t// \t\t\t\tsetTimeout(() => {\r\n\t// \t\t\t\t\tconst tbody = parent.getElementsByClassName('ant-table-body')[0]\r\n\t// \t\t\t\t\tif (tbody) (tbody as HTMLElement).style.height = height + 'px'\r\n\t// \t\t\t\t\t// 没数据的时候，请一定将“暂无数据”的UI图上下左右居中\r\n\t// \t\t\t\t\tconst placeholder = parent.getElementsByClassName('ant-table-placeholder')[0]\r\n\t// \t\t\t\t\tif (placeholder) (placeholder as HTMLElement).style.height = height + 'px'\r\n\t// \t\t\t\t}, 30)\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }, [yScroll, id, dataSourceLength])\r\n\t// 初始化\r\n\t// useEffect(() => {\r\n\t// \thandleResizeY()\r\n\t// }, [handleResizeY])\r\n\t// 监听页面缩放，重新计算高度和宽度\r\n\t// useEventListener('resize', handleResizeY)\r\n\r\n\t//* 处理行点击事件\r\n\tconst onRowClick = useCallback((record: any, index: number) => {\r\n\t\t// console.log(\"处理行点击事件 onRowClick\");\r\n\t\tif (rowSelection === 'checkbox') {\r\n\t\t\tlet selectedRowKeys = props.selectedRowKeys!;\r\n\t\t\tlet selectedIds = props.selectedIds;\r\n\t\t\tlet selectedItem = props.selectedItem;\r\n\t\t\t// if (selectedIds && selectedIds.length > 0) {\r\n\t\t\t//   const i = selectedIds.indexOf(record.id);\r\n\t\t\t//   if (i === -1) {  // 避免重复添加\r\n\t\t\t//     selectedIds && selectedIds.push(record.id);\r\n\t\t\t//     selectedRowKeys.push(index);\r\n\t\t\t// \t\tselectedItem = record\r\n\t\t\t//   } else {\r\n\t\t\t//     selectedIds.splice(i, 1);\r\n\t\t\t//     selectedRowKeys.splice(i, 1);\r\n\t\t\t// \t\tselectedItem = record\r\n\t\t\t//   }\r\n\t\t\t// } else {\r\n\t\t\t//   selectedIds = [record.id];\r\n\t\t\t//   selectedRowKeys = [index];\r\n\t\t\t//   selectedItem = record;\r\n\t\t\t// }\r\n\t\t\t// updateSelectedItem && updateSelectedItem(selectedRowKeys, selectedItem, selectedIds);\r\n\t\t} else {\r\n\t\t\tlet selectKey = [index];\r\n\t\t\tconst selectedRowKeys = props.selectedRowKeys;\r\n\t\t\tif (selectedRowKeys && selectedRowKeys[0] === index) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tupdateSelectedItem && updateSelectedItem(selectKey, record || {});\r\n\t\t}\r\n\t}, []);\r\n\r\n\t//* 处理行单选框,复选框点击事件\r\n\tconst rowChange = useCallback((selectedRowKeys: any, selectedRows: any[]) => {\r\n\t\t// console.log(\"行选择\");\r\n\t\t// console.log(\"selectedRowKeys\", selectedRowKeys) // (10) [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n\t\t// console.log('selectedRows', selectedRows) // (10) [{…}, {…}, {…}, {…}, ....]\r\n\t\tlet rowSelectProps = rowSelection;\r\n\t\tlet selectedIds: number[] = [];\r\n\t\tif (rowSelectProps === 'checkbox') {\r\n\t\t\tselectedRows.forEach((item: any) => {\r\n\t\t\t\tselectedIds.push(item._id); // * 这里是 _id\r\n\t\t\t});\r\n\t\t\tsetState({\r\n\t\t\t\tselectedRowKeys,\r\n\t\t\t\tselectedIds: selectedIds,\r\n\t\t\t\tselectedItem: selectedRows[0],\r\n\t\t\t});\r\n\t\t}\r\n\t\tupdateSelectedItem && updateSelectedItem(selectedRowKeys, selectedRows[0], selectedIds);\r\n\t}, []);\r\n\r\n\tconst rowSelectConfig: TableProps['rowSelection'] = {\r\n\t\ttype: 'radio',\r\n\t\tselectedRowKeys: selectedRowKeys, // 选择的行数据\r\n\t\tonChange: rowChange,\r\n\t\tonSelect: (record: any, selected: any, selectedRows: any) => {\r\n\t\t\tconsole.log('....');\r\n\t\t},\r\n\t\t// onSelectAll: onSelectAll,\r\n\t\t// renderCell(checked, record, index, originNode): any {\r\n\t\t// \tconsole.log('redner', checked, record, index, originNode);\r\n\t\t// }\r\n\t};\r\n\t//* 处理行选择：单选框，复选框，无\r\n\tlet rowSelect: 'checkbox' | 'radio' | false | null = rowSelection;\r\n\tif ([false, null].includes(rowSelect as any)) {\r\n\t\trowSelect = false;\r\n\t} else if (rowSelect === 'checkbox') {\r\n\t\trowSelectConfig.type = 'checkbox';\r\n\t} else {\r\n\t\trowSelect = 'radio';\r\n\t}\r\n\r\n\t// 288 + 430 + 38 = 756\r\n\r\n\tlet y = scroll?.y as number;\r\n\tconsole.log('x,y: ', x, y);\r\n\t// 389 - 76 - 38 - 32 = 243\r\n\t// if (y) y = y - 76 - 32 // 高度 - 标题 -分页器 （size=default）\r\n\tif (y) y = y - 38 - 32; // 高度 - 标题 -分页器 （size=small）\r\n\t// console.log('dataSource', dataSource && dataSource.length);\r\n\r\n\treturn (\r\n\t\t<Table<T>\r\n\t\t\tclassName='MultiTable'\r\n\t\t\t// style={{ minHeight: y > 500 ? 650 : 300 }}\r\n\t\t\t{...props}\r\n\t\t\tbordered\r\n\t\t\tcolumns={columns}\r\n\t\t\tdataSource={dataSource}\r\n\t\t\tscroll={{ x, y: y }}\r\n\t\t\trowSelection={rowSelect ? rowSelectConfig : undefined} // 行选择：checkbox|radio及 选择事件\r\n\t\t\tonRow={(record: any, index: any) => ({\r\n\t\t\t\tonClick() {\r\n\t\t\t\t\tif (!rowSelect) return;\r\n\t\t\t\t\tonRowClick(record, index);\r\n\t\t\t\t},\r\n\t\t\t})}\r\n\t\t\tpagination={false}\r\n\t\t\t// pagination={{\r\n\t\t\t// \tsize: 'default',\r\n\t\t\t// \t// style: { marginBottom: 0 }, // 防止分页器下方再留空\r\n\t\t\t// \t// 页码改变的回调，参数是改变后的页码及每页条数\r\n\t\t\t// \tonChange: (page: number, pageSize: number) => {\r\n\t\t\t// \t\tconsole.log('onChange 变化的回调', page, pageSize);\r\n\t\t\t// \t\treturn updatePage && updatePage(page!, pageSize!);\r\n\t\t\t// \t},\r\n\t\t\t// \tonShowSizeChange: (page: number, pageSize: number) => {\r\n\t\t\t// \t\t// console.log(\"onShowSizeChange 变化的回调\", current, size);\r\n\t\t\t// \t},\r\n\t\t\t// \t// hideOnSinglePage: true, // 只有一个隐藏分页器 (不需要隐藏分页器)\r\n\t\t\t// \tcurrent: pagination.page,\r\n\t\t\t// \tpageSize: pagination.pageSize,\r\n\t\t\t// \tpageSizeOptions: [5, 10, 15, 20, 50, 100, 500, 1000],\r\n\t\t\t// \ttotal: pagination.totalCount,\r\n\t\t\t// \t// showTotal: () => `共 ${pagination.totalCount} 条`,\r\n\t\t\t// \tshowTotal: () => `共 ${pagination.totalCount} 条`, // \t第 31-40 条 || 总共 27469 条\r\n\r\n\t\t\t// \tshowQuickJumper: true,\r\n\t\t\t// \tshowSizeChanger: true,\r\n\t\t\t// }}\r\n\t\t/>\r\n\t);\r\n}\r\n","import * as XLSX from 'xlsx'\r\n\r\n// 蜗牛学苑 https://www.bilibili.com/read/cv28871557/\r\nconst useExportExcle = () => {\r\n\tconst handleExportAll = (header: { [x: string]: string }, dataSource: any[], fileName: any) => {\r\n\t\tconst json = dataSource.map((item: { [x: string]: any }) => {\r\n\t\t\treturn Object.keys(item).reduce((dataSource: any, key) => {\r\n\t\t\t\tconst newKey = header[key] || key\r\n\t\t\t\tdataSource[newKey] = item[key]\r\n\t\t\t\treturn dataSource\r\n\t\t\t}, {})\r\n\t\t})\r\n\t\tconst sheet = XLSX.utils.json_to_sheet(json)\r\n\t\topenDownloadDialog(sheet2blob(sheet, undefined), `${fileName}.xlsx`)\r\n\t}\r\n\r\n\tconst openDownloadDialog = (url: string | Blob | MediaSource, saveName: string) => {\r\n\t\tif (typeof url == 'object' && url instanceof Blob) {\r\n\t\t\turl = URL.createObjectURL(url) // 创建blob地址\r\n\t\t}\r\n\t\tvar aLink: any = document.createElement('a')\r\n\t\taLink.href = url\r\n\t\taLink.download = saveName || '' // HTML5新增的属性，指定保存文件名，可以不要后缀，注意，file:///模式下不会生效\r\n\t\tvar event\r\n\t\tif (window.MouseEvent) event = new MouseEvent('click')\r\n\t\telse {\r\n\t\t\tevent = document.createEvent('MouseEvents')\r\n\t\t\tevent.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\r\n\t\t}\r\n\t\taLink.dispatchEvent(event)\r\n\t}\r\n\r\n\tconst sheet2blob = (sheet: XLSX.WorkSheet, sheetName: string | undefined) => {\r\n\t\tsheetName = sheetName || 'sheet1'\r\n\t\tvar workbook: XLSX.WorkBook = {\r\n\t\t\tSheetNames: [sheetName],\r\n\t\t\tSheets: {},\r\n\t\t}\r\n\t\tworkbook.Sheets[sheetName] = sheet // 生成excel的配置项\r\n\r\n\t\tvar wopts: XLSX.WritingOptions = {\r\n\t\t\tbookType: 'xlsx', // 要生成的文件类型\r\n\t\t\tbookSST: false, // 是否生成Shared String Table，官方解释是，如果开启生成速度会下降，但在低版本IOS设备上有更好的兼容性\r\n\t\t\ttype: 'binary',\r\n\t\t}\r\n\t\tvar wbout = XLSX.write(workbook, wopts)\r\n\t\tvar blob = new Blob([s2ab(wbout)], {\r\n\t\t\ttype: 'application/octet-stream',\r\n\t\t})\r\n\t\t// 字符串转ArrayBuffer\r\n\t\tfunction s2ab(s: string) {\r\n\t\t\tvar buf = new ArrayBuffer(s.length)\r\n\t\t\tvar view = new Uint8Array(buf)\r\n\t\t\tfor (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xff\r\n\t\t\treturn buf\r\n\t\t}\r\n\t\treturn blob\r\n\t}\r\n\r\n\treturn { handleExportAll }\r\n}\r\n\r\nexport default useExportExcle\r\n\r\n// 使用：\r\n// const header = {\r\n// \taddress: \"地址\",\r\n// \tbirthday: \"生日\",\r\n// \temail: \"邮箱\",\r\n// \tid: \"id\",\r\n// \tinterest: \"爱好\",\r\n// \tisMarried: \"婚姻状态\",\r\n// }\r\n\r\n// const userList = [\r\n// \t{\r\n// \t\t\t\"id\": 1, \"username\": \"袁丽\", \"sex\": 2, \"state\": 1, \"interest\": 2, \"isMarried\": 1, \"role_id\": 2, \"birthday\": \"2021-12-05\",\r\n// \t\t\t\"address\": \"福建省 南平市 政和县\", \"time\": \"18:34:21\", \"email\": \"a.vcdpvf@tgeycqzqt.su\", \"key\": 0\r\n// \t},\r\n\r\n// \t{\r\n// \t\t\"id\": 2, \"username\": \"邵强\", \"sex\": 1, \"state\": 1, \"interest\": 7, \"isMarried\": 1, \"role_id\": 2, \"birthday\": \"2021-12-05\",\r\n// \t\t\"address\": \"河北省 石家庄市 赵县\", \"time\": \"18:34:21\", \"email\": \"w.nygcvess@jugir.ci\", \"key\": 1\r\n// \t},\r\n// ]\r\n\r\n// <Button size=\"middle\" onClick={() => {handleExportAll(header, userList, \"用户列表\")}}>\r\n// \t导出\r\n// </Button>\r\n","import React, { ReactNode, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { DownOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\nimport { Button, Card, Checkbox, Col, DatePicker, Form, FormProps, Input, Row, Select, Space, theme, Typography } from 'antd';\r\nimport './index.less';\r\n\r\n/**\r\n * & 高级搜索表格 & 新建表单数据 Form\r\n * @param props\r\n * @returns\r\n */\r\n// 完成：待实现1：ProTable 新建按钮使用封装的 AdvancedSearchForm 组件\r\n// 完成：待实现2：用户管理中表头也需要使用 AdvancedSearchForm 组件\r\nexport type FormItemType = 'INPUT' | 'SELECT' | 'CHECKBOX' | 'TIME_START' | 'TIME_END';\r\ntype FormFieldItem = {\r\n\ttype?: 'INPUT' | 'SELECT' | 'CHECKBOX' | 'TIME_START' | 'TIME_END';\r\n\tlabel: string;\r\n\tfield: string;\r\n\tplaceholder?: string;\r\n\tlist?: any[];\r\n\tcomponent?: React.ReactNode; // 👈 支持传入完整组件\r\n};\r\ntype FormPropsType = {\r\n\tformRef: React.RefObject<HTMLDivElement>;\r\n\tname?: string; // 表示每个Form表格、必须不相同\r\n\tisSearch?: boolean; // 是否是表单搜索\r\n\tloading: boolean;\r\n\trowCount?: number; // 每行的数量\r\n\tFormListConfig?: any[]; // 表单的配置项\r\n\t// tableYHeight: any;\r\n\tFormOnFinish: (data: any) => any; // 将结果传递到父组件\r\n\tSetIsExpand: any;\r\n};\r\nconst AdvancedSearchForm = (Props: FormPropsType) => {\r\n\tconst { formRef, name = 'advanced_search', loading, FormListConfig = [], rowCount = 3, FormOnFinish, SetIsExpand } = Props;\r\n\tconst FormConfig = FormListConfig;\r\n\r\n\tconst [form] = Form.useForm();\r\n\tconst [expand, setExpand] = useState<boolean>(false); // 是否展开\r\n\tconst [isSearch, SetIsSearch] = useState<boolean>(true); // 是否是表单搜索\r\n\r\n\tfunction formateDate(time: string | number) {\r\n\t\tif (!time) return '';\r\n\t\tconst date = new Date(time);\r\n\t\tconst month = date.getMonth() < 9 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\r\n\t\tconst data = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\r\n\t\treturn `${date.getFullYear()}-${month}-${data}`; // * 2025-06-05\r\n\t}\r\n\t// 提交表单数据\r\n\tconst OnFinish = (values: any) => {\r\n\t\t// 处理字段：input、time、select、checkbox\r\n\t\t// console.log('Received values of form: ', values)\r\n\t\tconst formValue = form.getFieldsValue();\r\n\t\t// console.log('formValue', formValue)\r\n\t\tif (formValue.startTime) formValue.startTime = formateDate(formValue.startTime);\r\n\t\tif (formValue.endTime) formValue.endTime = formateDate(formValue.endTime);\r\n\t\t// console.log('formValue', formValue)\r\n\t\t// console.log('value', values)\r\n\t\tFormOnFinish && FormOnFinish(formValue);\r\n\t};\r\n\tconst OnFailed: FormProps<any>['onFinishFailed'] = errorInfo => {\r\n\t\tconsole.log('Failed:', errorInfo);\r\n\t};\r\n\r\n\tconst OnExpand = () => {\r\n\t\tsetExpand(!expand);\r\n\t\tSetIsExpand(!expand); // 父组件展开状态\r\n\t};\r\n\r\n\t// * 处理 Form.Item 字段 👈\r\n\tconst FormFields = useMemo(() => {\r\n\t\tconst colsPerRow = rowCount || 3;\r\n\t\tconst colSpan = 24 / colsPerRow;\r\n\t\tconst collapsedCount = colsPerRow === 1 ? 1 : FormConfig.length >= colsPerRow ? colsPerRow - 1 : FormConfig.length;\r\n\r\n\t\tconst shownList = expand ? FormConfig : FormConfig.slice(0, collapsedCount);\r\n\r\n\t\tconst fieldNodes = shownList.map((cfg: FormFieldItem, idx: number) => {\r\n\t\t\tconst { type, label, field, placeholder, list, component } = cfg;\r\n\r\n\t\t\tlet inputEl: React.ReactNode = null;\r\n\r\n\t\t\tif (component) {\r\n\t\t\t\t// 👈 优先使用自定义组件 {label: \"年末\", component: <Input placeholder=\"\" /> }\r\n\t\t\t\tinputEl = component;\r\n\t\t\t} else {\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\tcase 'INPUT':\r\n\t\t\t\t\t\tinputEl = <Input placeholder={placeholder} />;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'SELECT':\r\n\t\t\t\t\t\tinputEl = <Select placeholder={placeholder}>{/* {getOptionList(list)} */}</Select>;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'CHECKBOX':\r\n\t\t\t\t\t\tinputEl = <Checkbox>{label}</Checkbox>;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'TIME_START':\r\n\t\t\t\t\tcase 'TIME_END':\r\n\t\t\t\t\t\tinputEl = <DatePicker showTime format='YYYY-MM-DD HH:mm:ss' placeholder={placeholder} />;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<Col span={colSpan} key={idx}>\r\n\t\t\t\t\t<Form.Item name={field} label={label}>\r\n\t\t\t\t\t\t{inputEl}\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\t// 🔽 渲染操作按钮（补空位 + 查询/重置）\r\n\t\tlet actionNode: React.ReactNode[] = [];\r\n\t\tif (isSearch) {\r\n\t\t\tconst remainder = shownList.length % colsPerRow;\r\n\t\t\tconst fillCount = remainder === 0 ? colsPerRow - 1 : colsPerRow - remainder - 1;\r\n\r\n\t\t\tconst blankCols = Array.from({ length: fillCount }, (_, i) => <Col span={colSpan} key={`blank-${i}`} />);\r\n\r\n\t\t\tconst actions = (\r\n\t\t\t\t<Col span={colSpan} key='actions' style={{ textAlign: 'right' }}>\r\n\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t<Space size='small'>\r\n\t\t\t\t\t\t\t<Button type='primary' htmlType='submit'>\r\n\t\t\t\t\t\t\t\t查询\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button onClick={() => form.resetFields()}>重置</Button>\r\n\t\t\t\t\t\t\t{FormConfig.length < colsPerRow ? null : (\r\n\t\t\t\t\t\t\t\t<Button type='link' className='text-[12px]' onClick={OnExpand}>\r\n\t\t\t\t\t\t\t\t\t{expand ? '关闭' : '展开'} <DownOutlined />\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t);\r\n\r\n\t\t\tactionNode = [...blankCols, actions];\r\n\t\t}\r\n\r\n\t\treturn [...fieldNodes, ...actionNode];\r\n\t}, [expand, FormConfig, rowCount, isSearch]);\r\n\r\n\tlet layout = {\r\n\t\tlabelCol: { span: 8 },\r\n\t\twrapperCol: { span: 16 },\r\n\t};\r\n\tlet maxWidth = { maxWidth: 600 };\r\n\treturn (\r\n\t\t<Card id={'AdvancedSearchForm'} size='small' hoverable ref={formRef}>\r\n\t\t\t<Form size='middle' layout='horizontal' disabled={loading} name={name} form={form} variant='outlined' onFinish={OnFinish} onFinishFailed={OnFailed}>\r\n\t\t\t\t<Row gutter={24}>{FormFields}</Row>\r\n\t\t\t</Form>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default AdvancedSearchForm;\r\n","import React, { useEffect, useRef, useState } from 'react';\nimport { message, Modal, Form, Pagination } from 'antd';\nimport MultiTable from '@/components/Tables';\nimport UserFormModal from './components/UserFormModal';\nimport { newFormList } from './components/Form_Config';\nimport { selectdProps } from '@/components/SelectFilter';\nimport useExportExcle from '@/hooks/useExportExcle';\nimport './index.less';\nimport { columnConfig } from './components/Table_Column_Config';\nimport TableHeader from './components/TableHeader';\nimport AdvancedSearchForm from '@/components/AdvancedSearchForm';\nimport { DelMoreUser, DelUser, GetUserManagerList } from '@/api/modules/system/common';\n\ninterface UserListResults {\n\tcode?: number;\n\tdata: {\n\t\tlist: [];\n\t\tcurrent?: number;\n\t\tpageSize?: number;\n\t\ttotal?: number;\n\t\tmessage?: string;\n\t};\n\tmsg?: string;\n}\n\ninterface Pagination {\n\tpage: number;\n\tpageSize: number;\n\ttotalCount?: number;\n}\n\n// 完成： 查询参数的处理\n// 完成： 1、注意：向后台传递的参数有：表头搜索、表格过滤、表格排序、分页\n// 完成： 2、页码和搜索条件变动 去服务端取数据 searchFilter + pagination\n// 完成： 弹窗内 Form 的样式 — 使用 AdvancedSearchForm 组件中的 Row、Col组件\n// 完成： 如何封装Form、其中input等组件如何传值\n// 完成： 表格和表头的 高度\n// * 列配置\nconst UserManage: React.FC = () => {\n\tconst { handleExportAll } = useExportExcle();\n\tconst [form] = Form.useForm();\n\tconst [multiForm] = Form.useForm();\n\n\tconst formRef = useRef<HTMLDivElement>(null);\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst paginationRef = useRef<HTMLDivElement>(null);\n\tconst toolBarRef = useRef<HTMLDivElement>(null);\n\n\t// * 处理角色\n\tconst [roleObj, setroleObj] = useState<any>({}); // 角色对象： {0: '普通用户', 2: '前端开发', 5: '管理员'}\n\tconst [roleAll, setroleAll] = useState([]); // 所有角色的集合\n\n\t// * 表格查询：表单搜索条件\n\tconst [searchFilter, setSearchFilter] = useState({}); // * {user_name: '张三', sex: 2}\n\tconst [filterResult, setfilterResult] = useState<selectdProps>({ state: '1', type: ['1', '3'] });\n\n\t// * Table 表格\n\tconst [loading, setLoading] = useState(false);\n\tconst [userList, setUserList] = useState<any>([]);\n\tconst [pagination, setPagination] = useState<Pagination>({ page: 1, pageSize: 10, totalCount: 0 }); // 分页\n\tconst [selectRowItem, setSelectRowItem] = useState<any>({ selectedRowKeys: [], selectedIds: [], selectedItem: {} });\n\n\t// * 处理弹窗\n\tconst [modalIsVisible, setModalIsVisible] = useState<boolean>(false);\n\tconst [modalTitle, setModalTitle] = useState<string>('');\n\tconst [modalType, setModalType] = useState<string>('');\n\tconst [modalUserInfo, setModalUserInfo] = useState({});\n\n\tconst [scrollY, setScrollY] = useState(0);\n\tconst [isExpand, SetIsExpand] = useState(false); // 获取子组件是否展开\n\n\t// 表格高度自适应\n\tuseEffect(() => {\n\t\tconst updateHeight = () => {\n\t\t\tconst containerH = containerRef.current?.clientHeight || 0; // 可视区高\n\t\t\tconst formH = formRef.current?.clientHeight || 0; // 表单高\n\t\t\tconst toolBarH = toolBarRef.current?.clientHeight || 0; // 表单高\n\t\t\tconst paginationH = paginationRef.current?.clientHeight || 0; // 分页高\n\t\t\tconst tableHeight = containerH - formH - toolBarH - paginationH; // 100 | 120 | 140\n\t\t\tlet tableh = tableHeight > 200 ? tableHeight : 200;\n\t\t\tsetScrollY(tableh);\n\t\t};\n\t\tupdateHeight();\n\t\twindow.addEventListener('resize', updateHeight);\n\t\treturn () => window.removeEventListener('resize', updateHeight);\n\t}, [isExpand]);\n\n\tasync function GetData() {\n\t\tsetLoading(true);\n\t\t// console.log('参数 pagination：', pagination)\n\t\tlet { page, pageSize } = pagination;\n\t\tlet searchParams = { page, pageSize, ...searchFilter };\n\t\tconst result: any = await GetUserManagerList(searchParams);\n\t\tconst userlist = result?.data?.list?.map((item: any, index: number) => ({ ...item, key: index + 1 }));\n\t\tsetUserList(userlist || []);\n\t\tsetPagination({\n\t\t\tpage: page || 1,\n\t\t\tpageSize: pageSize || 10,\n\t\t\ttotalCount: result?.data?.total || 0,\n\t\t});\n\t\tsetLoading(false);\n\t}\n\tuseEffect(() => {\n\t\tGetData();\n\t}, [pagination.page, pagination.pageSize, searchFilter]);\n\n\t// * 操作 — 员工： 新建、编辑、详情、删除  按钮\n\tconst handleOperator = async (type: string, item: any) => {\n\t\t// console.log('handleOperator', type, item)\n\t\tif (type === 'create') {\n\t\t\tsetModalIsVisible(true);\n\t\t\tsetModalTitle('新建用户');\n\t\t\tsetModalType(type);\n\t\t\tsetModalUserInfo({});\n\t\t} else if (['edit', 'detail'].includes(type)) {\n\t\t\tsetModalIsVisible(true);\n\t\t\tsetModalTitle(type === 'edit' ? '编辑用户' : '查看详情');\n\t\t\tsetModalType(type);\n\t\t\tsetModalUserInfo(item);\n\t\t} else if (type === 'delete') {\n\t\t\t// 删除及删除更多操作：只是参数不一致\n\t\t\t// 1、参数传递到后台\n\t\t\t// 2、获取响应结果、提示响应结果\n\t\t\t// 3、重新获取数据\n\t\t\tconst hide = message.loading('正在删除');\n\t\t\ttry {\n\t\t\t\tconst result: any = await DelUser(item._id);\n\t\t\t\tif (result) {\n\t\t\t\t\thide();\n\t\t\t\t\tGetData();\n\t\t\t\t\tmessage.success(result.data.message);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thide();\n\t\t\t\tmessage.error('删除失败、请再试一次！');\n\t\t\t}\n\t\t} else if (type === 'moreDelete') {\n\t\t\tconst hide = message.loading('正在删除');\n\t\t\ttry {\n\t\t\t\tconst res: any = await DelMoreUser(selectRowItem.selectedIds || []);\n\t\t\t\tif (res) {\n\t\t\t\t\thide();\n\t\t\t\t\tsetSelectRowItem({ selectedRowKeys: [], selectedIds: [], selectedItem: {} });\n\t\t\t\t\tGetData();\n\t\t\t\t\tmessage.success(res.data.message);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thide();\n\t\t\t\tmessage.error('删除失败、请再试一次！');\n\t\t\t}\n\t\t}\n\t};\n\t// * 操作 — 员工： 新建、编辑、详情  弹窗内容提交\n\tconst handleModalSubmit = () => {\n\t\t// 1、获取form字段值 并 过滤出有值的字段\n\t\t// 2、字段值传递接口、获取接口结果、并提示出信息\n\t\t// 3、重置Modal信息\n\t\t// 4、重新请求，根据页码等条件\n\t\tlet type = modalType;\n\t\tlet formData = form.getFieldsValue();\n\t\tconsole.log('弹窗Modal：', formData);\n\t\t// let res = type === 'create' ? createUser(formData) : editUser(formData)\n\n\t\tsetModalTitle('');\n\t\tsetModalType('');\n\t\tsetModalIsVisible(false);\n\t\tsetModalUserInfo({});\n\t\tmessage.info('待实现');\n\t};\n\n\t// 导出EXCEL表头\n\tconst header = {\n\t\taddress: '地址',\n\t\tbirthday: '生日',\n\t\temail: '邮箱',\n\t\tid: 'id',\n\t\tinterest: '爱好',\n\t\tisMarried: '婚姻状态',\n\t};\n\t// 表头属性\n\tlet TableHeaderConfig = {\n\t\tselectRowItem,\n\t\theader,\n\t\tuserList,\n\t\thandleOperator,\n\t\thandleExportAll,\n\t};\n\tconst fakeData = true;\n\n\tconsole.log('总高度：', containerRef?.current?.clientHeight);\n\tconsole.log('表单高度: ', formRef.current?.clientHeight);\n\tconsole.log('表格高度：', scrollY);\n\treturn (\n\t\t<div className='h-full flex flex-col overflow-hidden' ref={containerRef}>\n\t\t\t<AdvancedSearchForm\n\t\t\t\tformRef={formRef}\n\t\t\t\tloading={loading}\n\t\t\t\trowCount={3} // 每行数量\n\t\t\t\tFormListConfig={newFormList} // Form配置项\n\t\t\t\t// Form表单提交结果：表单是否有参数变化\n\t\t\t\tFormOnFinish={(filterParams = {}) => {\n\t\t\t\t\tconst filtered = Object.fromEntries(\n\t\t\t\t\t\tObject.entries(filterParams).filter(([_, value]) => value !== undefined && value !== null && !(typeof value === 'string' && value.trim() === ''))\n\t\t\t\t\t);\n\t\t\t\t\tsetSearchFilter(filtered || {});\n\t\t\t\t}}\n\t\t\t\tSetIsExpand={SetIsExpand}\n\t\t\t/>\n\t\t\t<div className='h-full flex-1  mt-[12px] px-[24px] rounded-lg bg-white'>\n\t\t\t\t<div className='flex justify-between px-[18px] py-[10px]' ref={toolBarRef}>\n\t\t\t\t\t<span className='text-[14px] font-mono'>用户列表</span>\n\t\t\t\t\t<TableHeader {...TableHeaderConfig} />\n\t\t\t\t</div>\n\t\t\t\t<MultiTable<any> // Table 👈\n\t\t\t\t\tid='cart-scrollTable'\n\t\t\t\t\tsize='small' // small | default\n\t\t\t\t\tloading={loading}\n\t\t\t\t\txScroll\n\t\t\t\t\tscroll={{ x: 'max-content', y: scrollY }} // 550   '100%'\n\t\t\t\t\tsticky={{ offsetHeader: 0 }}\n\t\t\t\t\trowSelection='checkbox' // checkbox | radio\n\t\t\t\t\tcolumns={fakeData ? columnConfig(fakeData, roleObj, handleOperator) : columnConfig()}\n\t\t\t\t\tupdateSelectedItem={(selectedRowKeys: any, selectedRows: any, selectedIds: any) => {\n\t\t\t\t\t\tsetSelectRowItem({\n\t\t\t\t\t\t\tselectedRowKeys,\n\t\t\t\t\t\t\tselectedIds: selectedIds && selectedIds.length > 0 ? selectedIds : [],\n\t\t\t\t\t\t\tselectedRows,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\tupdatePage={(page, pageSize) => {\n\t\t\t\t\t\tsetPagination((state: Pagination) => ({ ...state, page, pageSize }));\n\t\t\t\t\t}}\n\t\t\t\t\tdataSource={userList}\n\t\t\t\t\tpagination={pagination}\n\t\t\t\t\tselectedRowKeys={selectRowItem.selectedRowKeys}\n\t\t\t\t\tselectedIds={selectRowItem.selectedIds}\n\t\t\t\t\tselectedItem={selectRowItem.selectedItem}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className='flex justify-end rounded-lg px-[20px] pb-[12px] bg-white' ref={paginationRef}>\n\t\t\t\t<Pagination\n\t\t\t\t\tsize='default'\n\t\t\t\t\tshowQuickJumper\n\t\t\t\t\tshowSizeChanger\n\t\t\t\t\tonChange={(page: number, pageSize: number) => {\n\t\t\t\t\t\tsetPagination({ ...pagination, page, pageSize });\n\t\t\t\t\t}}\n\t\t\t\t\tcurrent={pagination.page}\n\t\t\t\t\tpageSize={pagination.pageSize}\n\t\t\t\t\tpageSizeOptions={[5, 10, 15, 20, 50, 100, 500, 1000]}\n\t\t\t\t\ttotal={pagination.totalCount}\n\t\t\t\t\tshowTotal={() => `第 ${pagination.page} 页， 共 ${pagination.totalCount} 条`} // \t第 31-40 条 || 总共 27469 条\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<Modal\n\t\t\t\twidth={800}\n\t\t\t\theight={800}\n\t\t\t\ttitle={modalTitle}\n\t\t\t\topen={modalIsVisible}\n\t\t\t\tonOk={handleModalSubmit}\n\t\t\t\tonCancel={() => {\n\t\t\t\t\tsetModalTitle('');\n\t\t\t\t\tsetModalType('');\n\t\t\t\t\tsetModalIsVisible(false);\n\t\t\t\t\tsetModalUserInfo({});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<UserFormModal form={form} roles={roleAll} userInfo={modalUserInfo} type={modalType} />\n\t\t\t</Modal>\n\t\t</div>\n\t);\n};\nexport default UserManage;\n"],"names":["Tables","props","id","xScroll","yScroll","scroll","dataSource","columns","pagination","selectedRowKeys","rowSelection","updatePage","updateSelectedItem","state","setState","useState","x","setX","useEffect","parent","FixedWidth","item","m","n","RemainItemArr","RemainItemWidth","RemainWidth","onRowClick","useCallback","record","index","selectKey","rowChange","selectedRows","rowSelectProps","selectedIds","rowSelectConfig","selected","rowSelect","y","jsx","Table","useExportExcle","handleExportAll","header","fileName","json","map","Object","keys","reduce","key","newKey","sheet","XLSX","json_to_sheet","openDownloadDialog","sheet2blob","url","saveName","Blob","URL","createObjectURL","aLink","document","createElement","href","download","event","window","MouseEvent","createEvent","initMouseEvent","dispatchEvent","sheetName","workbook","SheetNames","Sheets","wopts","bookType","bookSST","type","wbout","blob","s2ab","s","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","AdvancedSearchForm","Props","formRef","name","loading","FormListConfig","rowCount","FormOnFinish","SetIsExpand","FormConfig","form","Form","expand","setExpand","isSearch","SetIsSearch","formateDate","time","date","month","data","OnFinish","values","formValue","OnFailed","errorInfo","OnExpand","FormFields","useMemo","colsPerRow","colSpan","collapsedCount","shownList","fieldNodes","cfg","idx","label","field","placeholder","list","component","inputEl","Input","Select","Checkbox","DatePicker","Col","actionNode","remainder","fillCount","blankCols","_","actions","jsxs","Space","Button","DownOutlined","Card","Row","UserManage","useRef","containerRef","paginationRef","toolBarRef","roleObj","setroleObj","roleAll","setroleAll","searchFilter","setSearchFilter","setLoading","userList","setUserList","setPagination","selectRowItem","setSelectRowItem","modalIsVisible","setModalIsVisible","modalTitle","setModalTitle","modalType","setModalType","modalUserInfo","setModalUserInfo","scrollY","setScrollY","isExpand","updateHeight","containerH","_a","formH","_b","toolBarH","_c","paginationH","_d","tableHeight","tableh","GetData","page","pageSize","searchParams","result","GetUserManagerList","userlist","handleOperator","hide","message","DelUser","res","DelMoreUser","handleModalSubmit","TableHeaderConfig","fakeData","newFormList","filterParams","filtered","value","TableHeader","MultiTable","columnConfig","Pagination","Modal","UserFormModal"],"mappings":"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"}