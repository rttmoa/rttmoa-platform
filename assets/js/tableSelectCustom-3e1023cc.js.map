{"version":3,"file":"tableSelectCustom-3e1023cc.js","sources":["../../../src/views/list/basicTable/components/tableSelectCustom.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Table } from \"antd\";\nimport type { TableColumnsType, TableProps } from \"antd\";\n\ntype TableRowSelection<T> = TableProps<T>[\"rowSelection\"];\n\ninterface DataType {\n  key: React.Key;\n  name: string;\n  age: number;\n  address: string;\n}\n\nconst columns: TableColumnsType<DataType> = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\"\n  },\n  {\n    title: \"Age\",\n    dataIndex: \"age\"\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\"\n  }\n];\n\nconst data: DataType[] = [];\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`\n  });\n}\n\n// ? 左上角选择数据操作：全选所有、反选当页、清空所有\nconst App: any = ({ isShow }: any) => {\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n\n  const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n    console.log(\"selectedRowKeys changed: \", newSelectedRowKeys);\n    setSelectedRowKeys(newSelectedRowKeys);\n  };\n\n  const rowSelection: TableRowSelection<DataType> = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    selections: [\n      Table.SELECTION_ALL,\n      Table.SELECTION_INVERT,\n      Table.SELECTION_NONE,\n      {\n        key: \"odd\",\n        text: \"Select Odd Row\",\n        onSelect: changeableRowKeys => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changeableRowKeys.filter((_, index) => {\n            if (index % 2 !== 0) {\n              return false;\n            }\n            return true;\n          });\n          setSelectedRowKeys(newSelectedRowKeys);\n        }\n      },\n      {\n        key: \"even\",\n        text: \"Select Even Row\",\n        onSelect: changeableRowKeys => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changeableRowKeys.filter((_, index) => {\n            if (index % 2 !== 0) {\n              return true;\n            }\n            return false;\n          });\n          setSelectedRowKeys(newSelectedRowKeys);\n        }\n      }\n    ]\n  };\n\n  return isShow && <Table rowSelection={rowSelection} columns={columns} dataSource={data} />;\n};\n\nexport default App;\n"],"names":["columns","data","i","App","isShow","selectedRowKeys","setSelectedRowKeys","useState","rowSelection","newSelectedRowKeys","Table","changeableRowKeys","_","index","jsx"],"mappings":"6ZAaA,MAAMA,EAAsC,CAC1C,CACE,MAAO,OACP,UAAW,MACb,EACA,CACE,MAAO,MACP,UAAW,KACb,EACA,CACE,MAAO,UACP,UAAW,SACb,CACF,EAEMC,EAAmB,CAAA,EACzB,QAASC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAK,KAAK,CACR,IAAKC,EACL,KAAM,eAAeA,CAAC,GACtB,IAAK,GACL,QAAS,yBAAyBA,CAAC,EAAA,CACpC,EAIH,MAAMC,EAAW,CAAC,CAAE,OAAAC,KAAkB,CACpC,KAAM,CAACC,EAAiBC,CAAkB,EAAIC,EAAA,SAAsB,CAAE,CAAA,EAOhEC,EAA4C,CAChD,gBAAAH,EACA,SAPsBI,GAAoC,CAE1DH,EAAmBG,CAAkB,CAAA,EAMrC,WAAY,CACVC,EAAM,cACNA,EAAM,iBACNA,EAAM,eACN,CACE,IAAK,MACL,KAAM,iBACN,SAA+BC,GAAA,CAC7B,IAAIF,EAAqB,CAAA,EACzBA,EAAqBE,EAAkB,OAAO,CAACC,EAAGC,IAC5CA,EAAQ,IAAM,CAInB,EACDP,EAAmBG,CAAkB,CACvC,CACF,EACA,CACE,IAAK,OACL,KAAM,kBACN,SAA+BE,GAAA,CAC7B,IAAIF,EAAqB,CAAA,EACzBA,EAAqBE,EAAkB,OAAO,CAACC,EAAGC,IAC5CA,EAAQ,IAAM,CAInB,EACDP,EAAmBG,CAAkB,CACvC,CACF,CACF,CAAA,EAGF,OAAOL,GAAWU,EAAA,IAAAJ,EAAA,CAAM,aAAAF,EAA4B,QAAAR,EAAkB,WAAYC,CAAM,CAAA,CAC1F"}