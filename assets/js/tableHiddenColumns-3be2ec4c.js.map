{"version":3,"file":"tableHiddenColumns-3be2ec4c.js","sources":["../../../src/views/list/basicTable/components/tableHiddenColumns.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Divider, Table, Checkbox } from \"antd\";\nimport type { CheckboxOptionType, TableColumnsType } from \"antd\";\n\ninterface DataType {\n  key: React.Key;\n  name: string;\n  age: number;\n  address: string;\n}\n\nconst columns: TableColumnsType<DataType> = [\n  { title: \"Column 1\", dataIndex: \"address\", key: \"1\" },\n  { title: \"Column 2\", dataIndex: \"address\", key: \"2\" },\n  { title: \"Column 3\", dataIndex: \"address\", key: \"3\" },\n  { title: \"Column 4\", dataIndex: \"address\", key: \"4\" },\n  { title: \"Column 5\", dataIndex: \"address\", key: \"5\" },\n  { title: \"Column 6\", dataIndex: \"address\", key: \"6\" },\n  { title: \"Column 7\", dataIndex: \"address\", key: \"7\" },\n  { title: \"Column 8\", dataIndex: \"address\", key: \"8\" }\n];\n\nconst data: DataType[] = [\n  {\n    key: \"1\",\n    name: \"John Brown\",\n    age: 32,\n    address: \"New York Park\"\n  },\n  {\n    key: \"2\",\n    name: \"Jim Green\",\n    age: 40,\n    address: \"London Park\"\n  }\n];\n\nconst defaultCheckedList = columns.map(item => item.key as string);\n\nconst App: any = ({ isShow }: any) => {\n  const [checkedList, setCheckedList] = useState(defaultCheckedList);\n\n  const options = columns.map(({ key, title }) => ({\n    label: title,\n    value: key\n  }));\n\n  const newColumns = columns.map(item => ({\n    ...item,\n    hidden: !checkedList.includes(item.key as string)\n  }));\n\n  return (\n    isShow && (\n      <>\n        <Divider>Columns displayed</Divider>\n        <Checkbox.Group\n          value={checkedList}\n          options={options as CheckboxOptionType[]}\n          onChange={value => {\n            setCheckedList(value as string[]);\n          }}\n        />\n\n        <Table columns={newColumns} dataSource={data} style={{ marginTop: 24 }} />\n      </>\n    )\n  );\n};\n\nexport default App;\n"],"names":["columns","data","defaultCheckedList","item","App","isShow","checkedList","setCheckedList","useState","options","key","title","newColumns","jsxs","Fragment","jsx","Divider","Checkbox","value","Table"],"mappings":"gbAWA,MAAMA,EAAsC,CAC1C,CAAE,MAAO,WAAY,UAAW,UAAW,IAAK,GAAI,EACpD,CAAE,MAAO,WAAY,UAAW,UAAW,IAAK,GAAI,EACpD,CAAE,MAAO,WAAY,UAAW,UAAW,IAAK,GAAI,EACpD,CAAE,MAAO,WAAY,UAAW,UAAW,IAAK,GAAI,EACpD,CAAE,MAAO,WAAY,UAAW,UAAW,IAAK,GAAI,EACpD,CAAE,MAAO,WAAY,UAAW,UAAW,IAAK,GAAI,EACpD,CAAE,MAAO,WAAY,UAAW,UAAW,IAAK,GAAI,EACpD,CAAE,MAAO,WAAY,UAAW,UAAW,IAAK,GAAI,CACtD,EAEMC,EAAmB,CACvB,CACE,IAAK,IACL,KAAM,aACN,IAAK,GACL,QAAS,eACX,EACA,CACE,IAAK,IACL,KAAM,YACN,IAAK,GACL,QAAS,aACX,CACF,EAEMC,EAAqBF,EAAQ,IAAIG,GAAQA,EAAK,GAAa,EAE3DC,EAAW,CAAC,CAAE,OAAAC,KAAkB,CACpC,KAAM,CAACC,EAAaC,CAAc,EAAIC,WAASN,CAAkB,EAE3DO,EAAUT,EAAQ,IAAI,CAAC,CAAE,IAAAU,EAAK,MAAAC,MAAa,CAC/C,MAAOA,EACP,MAAOD,CACP,EAAA,EAEIE,EAAaZ,EAAQ,IAAaG,IAAA,CACtC,GAAGA,EACH,OAAQ,CAACG,EAAY,SAASH,EAAK,GAAa,CAChD,EAAA,EAEF,OACEE,GAEIQ,EAAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAAAC,EAAAA,IAACC,GAAQ,SAAiB,mBAAA,CAAA,EAC1BD,EAAA,IAACE,EAAS,MAAT,CACC,MAAOX,EACP,QAAAG,EACA,SAAmBS,GAAA,CACjBX,EAAeW,CAAiB,CAClC,CAAA,CACF,EAEAH,EAAAA,IAACI,EAAM,CAAA,QAASP,EAAY,WAAYX,EAAM,MAAO,CAAE,UAAW,EAAM,CAAA,CAAA,CAC1E,CAAA,CAAA,CAGN"}