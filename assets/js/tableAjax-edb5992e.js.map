{"version":3,"file":"tableAjax-edb5992e.js","sources":["../../../src/views/list/basicTable/components/tableAjax.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'antd'\r\nimport type { GetProp, TableProps } from 'antd'\r\nimport qs from 'qs'\r\nimport { MyComponentProps } from '..'\r\n\r\ntype ColumnsType<T> = TableProps<T>['columns']\r\ntype TablePaginationConfig = Exclude<GetProp<TableProps, 'pagination'>, boolean>\r\n\r\ninterface DataType {\r\n\tdescription: string\r\n\tname: {\r\n\t\tfirst: string\r\n\t\tlast: string\r\n\t}\r\n\tgender: string\r\n\temail: string\r\n\tlogin: {\r\n\t\tuuid: string\r\n\t}\r\n}\r\n\r\ninterface TableParams {\r\n\tpagination?: TablePaginationConfig\r\n\tsortField?: string\r\n\tsortOrder?: string\r\n\tfilters?: Parameters<GetProp<TableProps, 'onChange'>>[1]\r\n}\r\n\r\nconst columns: ColumnsType<DataType> = [\r\n\t{\r\n\t\ttitle: 'Name',\r\n\t\tdataIndex: 'name',\r\n\t\tsorter: true,\r\n\t\trender: name => `${name.first} ${name.last}`,\r\n\t\twidth: '20%',\r\n\t},\r\n\tTable.EXPAND_COLUMN, // FIXME: 可展开列\r\n\t{\r\n\t\ttitle: 'Gender',\r\n\t\tdataIndex: 'gender',\r\n\t\tfilters: [\r\n\t\t\t{ text: 'Male', value: 'male' },\r\n\t\t\t{ text: 'Female', value: 'female' },\r\n\t\t],\r\n\t\twidth: '20%',\r\n\t},\r\n\tTable.SELECTION_COLUMN, // FIXME: 选择框添加属性\r\n\t{\r\n\t\ttitle: 'Email',\r\n\t\tdataIndex: 'email',\r\n\t},\r\n]\r\n\r\nconst getRandomuserParams = (params: TableParams) => ({\r\n\tresults: params.pagination?.pageSize,\r\n\tpage: params.pagination?.current,\r\n\t...params,\r\n})\r\n\r\nconst App: React.FC<MyComponentProps> = ({ isShow }) => {\r\n\tconst [data, setData] = useState<DataType[]>()\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [tableParams, setTableParams] = useState<TableParams>({\r\n\t\tpagination: {\r\n\t\t\tcurrent: 1,\r\n\t\t\tpageSize: 10,\r\n\t\t},\r\n\t})\r\n\r\n\tconst fetchData = () => {\r\n\t\tsetLoading(true)\r\n\t\tfetch(`https://randomuser.me/api?${qs.stringify(getRandomuserParams(tableParams))}`)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(({ results }) => {\r\n\t\t\t\tsetData(results)\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t\tsetTableParams({\r\n\t\t\t\t\t...tableParams,\r\n\t\t\t\t\tpagination: {\r\n\t\t\t\t\t\t...tableParams.pagination,\r\n\t\t\t\t\t\ttotal: 200,\r\n\t\t\t\t\t\t// 200 is mock data, you should read it from server\r\n\t\t\t\t\t\t// total: data.totalCount,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchData()\r\n\t}, [JSON.stringify(tableParams)])\r\n\r\n\t// TableProps['onChange'] -> any\r\n\tconst handleTableChange: any = (pagination: { pageSize: number | undefined }, filters: any, sorter: React.SetStateAction<TableParams>) => {\r\n\t\tsetTableParams({\r\n\t\t\tpagination,\r\n\t\t\tfilters,\r\n\t\t\t...sorter,\r\n\t\t})\r\n\r\n\t\t// `dataSource` is useless since `pageSize` changed\r\n\t\tif (pagination.pageSize !== tableParams.pagination?.pageSize) {\r\n\t\t\tsetData([])\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\tisShow && (\r\n\t\t\t<Table\r\n\t\t\t\tsize=\"middle\"\r\n\t\t\t\tbordered\r\n\t\t\t\ttitle={() => 'Header'}\r\n\t\t\t\tfooter={() => 'Footer'}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\trowKey={record => record.login.uuid}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t\tpagination={tableParams.pagination}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\tonChange={handleTableChange}\r\n\t\t\t\texpandable={{\r\n\t\t\t\t\texpandedRowRender: record => <p style={{ margin: 0 }}>{record.description || 'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.'}</p>,\r\n\t\t\t\t\trowExpandable: record => record?.name.first != 'Not Expandable',\r\n\t\t\t\t}}\r\n\t\t\t\trowSelection={{}} // FIXME: 选择框需要添加的属性\r\n\t\t\t/>\r\n\t\t)\r\n\t)\r\n}\r\n\r\nexport default App\r\n"],"names":["columns","name","Table","getRandomuserParams","params","_a","_b","App","isShow","data","setData","useState","loading","setLoading","tableParams","setTableParams","fetchData","qs","res","results","useEffect","handleTableChange","pagination","filters","sorter","jsx","record"],"mappings":"w0BA6BA,MAAMA,EAAiC,CACtC,CACC,MAAO,OACP,UAAW,OACX,OAAQ,GACR,OAAgBC,GAAA,GAAGA,EAAK,KAAK,IAAIA,EAAK,IAAI,GAC1C,MAAO,KACR,EACAC,EAAM,cACN,CACC,MAAO,SACP,UAAW,SACX,QAAS,CACR,CAAE,KAAM,OAAQ,MAAO,MAAO,EAC9B,CAAE,KAAM,SAAU,MAAO,QAAS,CACnC,EACA,MAAO,KACR,EACAA,EAAM,iBACN,CACC,MAAO,QACP,UAAW,OACZ,CACD,EAEMC,EAAuBC,GAAyB,SAAA,OACrD,SAASC,EAAAD,EAAO,aAAP,YAAAC,EAAmB,SAC5B,MAAMC,EAAAF,EAAO,aAAP,YAAAE,EAAmB,QACzB,GAAGF,CACJ,GAEMG,EAAkC,CAAC,CAAE,OAAAC,KAAa,CACvD,KAAM,CAACC,EAAMC,CAAO,EAAIC,EAAqB,SAAA,EACvC,CAACC,EAASC,CAAU,EAAIF,WAAS,EAAK,EACtC,CAACG,EAAaC,CAAc,EAAIJ,WAAsB,CAC3D,WAAY,CACX,QAAS,EACT,SAAU,EACX,CAAA,CACA,EAEKK,EAAY,IAAM,CACvBH,EAAW,EAAI,EACf,MAAM,6BAA6BI,EAAG,UAAUd,EAAoBW,CAAW,CAAC,CAAC,EAAE,EACjF,KAAYI,GAAAA,EAAI,MAAM,EACtB,KAAK,CAAC,CAAE,QAAAC,KAAc,CACtBT,EAAQS,CAAO,EACfN,EAAW,EAAK,EACDE,EAAA,CACd,GAAGD,EACH,WAAY,CACX,GAAGA,EAAY,WACf,MAAO,GAGR,CAAA,CACA,CAAA,CACD,CAAA,EAGHM,EAAAA,UAAU,IAAM,CACLJ,KACR,CAAC,KAAK,UAAUF,CAAW,CAAC,CAAC,EAGhC,MAAMO,EAAyB,CAACC,EAA8CC,EAAcC,IAA8C,OAC1HT,EAAA,CACd,WAAAO,EACA,QAAAC,EACA,GAAGC,CAAA,CACH,EAGGF,EAAW,aAAajB,EAAAS,EAAY,aAAZ,YAAAT,EAAwB,WACnDK,EAAQ,CAAE,CAAA,CACX,EAGD,OACCF,GACCiB,EAAA,IAACvB,EAAA,CACA,KAAK,SACL,SAAQ,GACR,MAAO,IAAM,SACb,OAAQ,IAAM,SACd,QAAAF,EACA,OAAkB0B,GAAAA,EAAO,MAAM,KAC/B,WAAYjB,EACZ,WAAYK,EAAY,WACxB,QAAAF,EACA,SAAUS,EACV,WAAY,CACX,kBAA6BK,GAAAD,EAAA,IAAC,IAAE,CAAA,MAAO,CAAE,OAAQ,CAAE,EAAI,SAAOC,EAAA,aAAe,4EAA6E,CAAA,EAC1J,cAAeA,IAAUA,GAAA,YAAAA,EAAQ,KAAK,QAAS,gBAChD,EACA,aAAc,CAAC,CAAA,CAAA,CAInB"}