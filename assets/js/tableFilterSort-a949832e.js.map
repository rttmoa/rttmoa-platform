{"version":3,"file":"tableFilterSort-a949832e.js","sources":["../../../src/views/list/basicTable/components/tableFilterSort.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Table } from 'antd'\r\nimport type { TableColumnsType, TableProps } from 'antd'\r\n\r\ninterface DataType {\r\n\tkey: React.Key\r\n\tname: string\r\n\tage: number\r\n\taddress: string\r\n}\r\n\r\nconst columns: TableColumnsType<DataType> = [\r\n\t{\r\n\t\ttitle: 'Name',\r\n\t\tdataIndex: 'name',\r\n\t\tfilters: [\r\n\t\t\t{\r\n\t\t\t\ttext: 'Joe',\r\n\t\t\t\tvalue: 'Joe',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttext: 'Jim',\r\n\t\t\t\tvalue: 'Jim',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttext: 'Submenu',\r\n\t\t\t\tvalue: 'Submenu',\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Green',\r\n\t\t\t\t\t\tvalue: 'Green',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Black',\r\n\t\t\t\t\t\tvalue: 'Black',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t],\r\n\t\t// specify the condition of filtering result\r\n\t\t// here is that finding the name started with `value`\r\n\t\tonFilter: (value: any, record) => record.name.indexOf(value) === 0,\r\n\t\tsorter: (a, b) => a.name.length - b.name.length,\r\n\t\tsortDirections: ['descend'],\r\n\t},\r\n\t{\r\n\t\ttitle: 'Age',\r\n\t\tdataIndex: 'age',\r\n\t\tdefaultSortOrder: 'descend',\r\n\t\tsorter: (a, b) => a.age - b.age,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Address',\r\n\t\tdataIndex: 'address',\r\n\t\tfilters: [\r\n\t\t\t{\r\n\t\t\t\ttext: 'London',\r\n\t\t\t\tvalue: 'London',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttext: 'New York',\r\n\t\t\t\tvalue: 'New York',\r\n\t\t\t},\r\n\t\t],\r\n\t\tonFilter: (value: any, record) => record.address.indexOf(value) === 0,\r\n\t},\r\n]\r\n\r\nconst data = [\r\n\t{\r\n\t\tkey: '1',\r\n\t\tname: 'John Brown',\r\n\t\tage: 32,\r\n\t\taddress: 'New York No. 1 Lake Park',\r\n\t},\r\n\t{\r\n\t\tkey: '2',\r\n\t\tname: 'Jim Green',\r\n\t\tage: 42,\r\n\t\taddress: 'London No. 1 Lake Park',\r\n\t},\r\n\t{\r\n\t\tkey: '3',\r\n\t\tname: 'Joe Black',\r\n\t\tage: 32,\r\n\t\taddress: 'Sydney No. 1 Lake Park',\r\n\t},\r\n\t{\r\n\t\tkey: '4',\r\n\t\tname: 'Jim Red',\r\n\t\tage: 32,\r\n\t\taddress: 'London No. 2 Lake Park',\r\n\t},\r\n]\r\n\r\nconst onChange: TableProps<DataType>['onChange'] = (pagination, filters, sorter, extra) => {\r\n\tconsole.log('params', pagination, filters, sorter, extra)\r\n}\r\n\r\n// ?对某一列数据进行排序，通过指定列的 sorter 函数即可启动排序按钮\r\n// ?对某一列数据进行筛选，使用列的 filters 属性来指定需要筛选菜单的列，onFilter 用于筛选当前数据，filterMultiple 用于指定多选和单选。\r\n// ? 树形筛选菜单：https://ant.design/components/table-cn?theme=happy-work#components-table-demo-filter-in-tree\r\nconst App: any = ({ isShow }: any) => isShow && <Table columns={columns} dataSource={data} onChange={onChange} />\r\n\r\nexport default App\r\n"],"names":["columns","value","record","a","b","data","onChange","pagination","filters","sorter","extra","App","isShow","jsx","Table"],"mappings":"+kBAWA,MAAMA,EAAsC,CAC3C,CACC,MAAO,OACP,UAAW,OACX,QAAS,CACR,CACC,KAAM,MACN,MAAO,KACR,EACA,CACC,KAAM,MACN,MAAO,KACR,EACA,CACC,KAAM,UACN,MAAO,UACP,SAAU,CACT,CACC,KAAM,QACN,MAAO,OACR,EACA,CACC,KAAM,QACN,MAAO,OACR,CACD,CACD,CACD,EAGA,SAAU,CAACC,EAAYC,IAAWA,EAAO,KAAK,QAAQD,CAAK,IAAM,EACjE,OAAQ,CAACE,EAAGC,IAAMD,EAAE,KAAK,OAASC,EAAE,KAAK,OACzC,eAAgB,CAAC,SAAS,CAC3B,EACA,CACC,MAAO,MACP,UAAW,MACX,iBAAkB,UAClB,OAAQ,CAACD,EAAGC,IAAMD,EAAE,IAAMC,EAAE,GAC7B,EACA,CACC,MAAO,UACP,UAAW,UACX,QAAS,CACR,CACC,KAAM,SACN,MAAO,QACR,EACA,CACC,KAAM,WACN,MAAO,UACR,CACD,EACA,SAAU,CAACH,EAAYC,IAAWA,EAAO,QAAQ,QAAQD,CAAK,IAAM,CACrE,CACD,EAEMI,EAAO,CACZ,CACC,IAAK,IACL,KAAM,aACN,IAAK,GACL,QAAS,0BACV,EACA,CACC,IAAK,IACL,KAAM,YACN,IAAK,GACL,QAAS,wBACV,EACA,CACC,IAAK,IACL,KAAM,YACN,IAAK,GACL,QAAS,wBACV,EACA,CACC,IAAK,IACL,KAAM,UACN,IAAK,GACL,QAAS,wBACV,CACD,EAEMC,EAA6C,CAACC,EAAYC,EAASC,EAAQC,IAAU,CAE3F,EAKMC,EAAW,CAAC,CAAE,OAAAC,CAAO,IAAWA,GAAUC,EAAAA,IAACC,EAAM,CAAA,QAAAd,EAAkB,WAAYK,EAAM,SAAAC,CAAoB,CAAA"}