{"version":3,"file":"index-ab672b9f.js","sources":["../../../node_modules/rc-tree-select/es/hooks/useCache.js","../../../node_modules/rc-tree-select/es/hooks/useCheckedKeys.js","../../../node_modules/rc-tree-select/es/utils/valueUtil.js","../../../node_modules/rc-tree-select/es/hooks/useDataEntities.js","../../../node_modules/rc-tree-select/es/TreeNode.js","../../../node_modules/rc-tree-select/es/utils/legacyUtil.js","../../../node_modules/rc-tree-select/es/hooks/useFilterTreeData.js","../../../node_modules/rc-tree-select/es/hooks/useRefFunc.js","../../../node_modules/rc-tree-select/es/hooks/useTreeData.js","../../../node_modules/rc-tree-select/es/LegacyContext.js","../../../node_modules/rc-tree-select/es/TreeSelectContext.js","../../../node_modules/rc-tree-select/es/OptionList.js","../../../node_modules/rc-tree-select/es/utils/strategyUtil.js","../../../node_modules/rc-tree-select/es/TreeSelect.js","../../../node_modules/antd/es/tree-select/style/index.js","../../../node_modules/antd/es/tree-select/index.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\n/**\n * This function will try to call requestIdleCallback if available to save performance.\n * No need `getLabel` here since already fetch on `rawLabeledValue`.\n */\nexport default (function (values) {\n  var cacheRef = React.useRef({\n    valueLabels: new Map()\n  });\n  return React.useMemo(function () {\n    var valueLabels = cacheRef.current.valueLabels;\n    var valueLabelsCache = new Map();\n    var filledValues = values.map(function (item) {\n      var _item$label;\n      var value = item.value;\n      var mergedLabel = (_item$label = item.label) !== null && _item$label !== void 0 ? _item$label : valueLabels.get(value);\n\n      // Save in cache\n      valueLabelsCache.set(value, mergedLabel);\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: mergedLabel\n      });\n    });\n    cacheRef.current.valueLabels = valueLabelsCache;\n    return [filledValues];\n  }, [values]);\n});","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nexport default (function (rawLabeledValues, rawHalfCheckedValues, treeConduction, keyEntities) {\n  return React.useMemo(function () {\n    var checkedKeys = rawLabeledValues.map(function (_ref) {\n      var value = _ref.value;\n      return value;\n    });\n    var halfCheckedKeys = rawHalfCheckedValues.map(function (_ref2) {\n      var value = _ref2.value;\n      return value;\n    });\n    var missingValues = checkedKeys.filter(function (key) {\n      return !keyEntities[key];\n    });\n    if (treeConduction) {\n      var _conductCheck = conductCheck(checkedKeys, true, keyEntities);\n      checkedKeys = _conductCheck.checkedKeys;\n      halfCheckedKeys = _conductCheck.halfCheckedKeys;\n    }\n    return [\n    // Checked keys should fill with missing keys which should de-duplicated\n    Array.from(new Set([].concat(_toConsumableArray(missingValues), _toConsumableArray(checkedKeys)))),\n    // Half checked keys\n    halfCheckedKeys];\n  }, [rawLabeledValues, rawHalfCheckedValues, treeConduction, keyEntities]);\n});","export function toArray(value) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n  return value !== undefined ? [value] : [];\n}\nexport function fillFieldNames(fieldNames) {\n  var _ref = fieldNames || {},\n    label = _ref.label,\n    value = _ref.value,\n    children = _ref.children;\n  var mergedValue = value || 'value';\n  return {\n    _title: label ? [label] : ['title', 'label'],\n    value: mergedValue,\n    key: mergedValue,\n    children: children || 'children'\n  };\n}\nexport function isCheckDisabled(node) {\n  return !node || node.disabled || node.disableCheckbox || node.checkable === false;\n}\n\n/** Loop fetch all the keys exist in the tree */\nexport function getAllKeys(treeData, fieldNames) {\n  var keys = [];\n  function dig(list) {\n    list.forEach(function (item) {\n      var children = item[fieldNames.children];\n      if (children) {\n        keys.push(item[fieldNames.value]);\n        dig(children);\n      }\n    });\n  }\n  dig(treeData);\n  return keys;\n}\nexport function isNil(val) {\n  return val === null || val === undefined;\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport { convertDataToEntities } from \"rc-tree/es/utils/treeUtil\";\nimport warning from \"rc-util/es/warning\";\nimport { isNil } from \"../utils/valueUtil\";\nexport default (function (treeData, fieldNames) {\n  return React.useMemo(function () {\n    var collection = convertDataToEntities(treeData, {\n      fieldNames: fieldNames,\n      initWrapper: function initWrapper(wrapper) {\n        return _objectSpread(_objectSpread({}, wrapper), {}, {\n          valueEntities: new Map()\n        });\n      },\n      processEntity: function processEntity(entity, wrapper) {\n        var val = entity.node[fieldNames.value];\n\n        // Check if exist same value\n        if (process.env.NODE_ENV !== 'production') {\n          var key = entity.node.key;\n          warning(!isNil(val), 'TreeNode `value` is invalidate: undefined');\n          warning(!wrapper.valueEntities.has(val), \"Same `value` exist in the tree: \".concat(val));\n          warning(!key || String(key) === String(val), \"`key` or `value` with TreeNode must be the same or you can remove one of them. key: \".concat(key, \", value: \").concat(val, \".\"));\n        }\n        wrapper.valueEntities.set(val, entity);\n      }\n    });\n    return collection;\n  }, [treeData, fieldNames]);\n});","/* istanbul ignore file */\n\n/** This is a placeholder, not real render in dom */\nvar TreeNode = function TreeNode() {\n  return null;\n};\nexport default TreeNode;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"value\"];\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport TreeNode from \"../TreeNode\";\nexport function convertChildrenToData(nodes) {\n  return toArray(nodes).map(function (node) {\n    if (! /*#__PURE__*/React.isValidElement(node) || !node.type) {\n      return null;\n    }\n    var _ref = node,\n      key = _ref.key,\n      _ref$props = _ref.props,\n      children = _ref$props.children,\n      value = _ref$props.value,\n      restProps = _objectWithoutProperties(_ref$props, _excluded);\n    var data = _objectSpread({\n      key: key,\n      value: value\n    }, restProps);\n    var childData = convertChildrenToData(children);\n    if (childData.length) {\n      data.children = childData;\n    }\n    return data;\n  }).filter(function (data) {\n    return data;\n  });\n}\nexport function fillLegacyProps(dataNode) {\n  if (!dataNode) {\n    return dataNode;\n  }\n  var cloneNode = _objectSpread({}, dataNode);\n  if (!('props' in cloneNode)) {\n    Object.defineProperty(cloneNode, 'props', {\n      get: function get() {\n        warning(false, 'New `rc-tree-select` not support return node instance as argument anymore. Please consider to remove `props` access.');\n        return cloneNode;\n      }\n    });\n  }\n  return cloneNode;\n}\nexport function fillAdditionalInfo(extra, triggerValue, checkedValues, treeData, showPosition, fieldNames) {\n  var triggerNode = null;\n  var nodeList = null;\n  function generateMap() {\n    function dig(list) {\n      var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';\n      var parentIncluded = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      return list.map(function (option, index) {\n        var pos = \"\".concat(level, \"-\").concat(index);\n        var value = option[fieldNames.value];\n        var included = checkedValues.includes(value);\n        var children = dig(option[fieldNames.children] || [], pos, included);\n        var node = /*#__PURE__*/React.createElement(TreeNode, option, children.map(function (child) {\n          return child.node;\n        }));\n\n        // Link with trigger node\n        if (triggerValue === value) {\n          triggerNode = node;\n        }\n        if (included) {\n          var checkedNode = {\n            pos: pos,\n            node: node,\n            children: children\n          };\n          if (!parentIncluded) {\n            nodeList.push(checkedNode);\n          }\n          return checkedNode;\n        }\n        return null;\n      }).filter(function (node) {\n        return node;\n      });\n    }\n    if (!nodeList) {\n      nodeList = [];\n      dig(treeData);\n\n      // Sort to keep the checked node length\n      nodeList.sort(function (_ref2, _ref3) {\n        var val1 = _ref2.node.props.value;\n        var val2 = _ref3.node.props.value;\n        var index1 = checkedValues.indexOf(val1);\n        var index2 = checkedValues.indexOf(val2);\n        return index1 - index2;\n      });\n    }\n  }\n  Object.defineProperty(extra, 'triggerNode', {\n    get: function get() {\n      warning(false, '`triggerNode` is deprecated. Please consider decoupling data with node.');\n      generateMap();\n      return triggerNode;\n    }\n  });\n  Object.defineProperty(extra, 'allCheckedNodes', {\n    get: function get() {\n      warning(false, '`allCheckedNodes` is deprecated. Please consider decoupling data with node.');\n      generateMap();\n      if (showPosition) {\n        return nodeList;\n      }\n      return nodeList.map(function (_ref4) {\n        var node = _ref4.node;\n        return node;\n      });\n    }\n  });\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport { fillLegacyProps } from \"../utils/legacyUtil\";\nexport default (function (treeData, searchValue, _ref) {\n  var treeNodeFilterProp = _ref.treeNodeFilterProp,\n    filterTreeNode = _ref.filterTreeNode,\n    fieldNames = _ref.fieldNames;\n  var fieldChildren = fieldNames.children;\n  return React.useMemo(function () {\n    if (!searchValue || filterTreeNode === false) {\n      return treeData;\n    }\n    var filterOptionFunc;\n    if (typeof filterTreeNode === 'function') {\n      filterOptionFunc = filterTreeNode;\n    } else {\n      var upperStr = searchValue.toUpperCase();\n      filterOptionFunc = function filterOptionFunc(_, dataNode) {\n        var value = dataNode[treeNodeFilterProp];\n        return String(value).toUpperCase().includes(upperStr);\n      };\n    }\n    function dig(list) {\n      var keepAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return list.reduce(function (total, dataNode) {\n        var children = dataNode[fieldChildren];\n        var match = keepAll || filterOptionFunc(searchValue, fillLegacyProps(dataNode));\n        var childList = dig(children || [], match);\n        if (match || childList.length) {\n          total.push(_objectSpread(_objectSpread({}, dataNode), {}, _defineProperty({\n            isLeaf: undefined\n          }, fieldChildren, childList)));\n        }\n        return total;\n      }, []);\n    }\n    return dig(treeData);\n  }, [treeData, searchValue, fieldChildren, treeNodeFilterProp, filterTreeNode]);\n});","import * as React from 'react';\n\n/**\n * Same as `React.useCallback` but always return a memoized function\n * but redirect to real function.\n */\nexport default function useRefFunc(callback) {\n  var funcRef = React.useRef();\n  funcRef.current = callback;\n  var cacheFn = React.useCallback(function () {\n    return funcRef.current.apply(funcRef, arguments);\n  }, []);\n  return cacheFn;\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport { convertChildrenToData } from \"../utils/legacyUtil\";\nfunction parseSimpleTreeData(treeData, _ref) {\n  var id = _ref.id,\n    pId = _ref.pId,\n    rootPId = _ref.rootPId;\n  var keyNodes = {};\n  var rootNodeList = [];\n\n  // Fill in the map\n  var nodeList = treeData.map(function (node) {\n    var clone = _objectSpread({}, node);\n    var key = clone[id];\n    keyNodes[key] = clone;\n    clone.key = clone.key || key;\n    return clone;\n  });\n\n  // Connect tree\n  nodeList.forEach(function (node) {\n    var parentKey = node[pId];\n    var parent = keyNodes[parentKey];\n\n    // Fill parent\n    if (parent) {\n      parent.children = parent.children || [];\n      parent.children.push(node);\n    }\n\n    // Fill root tree node\n    if (parentKey === rootPId || !parent && rootPId === null) {\n      rootNodeList.push(node);\n    }\n  });\n  return rootNodeList;\n}\n\n/**\n * Convert `treeData` or `children` into formatted `treeData`.\n * Will not re-calculate if `treeData` or `children` not change.\n */\nexport default function useTreeData(treeData, children, simpleMode) {\n  return React.useMemo(function () {\n    if (treeData) {\n      return simpleMode ? parseSimpleTreeData(treeData, _objectSpread({\n        id: 'id',\n        pId: 'pId',\n        rootPId: null\n      }, simpleMode !== true ? simpleMode : {})) : treeData;\n    }\n    return convertChildrenToData(children);\n  }, [children, simpleMode, treeData]);\n}","import * as React from 'react';\nvar LegacySelectContext = /*#__PURE__*/React.createContext(null);\nexport default LegacySelectContext;","import * as React from 'react';\nvar TreeSelectContext = /*#__PURE__*/React.createContext(null);\nexport default TreeSelectContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useBaseProps } from 'rc-select';\nimport Tree from 'rc-tree';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport * as React from 'react';\nimport LegacyContext from \"./LegacyContext\";\nimport TreeSelectContext from \"./TreeSelectContext\";\nimport { getAllKeys, isCheckDisabled } from \"./utils/valueUtil\";\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\nvar OptionList = function OptionList(_, ref) {\n  var _useBaseProps = useBaseProps(),\n    prefixCls = _useBaseProps.prefixCls,\n    multiple = _useBaseProps.multiple,\n    searchValue = _useBaseProps.searchValue,\n    toggleOpen = _useBaseProps.toggleOpen,\n    open = _useBaseProps.open,\n    notFoundContent = _useBaseProps.notFoundContent;\n  var _React$useContext = React.useContext(TreeSelectContext),\n    virtual = _React$useContext.virtual,\n    listHeight = _React$useContext.listHeight,\n    listItemHeight = _React$useContext.listItemHeight,\n    listItemScrollOffset = _React$useContext.listItemScrollOffset,\n    treeData = _React$useContext.treeData,\n    fieldNames = _React$useContext.fieldNames,\n    onSelect = _React$useContext.onSelect,\n    dropdownMatchSelectWidth = _React$useContext.dropdownMatchSelectWidth,\n    treeExpandAction = _React$useContext.treeExpandAction,\n    treeTitleRender = _React$useContext.treeTitleRender;\n  var _React$useContext2 = React.useContext(LegacyContext),\n    checkable = _React$useContext2.checkable,\n    checkedKeys = _React$useContext2.checkedKeys,\n    halfCheckedKeys = _React$useContext2.halfCheckedKeys,\n    treeExpandedKeys = _React$useContext2.treeExpandedKeys,\n    treeDefaultExpandAll = _React$useContext2.treeDefaultExpandAll,\n    treeDefaultExpandedKeys = _React$useContext2.treeDefaultExpandedKeys,\n    onTreeExpand = _React$useContext2.onTreeExpand,\n    treeIcon = _React$useContext2.treeIcon,\n    showTreeIcon = _React$useContext2.showTreeIcon,\n    switcherIcon = _React$useContext2.switcherIcon,\n    treeLine = _React$useContext2.treeLine,\n    treeNodeFilterProp = _React$useContext2.treeNodeFilterProp,\n    loadData = _React$useContext2.loadData,\n    treeLoadedKeys = _React$useContext2.treeLoadedKeys,\n    treeMotion = _React$useContext2.treeMotion,\n    onTreeLoad = _React$useContext2.onTreeLoad,\n    keyEntities = _React$useContext2.keyEntities;\n  var treeRef = React.useRef();\n  var memoTreeData = useMemo(function () {\n    return treeData;\n  }, [open, treeData], function (prev, next) {\n    return next[0] && prev[1] !== next[1];\n  });\n\n  // ========================== Active ==========================\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    activeKey = _React$useState2[0],\n    setActiveKey = _React$useState2[1];\n  var activeEntity = keyEntities[activeKey];\n\n  // ========================== Values ==========================\n  var mergedCheckedKeys = React.useMemo(function () {\n    if (!checkable) {\n      return null;\n    }\n    return {\n      checked: checkedKeys,\n      halfChecked: halfCheckedKeys\n    };\n  }, [checkable, checkedKeys, halfCheckedKeys]);\n\n  // ========================== Scroll ==========================\n  React.useEffect(function () {\n    // Single mode should scroll to current key\n    if (open && !multiple && checkedKeys.length) {\n      var _treeRef$current;\n      (_treeRef$current = treeRef.current) === null || _treeRef$current === void 0 || _treeRef$current.scrollTo({\n        key: checkedKeys[0]\n      });\n      setActiveKey(checkedKeys[0]);\n    }\n  }, [open]);\n\n  // ========================== Search ==========================\n  var lowerSearchValue = String(searchValue).toLowerCase();\n  var filterTreeNode = function filterTreeNode(treeNode) {\n    if (!lowerSearchValue) {\n      return false;\n    }\n    return String(treeNode[treeNodeFilterProp]).toLowerCase().includes(lowerSearchValue);\n  };\n\n  // =========================== Keys ===========================\n  var _React$useState3 = React.useState(treeDefaultExpandedKeys),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    expandedKeys = _React$useState4[0],\n    setExpandedKeys = _React$useState4[1];\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    searchExpandedKeys = _React$useState6[0],\n    setSearchExpandedKeys = _React$useState6[1];\n  var mergedExpandedKeys = React.useMemo(function () {\n    if (treeExpandedKeys) {\n      return _toConsumableArray(treeExpandedKeys);\n    }\n    return searchValue ? searchExpandedKeys : expandedKeys;\n  }, [expandedKeys, searchExpandedKeys, treeExpandedKeys, searchValue]);\n  React.useEffect(function () {\n    if (searchValue) {\n      setSearchExpandedKeys(getAllKeys(treeData, fieldNames));\n    }\n  }, [searchValue]);\n  var onInternalExpand = function onInternalExpand(keys) {\n    setExpandedKeys(keys);\n    setSearchExpandedKeys(keys);\n    if (onTreeExpand) {\n      onTreeExpand(keys);\n    }\n  };\n\n  // ========================== Events ==========================\n  var onListMouseDown = function onListMouseDown(event) {\n    event.preventDefault();\n  };\n  var onInternalSelect = function onInternalSelect(__, info) {\n    var node = info.node;\n    if (checkable && isCheckDisabled(node)) {\n      return;\n    }\n    onSelect(node.key, {\n      selected: !checkedKeys.includes(node.key)\n    });\n    if (!multiple) {\n      toggleOpen(false);\n    }\n  };\n\n  // ========================= Keyboard =========================\n  React.useImperativeHandle(ref, function () {\n    var _treeRef$current2;\n    return {\n      scrollTo: (_treeRef$current2 = treeRef.current) === null || _treeRef$current2 === void 0 ? void 0 : _treeRef$current2.scrollTo,\n      onKeyDown: function onKeyDown(event) {\n        var _treeRef$current3;\n        var which = event.which;\n        switch (which) {\n          // >>> Arrow keys\n          case KeyCode.UP:\n          case KeyCode.DOWN:\n          case KeyCode.LEFT:\n          case KeyCode.RIGHT:\n            (_treeRef$current3 = treeRef.current) === null || _treeRef$current3 === void 0 || _treeRef$current3.onKeyDown(event);\n            break;\n\n          // >>> Select item\n          case KeyCode.ENTER:\n            {\n              if (activeEntity) {\n                var _ref = (activeEntity === null || activeEntity === void 0 ? void 0 : activeEntity.node) || {},\n                  selectable = _ref.selectable,\n                  value = _ref.value;\n                if (selectable !== false) {\n                  onInternalSelect(null, {\n                    node: {\n                      key: activeKey\n                    },\n                    selected: !checkedKeys.includes(value)\n                  });\n                }\n              }\n              break;\n            }\n\n          // >>> Close\n          case KeyCode.ESC:\n            {\n              toggleOpen(false);\n            }\n        }\n      },\n      onKeyUp: function onKeyUp() {}\n    };\n  });\n\n  // ========================== Render ==========================\n  if (memoTreeData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      role: \"listbox\",\n      className: \"\".concat(prefixCls, \"-empty\"),\n      onMouseDown: onListMouseDown\n    }, notFoundContent);\n  }\n  var treeProps = {\n    fieldNames: fieldNames\n  };\n  if (treeLoadedKeys) {\n    treeProps.loadedKeys = treeLoadedKeys;\n  }\n  if (mergedExpandedKeys) {\n    treeProps.expandedKeys = mergedExpandedKeys;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: onListMouseDown\n  }, activeEntity && open && /*#__PURE__*/React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, activeEntity.node.value), /*#__PURE__*/React.createElement(Tree, _extends({\n    ref: treeRef,\n    focusable: false,\n    prefixCls: \"\".concat(prefixCls, \"-tree\"),\n    treeData: memoTreeData,\n    height: listHeight,\n    itemHeight: listItemHeight,\n    itemScrollOffset: listItemScrollOffset,\n    virtual: virtual !== false && dropdownMatchSelectWidth !== false,\n    multiple: multiple,\n    icon: treeIcon,\n    showIcon: showTreeIcon,\n    switcherIcon: switcherIcon,\n    showLine: treeLine,\n    loadData: searchValue ? null : loadData,\n    motion: treeMotion,\n    activeKey: activeKey\n    // We handle keys by out instead tree self\n    ,\n    checkable: checkable,\n    checkStrictly: true,\n    checkedKeys: mergedCheckedKeys,\n    selectedKeys: !checkable ? checkedKeys : [],\n    defaultExpandAll: treeDefaultExpandAll,\n    titleRender: treeTitleRender\n  }, treeProps, {\n    // Proxy event out\n    onActiveChange: setActiveKey,\n    onSelect: onInternalSelect,\n    onCheck: onInternalSelect,\n    onExpand: onInternalExpand,\n    onLoad: onTreeLoad,\n    filterTreeNode: filterTreeNode,\n    expandAction: treeExpandAction\n  })));\n};\nvar RefOptionList = /*#__PURE__*/React.forwardRef(OptionList);\nif (process.env.NODE_ENV !== 'production') {\n  RefOptionList.displayName = 'OptionList';\n}\nexport default RefOptionList;","import { isCheckDisabled } from \"./valueUtil\";\nexport var SHOW_ALL = 'SHOW_ALL';\nexport var SHOW_PARENT = 'SHOW_PARENT';\nexport var SHOW_CHILD = 'SHOW_CHILD';\nexport function formatStrategyValues(values, strategy, keyEntities, fieldNames) {\n  var valueSet = new Set(values);\n  if (strategy === SHOW_CHILD) {\n    return values.filter(function (key) {\n      var entity = keyEntities[key];\n      if (entity && entity.children && entity.children.some(function (_ref) {\n        var node = _ref.node;\n        return valueSet.has(node[fieldNames.value]);\n      }) && entity.children.every(function (_ref2) {\n        var node = _ref2.node;\n        return isCheckDisabled(node) || valueSet.has(node[fieldNames.value]);\n      })) {\n        return false;\n      }\n      return true;\n    });\n  }\n  if (strategy === SHOW_PARENT) {\n    return values.filter(function (key) {\n      var entity = keyEntities[key];\n      var parent = entity ? entity.parent : null;\n      if (parent && !isCheckDisabled(parent.node) && valueSet.has(parent.key)) {\n        return false;\n      }\n      return true;\n    });\n  }\n  return values;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar _excluded = [\"id\", \"prefixCls\", \"value\", \"defaultValue\", \"onChange\", \"onSelect\", \"onDeselect\", \"searchValue\", \"inputValue\", \"onSearch\", \"autoClearSearchValue\", \"filterTreeNode\", \"treeNodeFilterProp\", \"showCheckedStrategy\", \"treeNodeLabelProp\", \"multiple\", \"treeCheckable\", \"treeCheckStrictly\", \"labelInValue\", \"fieldNames\", \"treeDataSimpleMode\", \"treeData\", \"children\", \"loadData\", \"treeLoadedKeys\", \"onTreeLoad\", \"treeDefaultExpandAll\", \"treeExpandedKeys\", \"treeDefaultExpandedKeys\", \"onTreeExpand\", \"treeExpandAction\", \"virtual\", \"listHeight\", \"listItemHeight\", \"listItemScrollOffset\", \"onDropdownVisibleChange\", \"dropdownMatchSelectWidth\", \"treeLine\", \"treeIcon\", \"showTreeIcon\", \"switcherIcon\", \"treeMotion\", \"treeTitleRender\"];\nimport { BaseSelect } from 'rc-select';\nimport useId from \"rc-select/es/hooks/useId\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport useCache from \"./hooks/useCache\";\nimport useCheckedKeys from \"./hooks/useCheckedKeys\";\nimport useDataEntities from \"./hooks/useDataEntities\";\nimport useFilterTreeData from \"./hooks/useFilterTreeData\";\nimport useRefFunc from \"./hooks/useRefFunc\";\nimport useTreeData from \"./hooks/useTreeData\";\nimport LegacyContext from \"./LegacyContext\";\nimport OptionList from \"./OptionList\";\nimport TreeNode from \"./TreeNode\";\nimport TreeSelectContext from \"./TreeSelectContext\";\nimport { fillAdditionalInfo, fillLegacyProps } from \"./utils/legacyUtil\";\nimport { formatStrategyValues, SHOW_ALL, SHOW_CHILD, SHOW_PARENT } from \"./utils/strategyUtil\";\nimport { fillFieldNames, isNil, toArray } from \"./utils/valueUtil\";\nimport warningProps from \"./utils/warningPropsUtil\";\n\n/** @deprecated This is only used for legacy compatible. Not works on new code. */\n\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\nvar TreeSelect = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var id = props.id,\n    _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-tree-select' : _props$prefixCls,\n    value = props.value,\n    defaultValue = props.defaultValue,\n    onChange = props.onChange,\n    onSelect = props.onSelect,\n    onDeselect = props.onDeselect,\n    searchValue = props.searchValue,\n    inputValue = props.inputValue,\n    onSearch = props.onSearch,\n    _props$autoClearSearc = props.autoClearSearchValue,\n    autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n    filterTreeNode = props.filterTreeNode,\n    _props$treeNodeFilter = props.treeNodeFilterProp,\n    treeNodeFilterProp = _props$treeNodeFilter === void 0 ? 'value' : _props$treeNodeFilter,\n    showCheckedStrategy = props.showCheckedStrategy,\n    treeNodeLabelProp = props.treeNodeLabelProp,\n    multiple = props.multiple,\n    treeCheckable = props.treeCheckable,\n    treeCheckStrictly = props.treeCheckStrictly,\n    labelInValue = props.labelInValue,\n    fieldNames = props.fieldNames,\n    treeDataSimpleMode = props.treeDataSimpleMode,\n    treeData = props.treeData,\n    children = props.children,\n    loadData = props.loadData,\n    treeLoadedKeys = props.treeLoadedKeys,\n    onTreeLoad = props.onTreeLoad,\n    treeDefaultExpandAll = props.treeDefaultExpandAll,\n    treeExpandedKeys = props.treeExpandedKeys,\n    treeDefaultExpandedKeys = props.treeDefaultExpandedKeys,\n    onTreeExpand = props.onTreeExpand,\n    treeExpandAction = props.treeExpandAction,\n    virtual = props.virtual,\n    _props$listHeight = props.listHeight,\n    listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n    _props$listItemHeight = props.listItemHeight,\n    listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n    _props$listItemScroll = props.listItemScrollOffset,\n    listItemScrollOffset = _props$listItemScroll === void 0 ? 0 : _props$listItemScroll,\n    onDropdownVisibleChange = props.onDropdownVisibleChange,\n    _props$dropdownMatchS = props.dropdownMatchSelectWidth,\n    dropdownMatchSelectWidth = _props$dropdownMatchS === void 0 ? true : _props$dropdownMatchS,\n    treeLine = props.treeLine,\n    treeIcon = props.treeIcon,\n    showTreeIcon = props.showTreeIcon,\n    switcherIcon = props.switcherIcon,\n    treeMotion = props.treeMotion,\n    treeTitleRender = props.treeTitleRender,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var mergedId = useId(id);\n  var treeConduction = treeCheckable && !treeCheckStrictly;\n  var mergedCheckable = treeCheckable || treeCheckStrictly;\n  var mergedLabelInValue = treeCheckStrictly || labelInValue;\n  var mergedMultiple = mergedCheckable || multiple;\n  var _useMergedState = useMergedState(defaultValue, {\n      value: value\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    internalValue = _useMergedState2[0],\n    setInternalValue = _useMergedState2[1];\n\n  // `multiple` && `!treeCheckable` should be show all\n  var mergedShowCheckedStrategy = React.useMemo(function () {\n    if (!treeCheckable) {\n      return SHOW_ALL;\n    }\n    return showCheckedStrategy || SHOW_CHILD;\n  }, [showCheckedStrategy, treeCheckable]);\n\n  // ========================== Warning ===========================\n  if (process.env.NODE_ENV !== 'production') {\n    warningProps(props);\n  }\n\n  // ========================= FieldNames =========================\n  var mergedFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames);\n  }, /* eslint-disable react-hooks/exhaustive-deps */\n  [JSON.stringify(fieldNames)]\n  /* eslint-enable react-hooks/exhaustive-deps */);\n\n  // =========================== Search ===========================\n  var _useMergedState3 = useMergedState('', {\n      value: searchValue !== undefined ? searchValue : inputValue,\n      postState: function postState(search) {\n        return search || '';\n      }\n    }),\n    _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n    mergedSearchValue = _useMergedState4[0],\n    setSearchValue = _useMergedState4[1];\n  var onInternalSearch = function onInternalSearch(searchText) {\n    setSearchValue(searchText);\n    onSearch === null || onSearch === void 0 || onSearch(searchText);\n  };\n\n  // ============================ Data ============================\n  // `useTreeData` only do convert of `children` or `simpleMode`.\n  // Else will return origin `treeData` for perf consideration.\n  // Do not do anything to loop the data.\n  var mergedTreeData = useTreeData(treeData, children, treeDataSimpleMode);\n  var _useDataEntities = useDataEntities(mergedTreeData, mergedFieldNames),\n    keyEntities = _useDataEntities.keyEntities,\n    valueEntities = _useDataEntities.valueEntities;\n\n  /** Get `missingRawValues` which not exist in the tree yet */\n  var splitRawValues = React.useCallback(function (newRawValues) {\n    var missingRawValues = [];\n    var existRawValues = [];\n\n    // Keep missing value in the cache\n    newRawValues.forEach(function (val) {\n      if (valueEntities.has(val)) {\n        existRawValues.push(val);\n      } else {\n        missingRawValues.push(val);\n      }\n    });\n    return {\n      missingRawValues: missingRawValues,\n      existRawValues: existRawValues\n    };\n  }, [valueEntities]);\n\n  // Filtered Tree\n  var filteredTreeData = useFilterTreeData(mergedTreeData, mergedSearchValue, {\n    fieldNames: mergedFieldNames,\n    treeNodeFilterProp: treeNodeFilterProp,\n    filterTreeNode: filterTreeNode\n  });\n\n  // =========================== Label ============================\n  var getLabel = React.useCallback(function (item) {\n    if (item) {\n      if (treeNodeLabelProp) {\n        return item[treeNodeLabelProp];\n      }\n\n      // Loop from fieldNames\n      var titleList = mergedFieldNames._title;\n      for (var i = 0; i < titleList.length; i += 1) {\n        var title = item[titleList[i]];\n        if (title !== undefined) {\n          return title;\n        }\n      }\n    }\n  }, [mergedFieldNames, treeNodeLabelProp]);\n\n  // ========================= Wrap Value =========================\n  var toLabeledValues = React.useCallback(function (draftValues) {\n    var values = toArray(draftValues);\n    return values.map(function (val) {\n      if (isRawValue(val)) {\n        return {\n          value: val\n        };\n      }\n      return val;\n    });\n  }, []);\n  var convert2LabelValues = React.useCallback(function (draftValues) {\n    var values = toLabeledValues(draftValues);\n    return values.map(function (item) {\n      var rawLabel = item.label;\n      var rawValue = item.value,\n        rawHalfChecked = item.halfChecked;\n      var rawDisabled;\n      var entity = valueEntities.get(rawValue);\n\n      // Fill missing label & status\n      if (entity) {\n        var _rawLabel;\n        rawLabel = (_rawLabel = rawLabel) !== null && _rawLabel !== void 0 ? _rawLabel : getLabel(entity.node);\n        rawDisabled = entity.node.disabled;\n      } else if (rawLabel === undefined) {\n        // We try to find in current `labelInValue` value\n        var labelInValueItem = toLabeledValues(internalValue).find(function (labeledItem) {\n          return labeledItem.value === rawValue;\n        });\n        rawLabel = labelInValueItem.label;\n      }\n      return {\n        label: rawLabel,\n        value: rawValue,\n        halfChecked: rawHalfChecked,\n        disabled: rawDisabled\n      };\n    });\n  }, [valueEntities, getLabel, toLabeledValues, internalValue]);\n\n  // =========================== Values ===========================\n  var rawMixedLabeledValues = React.useMemo(function () {\n    return toLabeledValues(internalValue);\n  }, [toLabeledValues, internalValue]);\n\n  // Split value into full check and half check\n  var _React$useMemo = React.useMemo(function () {\n      var fullCheckValues = [];\n      var halfCheckValues = [];\n      rawMixedLabeledValues.forEach(function (item) {\n        if (item.halfChecked) {\n          halfCheckValues.push(item);\n        } else {\n          fullCheckValues.push(item);\n        }\n      });\n      return [fullCheckValues, halfCheckValues];\n    }, [rawMixedLabeledValues]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    rawLabeledValues = _React$useMemo2[0],\n    rawHalfLabeledValues = _React$useMemo2[1];\n\n  // const [mergedValues] = useCache(rawLabeledValues);\n  var rawValues = React.useMemo(function () {\n    return rawLabeledValues.map(function (item) {\n      return item.value;\n    });\n  }, [rawLabeledValues]);\n\n  // Convert value to key. Will fill missed keys for conduct check.\n  var _useCheckedKeys = useCheckedKeys(rawLabeledValues, rawHalfLabeledValues, treeConduction, keyEntities),\n    _useCheckedKeys2 = _slicedToArray(_useCheckedKeys, 2),\n    rawCheckedValues = _useCheckedKeys2[0],\n    rawHalfCheckedValues = _useCheckedKeys2[1];\n\n  // Convert rawCheckedKeys to check strategy related values\n  var displayValues = React.useMemo(function () {\n    // Collect keys which need to show\n    var displayKeys = formatStrategyValues(rawCheckedValues, mergedShowCheckedStrategy, keyEntities, mergedFieldNames);\n\n    // Convert to value and filled with label\n    var values = displayKeys.map(function (key) {\n      var _keyEntities$key$node, _keyEntities$key;\n      return (_keyEntities$key$node = (_keyEntities$key = keyEntities[key]) === null || _keyEntities$key === void 0 || (_keyEntities$key = _keyEntities$key.node) === null || _keyEntities$key === void 0 ? void 0 : _keyEntities$key[mergedFieldNames.value]) !== null && _keyEntities$key$node !== void 0 ? _keyEntities$key$node : key;\n    });\n\n    // Back fill with origin label\n    var labeledValues = values.map(function (val) {\n      var targetItem = rawLabeledValues.find(function (item) {\n        return item.value === val;\n      });\n      var label;\n      // Ensure that when labelInValue is true, if label is undefined, it remains undefined.\n      if (labelInValue && targetItem.label !== undefined) {\n        label = targetItem.label;\n      } else if (!labelInValue && treeTitleRender) {\n        label = treeTitleRender(targetItem);\n      }\n      return {\n        value: val,\n        label: label\n      };\n    });\n    var rawDisplayValues = convert2LabelValues(labeledValues);\n    var firstVal = rawDisplayValues[0];\n    if (!mergedMultiple && firstVal && isNil(firstVal.value) && isNil(firstVal.label)) {\n      return [];\n    }\n    return rawDisplayValues.map(function (item) {\n      var _item$label;\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: (_item$label = item.label) !== null && _item$label !== void 0 ? _item$label : item.value\n      });\n    });\n  }, [mergedFieldNames, mergedMultiple, rawCheckedValues, rawLabeledValues, convert2LabelValues, mergedShowCheckedStrategy, keyEntities]);\n  var _useCache = useCache(displayValues),\n    _useCache2 = _slicedToArray(_useCache, 1),\n    cachedDisplayValues = _useCache2[0];\n\n  // =========================== Change ===========================\n  var triggerChange = useRefFunc(function (newRawValues, extra, source) {\n    var labeledValues = convert2LabelValues(newRawValues);\n    setInternalValue(labeledValues);\n\n    // Clean up if needed\n    if (autoClearSearchValue) {\n      setSearchValue('');\n    }\n\n    // Generate rest parameters is costly, so only do it when necessary\n    if (onChange) {\n      var eventValues = newRawValues;\n      if (treeConduction) {\n        var formattedKeyList = formatStrategyValues(newRawValues, mergedShowCheckedStrategy, keyEntities, mergedFieldNames);\n        eventValues = formattedKeyList.map(function (key) {\n          var entity = valueEntities.get(key);\n          return entity ? entity.node[mergedFieldNames.value] : key;\n        });\n      }\n      var _ref = extra || {\n          triggerValue: undefined,\n          selected: undefined\n        },\n        triggerValue = _ref.triggerValue,\n        selected = _ref.selected;\n      var returnRawValues = eventValues;\n\n      // We need fill half check back\n      if (treeCheckStrictly) {\n        var halfValues = rawHalfLabeledValues.filter(function (item) {\n          return !eventValues.includes(item.value);\n        });\n        returnRawValues = [].concat(_toConsumableArray(returnRawValues), _toConsumableArray(halfValues));\n      }\n      var returnLabeledValues = convert2LabelValues(returnRawValues);\n      var additionalInfo = {\n        // [Legacy] Always return as array contains label & value\n        preValue: rawLabeledValues,\n        triggerValue: triggerValue\n      };\n\n      // [Legacy] Fill legacy data if user query.\n      // This is expansive that we only fill when user query\n      // https://github.com/react-component/tree-select/blob/fe33eb7c27830c9ac70cd1fdb1ebbe7bc679c16a/src/Select.jsx\n      var showPosition = true;\n      if (treeCheckStrictly || source === 'selection' && !selected) {\n        showPosition = false;\n      }\n      fillAdditionalInfo(additionalInfo, triggerValue, newRawValues, mergedTreeData, showPosition, mergedFieldNames);\n      if (mergedCheckable) {\n        additionalInfo.checked = selected;\n      } else {\n        additionalInfo.selected = selected;\n      }\n      var returnValues = mergedLabelInValue ? returnLabeledValues : returnLabeledValues.map(function (item) {\n        return item.value;\n      });\n      onChange(mergedMultiple ? returnValues : returnValues[0], mergedLabelInValue ? null : returnLabeledValues.map(function (item) {\n        return item.label;\n      }), additionalInfo);\n    }\n  });\n\n  // ========================== Options ===========================\n  /** Trigger by option list */\n  var onOptionSelect = React.useCallback(function (selectedKey, _ref2) {\n    var _node$mergedFieldName;\n    var selected = _ref2.selected,\n      source = _ref2.source;\n    var entity = keyEntities[selectedKey];\n    var node = entity === null || entity === void 0 ? void 0 : entity.node;\n    var selectedValue = (_node$mergedFieldName = node === null || node === void 0 ? void 0 : node[mergedFieldNames.value]) !== null && _node$mergedFieldName !== void 0 ? _node$mergedFieldName : selectedKey;\n\n    // Never be falsy but keep it safe\n    if (!mergedMultiple) {\n      // Single mode always set value\n      triggerChange([selectedValue], {\n        selected: true,\n        triggerValue: selectedValue\n      }, 'option');\n    } else {\n      var newRawValues = selected ? [].concat(_toConsumableArray(rawValues), [selectedValue]) : rawCheckedValues.filter(function (v) {\n        return v !== selectedValue;\n      });\n\n      // Add keys if tree conduction\n      if (treeConduction) {\n        // Should keep missing values\n        var _splitRawValues = splitRawValues(newRawValues),\n          missingRawValues = _splitRawValues.missingRawValues,\n          existRawValues = _splitRawValues.existRawValues;\n        var keyList = existRawValues.map(function (val) {\n          return valueEntities.get(val).key;\n        });\n\n        // Conduction by selected or not\n        var checkedKeys;\n        if (selected) {\n          var _conductCheck = conductCheck(keyList, true, keyEntities);\n          checkedKeys = _conductCheck.checkedKeys;\n        } else {\n          var _conductCheck2 = conductCheck(keyList, {\n            checked: false,\n            halfCheckedKeys: rawHalfCheckedValues\n          }, keyEntities);\n          checkedKeys = _conductCheck2.checkedKeys;\n        }\n\n        // Fill back of keys\n        newRawValues = [].concat(_toConsumableArray(missingRawValues), _toConsumableArray(checkedKeys.map(function (key) {\n          return keyEntities[key].node[mergedFieldNames.value];\n        })));\n      }\n      triggerChange(newRawValues, {\n        selected: selected,\n        triggerValue: selectedValue\n      }, source || 'option');\n    }\n\n    // Trigger select event\n    if (selected || !mergedMultiple) {\n      onSelect === null || onSelect === void 0 || onSelect(selectedValue, fillLegacyProps(node));\n    } else {\n      onDeselect === null || onDeselect === void 0 || onDeselect(selectedValue, fillLegacyProps(node));\n    }\n  }, [splitRawValues, valueEntities, keyEntities, mergedFieldNames, mergedMultiple, rawValues, triggerChange, treeConduction, onSelect, onDeselect, rawCheckedValues, rawHalfCheckedValues]);\n\n  // ========================== Dropdown ==========================\n  var onInternalDropdownVisibleChange = React.useCallback(function (open) {\n    if (onDropdownVisibleChange) {\n      var legacyParam = {};\n      Object.defineProperty(legacyParam, 'documentClickClose', {\n        get: function get() {\n          warning(false, 'Second param of `onDropdownVisibleChange` has been removed.');\n          return false;\n        }\n      });\n      onDropdownVisibleChange(open, legacyParam);\n    }\n  }, [onDropdownVisibleChange]);\n\n  // ====================== Display Change ========================\n  var onDisplayValuesChange = useRefFunc(function (newValues, info) {\n    var newRawValues = newValues.map(function (item) {\n      return item.value;\n    });\n    if (info.type === 'clear') {\n      triggerChange(newRawValues, {}, 'selection');\n      return;\n    }\n\n    // TreeSelect only have multiple mode which means display change only has remove\n    if (info.values.length) {\n      onOptionSelect(info.values[0].value, {\n        selected: false,\n        source: 'selection'\n      });\n    }\n  });\n\n  // ========================== Context ===========================\n  var treeSelectContext = React.useMemo(function () {\n    return {\n      virtual: virtual,\n      dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n      listHeight: listHeight,\n      listItemHeight: listItemHeight,\n      listItemScrollOffset: listItemScrollOffset,\n      treeData: filteredTreeData,\n      fieldNames: mergedFieldNames,\n      onSelect: onOptionSelect,\n      treeExpandAction: treeExpandAction,\n      treeTitleRender: treeTitleRender\n    };\n  }, [virtual, dropdownMatchSelectWidth, listHeight, listItemHeight, listItemScrollOffset, filteredTreeData, mergedFieldNames, onOptionSelect, treeExpandAction, treeTitleRender]);\n\n  // ======================= Legacy Context =======================\n  var legacyContext = React.useMemo(function () {\n    return {\n      checkable: mergedCheckable,\n      loadData: loadData,\n      treeLoadedKeys: treeLoadedKeys,\n      onTreeLoad: onTreeLoad,\n      checkedKeys: rawCheckedValues,\n      halfCheckedKeys: rawHalfCheckedValues,\n      treeDefaultExpandAll: treeDefaultExpandAll,\n      treeExpandedKeys: treeExpandedKeys,\n      treeDefaultExpandedKeys: treeDefaultExpandedKeys,\n      onTreeExpand: onTreeExpand,\n      treeIcon: treeIcon,\n      treeMotion: treeMotion,\n      showTreeIcon: showTreeIcon,\n      switcherIcon: switcherIcon,\n      treeLine: treeLine,\n      treeNodeFilterProp: treeNodeFilterProp,\n      keyEntities: keyEntities\n    };\n  }, [mergedCheckable, loadData, treeLoadedKeys, onTreeLoad, rawCheckedValues, rawHalfCheckedValues, treeDefaultExpandAll, treeExpandedKeys, treeDefaultExpandedKeys, onTreeExpand, treeIcon, treeMotion, showTreeIcon, switcherIcon, treeLine, treeNodeFilterProp, keyEntities]);\n\n  // =========================== Render ===========================\n  return /*#__PURE__*/React.createElement(TreeSelectContext.Provider, {\n    value: treeSelectContext\n  }, /*#__PURE__*/React.createElement(LegacyContext.Provider, {\n    value: legacyContext\n  }, /*#__PURE__*/React.createElement(BaseSelect, _extends({\n    ref: ref\n  }, restProps, {\n    // >>> MISC\n    id: mergedId,\n    prefixCls: prefixCls,\n    mode: mergedMultiple ? 'multiple' : undefined\n    // >>> Display Value\n    ,\n    displayValues: cachedDisplayValues,\n    onDisplayValuesChange: onDisplayValuesChange\n    // >>> Search\n    ,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch\n    // >>> Options\n    ,\n    OptionList: OptionList,\n    emptyOptions: !mergedTreeData.length,\n    onDropdownVisibleChange: onInternalDropdownVisibleChange,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth\n  }))));\n});\n\n// Assign name for Debug\nif (process.env.NODE_ENV !== 'production') {\n  TreeSelect.displayName = 'TreeSelect';\n}\nvar GenericTreeSelect = TreeSelect;\nGenericTreeSelect.TreeNode = TreeNode;\nGenericTreeSelect.SHOW_ALL = SHOW_ALL;\nGenericTreeSelect.SHOW_PARENT = SHOW_PARENT;\nGenericTreeSelect.SHOW_CHILD = SHOW_CHILD;\nexport default GenericTreeSelect;","import { unit } from '@ant-design/cssinjs';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { genTreeStyle, initComponentToken } from '../../tree/style';\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    treePrefixCls,\n    colorBgElevated\n  } = token;\n  const treeCls = `.${treePrefixCls}`;\n  return [\n  // ======================================================\n  // ==                     Dropdown                     ==\n  // ======================================================\n  {\n    [`${componentCls}-dropdown`]: [{\n      padding: `${unit(token.paddingXS)} ${unit(token.calc(token.paddingXS).div(2).equal())}`\n    },\n    // ====================== Tree ======================\n    genTreeStyle(treePrefixCls, mergeToken(token, {\n      colorBgContainer: colorBgElevated\n    })), {\n      [treeCls]: {\n        borderRadius: 0,\n        [`${treeCls}-list-holder-inner`]: {\n          alignItems: 'stretch',\n          [`${treeCls}-treenode`]: {\n            [`${treeCls}-node-content-wrapper`]: {\n              flex: 'auto'\n            }\n          }\n        }\n      }\n    },\n    // ==================== Checkbox ====================\n    getCheckboxStyle(`${treePrefixCls}-checkbox`, token),\n    // ====================== RTL =======================\n    {\n      '&-rtl': {\n        direction: 'rtl',\n        [`${treeCls}-switcher${treeCls}-switcher_close`]: {\n          [`${treeCls}-switcher-icon svg`]: {\n            transform: 'rotate(90deg)'\n          }\n        }\n      }\n    }]\n  }];\n};\nexport const prepareComponentToken = initComponentToken;\n// ============================== Export ==============================\nexport default function useTreeSelectStyle(prefixCls, treePrefixCls, rootCls) {\n  return genStyleHooks('TreeSelect', token => {\n    const treeSelectToken = mergeToken(token, {\n      treePrefixCls\n    });\n    return [genBaseStyle(treeSelectToken)];\n  }, initComponentToken)(prefixCls, rootCls);\n}","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport RcTreeSelect, { SHOW_ALL, SHOW_CHILD, SHOW_PARENT, TreeNode } from 'rc-tree-select';\nimport omit from \"rc-util/es/omit\";\nimport { useZIndex } from '../_util/hooks/useZIndex';\nimport { getTransitionName } from '../_util/motion';\nimport genPurePanel from '../_util/PurePanel';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport useSize from '../config-provider/hooks/useSize';\nimport { FormItemInputContext } from '../form/context';\nimport useVariant from '../form/hooks/useVariants';\nimport mergedBuiltinPlacements from '../select/mergedBuiltinPlacements';\nimport useSelectStyle from '../select/style';\nimport useIcons from '../select/useIcons';\nimport useShowArrow from '../select/useShowArrow';\nimport { useCompactItemContext } from '../space/Compact';\nimport SwitcherIconCom from '../tree/utils/iconUtil';\nimport useStyle from './style';\nconst InternalTreeSelect = (_a, ref) => {\n  var _b;\n  var {\n      prefixCls: customizePrefixCls,\n      size: customizeSize,\n      disabled: customDisabled,\n      bordered = true,\n      className,\n      rootClassName,\n      treeCheckable,\n      multiple,\n      listHeight = 256,\n      listItemHeight = 26,\n      placement,\n      notFoundContent,\n      switcherIcon,\n      treeLine,\n      getPopupContainer,\n      popupClassName,\n      dropdownClassName,\n      treeIcon = false,\n      transitionName,\n      choiceTransitionName = '',\n      status: customStatus,\n      treeExpandAction,\n      builtinPlacements,\n      dropdownMatchSelectWidth,\n      popupMatchSelectWidth,\n      allowClear,\n      variant: customVariant,\n      dropdownStyle,\n      tagRender\n    } = _a,\n    props = __rest(_a, [\"prefixCls\", \"size\", \"disabled\", \"bordered\", \"className\", \"rootClassName\", \"treeCheckable\", \"multiple\", \"listHeight\", \"listItemHeight\", \"placement\", \"notFoundContent\", \"switcherIcon\", \"treeLine\", \"getPopupContainer\", \"popupClassName\", \"dropdownClassName\", \"treeIcon\", \"transitionName\", \"choiceTransitionName\", \"status\", \"treeExpandAction\", \"builtinPlacements\", \"dropdownMatchSelectWidth\", \"popupMatchSelectWidth\", \"allowClear\", \"variant\", \"dropdownStyle\", \"tagRender\"]);\n  const {\n    getPopupContainer: getContextPopupContainer,\n    getPrefixCls,\n    renderEmpty,\n    direction,\n    virtual,\n    popupMatchSelectWidth: contextPopupMatchSelectWidth,\n    popupOverflow\n  } = React.useContext(ConfigContext);\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('TreeSelect');\n    process.env.NODE_ENV !== \"production\" ? warning(multiple !== false || !treeCheckable, 'usage', '`multiple` will always be `true` when `treeCheckable` is true') : void 0;\n    warning.deprecated(!dropdownClassName, 'dropdownClassName', 'popupClassName');\n    warning.deprecated(dropdownMatchSelectWidth === undefined, 'dropdownMatchSelectWidth', 'popupMatchSelectWidth');\n    process.env.NODE_ENV !== \"production\" ? warning(!('showArrow' in props), 'deprecated', '`showArrow` is deprecated which will be removed in next major version. It will be a default behavior, you can hide it by setting `suffixIcon` to null.') : void 0;\n    warning.deprecated(!('bordered' in props), 'bordered', 'variant');\n  }\n  const rootPrefixCls = getPrefixCls();\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\n  const treePrefixCls = getPrefixCls('select-tree', customizePrefixCls);\n  const treeSelectPrefixCls = getPrefixCls('tree-select', customizePrefixCls);\n  const {\n    compactSize,\n    compactItemClassnames\n  } = useCompactItemContext(prefixCls, direction);\n  const rootCls = useCSSVarCls(prefixCls);\n  const treeSelectRootCls = useCSSVarCls(treeSelectPrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useSelectStyle(prefixCls, rootCls);\n  const [treeSelectWrapCSSVar] = useStyle(treeSelectPrefixCls, treePrefixCls, treeSelectRootCls);\n  const [variant, enableVariantCls] = useVariant(customVariant, bordered);\n  const mergedDropdownClassName = classNames(popupClassName || dropdownClassName, `${treeSelectPrefixCls}-dropdown`, {\n    [`${treeSelectPrefixCls}-dropdown-rtl`]: direction === 'rtl'\n  }, rootClassName, cssVarCls, rootCls, treeSelectRootCls, hashId);\n  const isMultiple = !!(treeCheckable || multiple);\n  const showSuffixIcon = useShowArrow(props.suffixIcon, props.showArrow);\n  const mergedPopupMatchSelectWidth = (_b = popupMatchSelectWidth !== null && popupMatchSelectWidth !== void 0 ? popupMatchSelectWidth : dropdownMatchSelectWidth) !== null && _b !== void 0 ? _b : contextPopupMatchSelectWidth;\n  // ===================== Form =====================\n  const {\n    status: contextStatus,\n    hasFeedback,\n    isFormItemInput,\n    feedbackIcon\n  } = React.useContext(FormItemInputContext);\n  const mergedStatus = getMergedStatus(contextStatus, customStatus);\n  // ===================== Icons =====================\n  const {\n    suffixIcon,\n    removeIcon,\n    clearIcon\n  } = useIcons(Object.assign(Object.assign({}, props), {\n    multiple: isMultiple,\n    showSuffixIcon,\n    hasFeedback,\n    feedbackIcon,\n    prefixCls,\n    componentName: 'TreeSelect'\n  }));\n  const mergedAllowClear = allowClear === true ? {\n    clearIcon\n  } : allowClear;\n  // ===================== Empty =====================\n  let mergedNotFound;\n  if (notFoundContent !== undefined) {\n    mergedNotFound = notFoundContent;\n  } else {\n    mergedNotFound = (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Select')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n      componentName: \"Select\"\n    });\n  }\n  // ==================== Render =====================\n  const selectProps = omit(props, ['suffixIcon', 'removeIcon', 'clearIcon', 'itemIcon', 'switcherIcon']);\n  // ===================== Placement =====================\n  const memoizedPlacement = React.useMemo(() => {\n    if (placement !== undefined) {\n      return placement;\n    }\n    return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n  }, [placement, direction]);\n  const mergedSize = useSize(ctx => {\n    var _a;\n    return (_a = customizeSize !== null && customizeSize !== void 0 ? customizeSize : compactSize) !== null && _a !== void 0 ? _a : ctx;\n  });\n  // ===================== Disabled =====================\n  const disabled = React.useContext(DisabledContext);\n  const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  const mergedClassName = classNames(!customizePrefixCls && treeSelectPrefixCls, {\n    [`${prefixCls}-lg`]: mergedSize === 'large',\n    [`${prefixCls}-sm`]: mergedSize === 'small',\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-${variant}`]: enableVariantCls,\n    [`${prefixCls}-in-form-item`]: isFormItemInput\n  }, getStatusClassNames(prefixCls, mergedStatus, hasFeedback), compactItemClassnames, className, rootClassName, cssVarCls, rootCls, treeSelectRootCls, hashId);\n  const renderSwitcherIcon = nodeProps => ( /*#__PURE__*/React.createElement(SwitcherIconCom, {\n    prefixCls: treePrefixCls,\n    switcherIcon: switcherIcon,\n    treeNodeProps: nodeProps,\n    showLine: treeLine\n  }));\n  // ============================ zIndex ============================\n  const [zIndex] = useZIndex('SelectLike', dropdownStyle === null || dropdownStyle === void 0 ? void 0 : dropdownStyle.zIndex);\n  const returnNode = /*#__PURE__*/React.createElement(RcTreeSelect, Object.assign({\n    virtual: virtual,\n    disabled: mergedDisabled\n  }, selectProps, {\n    dropdownMatchSelectWidth: mergedPopupMatchSelectWidth,\n    builtinPlacements: mergedBuiltinPlacements(builtinPlacements, popupOverflow),\n    ref: ref,\n    prefixCls: prefixCls,\n    className: mergedClassName,\n    listHeight: listHeight,\n    listItemHeight: listItemHeight,\n    treeCheckable: treeCheckable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-tree-checkbox-inner`\n    }) : treeCheckable,\n    treeLine: !!treeLine,\n    suffixIcon: suffixIcon,\n    multiple: isMultiple,\n    placement: memoizedPlacement,\n    removeIcon: removeIcon,\n    allowClear: mergedAllowClear,\n    switcherIcon: renderSwitcherIcon,\n    showTreeIcon: treeIcon,\n    notFoundContent: mergedNotFound,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    treeMotion: null,\n    dropdownClassName: mergedDropdownClassName,\n    dropdownStyle: Object.assign(Object.assign({}, dropdownStyle), {\n      zIndex\n    }),\n    choiceTransitionName: getTransitionName(rootPrefixCls, '', choiceTransitionName),\n    transitionName: getTransitionName(rootPrefixCls, 'slide-up', transitionName),\n    treeExpandAction: treeExpandAction,\n    tagRender: isMultiple ? tagRender : undefined\n  }));\n  return wrapCSSVar(treeSelectWrapCSSVar(returnNode));\n};\nconst TreeSelectRef = /*#__PURE__*/React.forwardRef(InternalTreeSelect);\nconst TreeSelect = TreeSelectRef;\n// We don't care debug panel\n/* istanbul ignore next */\nconst PurePanel = genPurePanel(TreeSelect);\nTreeSelect.TreeNode = TreeNode;\nTreeSelect.SHOW_ALL = SHOW_ALL;\nTreeSelect.SHOW_PARENT = SHOW_PARENT;\nTreeSelect.SHOW_CHILD = SHOW_CHILD;\nTreeSelect._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nif (process.env.NODE_ENV !== 'production') {\n  TreeSelect.displayName = 'TreeSelect';\n}\nexport { TreeNode };\nexport default TreeSelect;"],"names":["useCache","values","cacheRef","React.useRef","React.useMemo","valueLabels","valueLabelsCache","filledValues","item","_item$label","value","mergedLabel","_objectSpread","useCheckedKeys","rawLabeledValues","rawHalfCheckedValues","treeConduction","keyEntities","checkedKeys","_ref","halfCheckedKeys","_ref2","missingValues","key","_conductCheck","conductCheck","_toConsumableArray","toArray","fillFieldNames","fieldNames","label","children","mergedValue","isCheckDisabled","node","getAllKeys","treeData","keys","dig","list","isNil","val","useDataEntities","collection","convertDataToEntities","wrapper","entity","TreeNode","_excluded","convertChildrenToData","nodes","React.isValidElement","_ref$props","restProps","_objectWithoutProperties","data","childData","fillLegacyProps","dataNode","cloneNode","warning","fillAdditionalInfo","extra","triggerValue","checkedValues","showPosition","triggerNode","nodeList","generateMap","level","parentIncluded","option","index","pos","included","React.createElement","child","checkedNode","_ref3","val1","val2","index1","index2","_ref4","useFilterTreeData","searchValue","treeNodeFilterProp","filterTreeNode","fieldChildren","filterOptionFunc","upperStr","_","keepAll","total","match","childList","_defineProperty","useRefFunc","callback","funcRef","cacheFn","React.useCallback","parseSimpleTreeData","id","pId","rootPId","keyNodes","rootNodeList","clone","parentKey","parent","useTreeData","simpleMode","LegacySelectContext","React.createContext","TreeSelectContext","HIDDEN_STYLE","OptionList","ref","_useBaseProps","useBaseProps","prefixCls","multiple","toggleOpen","open","notFoundContent","_React$useContext","React.useContext","virtual","listHeight","listItemHeight","listItemScrollOffset","onSelect","dropdownMatchSelectWidth","treeExpandAction","treeTitleRender","_React$useContext2","LegacyContext","checkable","treeExpandedKeys","treeDefaultExpandAll","treeDefaultExpandedKeys","onTreeExpand","treeIcon","showTreeIcon","switcherIcon","treeLine","loadData","treeLoadedKeys","treeMotion","onTreeLoad","treeRef","memoTreeData","useMemo","prev","next","_React$useState","React.useState","_React$useState2","_slicedToArray","activeKey","setActiveKey","activeEntity","mergedCheckedKeys","React.useEffect","_treeRef$current","lowerSearchValue","treeNode","_React$useState3","_React$useState4","expandedKeys","setExpandedKeys","_React$useState5","_React$useState6","searchExpandedKeys","setSearchExpandedKeys","mergedExpandedKeys","onInternalExpand","onListMouseDown","event","onInternalSelect","__","info","React.useImperativeHandle","_treeRef$current2","_treeRef$current3","which","KeyCode","selectable","treeProps","Tree","_extends","RefOptionList","React.forwardRef","SHOW_ALL","SHOW_PARENT","SHOW_CHILD","formatStrategyValues","strategy","valueSet","isRawValue","_typeof","TreeSelect","props","_props$prefixCls","defaultValue","onChange","onDeselect","inputValue","onSearch","_props$autoClearSearc","autoClearSearchValue","_props$treeNodeFilter","showCheckedStrategy","treeNodeLabelProp","treeCheckable","treeCheckStrictly","labelInValue","treeDataSimpleMode","_props$listHeight","_props$listItemHeight","_props$listItemScroll","onDropdownVisibleChange","_props$dropdownMatchS","mergedId","useId","mergedCheckable","mergedLabelInValue","mergedMultiple","_useMergedState","useMergedState","_useMergedState2","internalValue","setInternalValue","mergedShowCheckedStrategy","mergedFieldNames","_useMergedState3","search","_useMergedState4","mergedSearchValue","setSearchValue","onInternalSearch","searchText","mergedTreeData","_useDataEntities","valueEntities","splitRawValues","newRawValues","missingRawValues","existRawValues","filteredTreeData","getLabel","titleList","i","title","toLabeledValues","draftValues","convert2LabelValues","rawLabel","rawValue","rawHalfChecked","rawDisabled","_rawLabel","labelInValueItem","labeledItem","rawMixedLabeledValues","_React$useMemo","fullCheckValues","halfCheckValues","_React$useMemo2","rawHalfLabeledValues","rawValues","_useCheckedKeys","_useCheckedKeys2","rawCheckedValues","displayValues","displayKeys","_keyEntities$key$node","_keyEntities$key","labeledValues","targetItem","rawDisplayValues","firstVal","_useCache","_useCache2","cachedDisplayValues","triggerChange","source","eventValues","formattedKeyList","selected","returnRawValues","halfValues","returnLabeledValues","additionalInfo","returnValues","onOptionSelect","selectedKey","_node$mergedFieldName","selectedValue","v","_splitRawValues","keyList","_conductCheck2","onInternalDropdownVisibleChange","legacyParam","onDisplayValuesChange","newValues","treeSelectContext","legacyContext","BaseSelect","GenericTreeSelect","genBaseStyle","token","componentCls","treePrefixCls","colorBgElevated","treeCls","unit","genTreeStyle","mergeToken","getCheckboxStyle","useTreeSelectStyle","rootCls","genStyleHooks","treeSelectToken","initComponentToken","__rest","this","s","e","t","p","InternalTreeSelect","_a","_b","customizePrefixCls","customizeSize","customDisabled","bordered","className","rootClassName","placement","getPopupContainer","popupClassName","dropdownClassName","transitionName","choiceTransitionName","customStatus","builtinPlacements","popupMatchSelectWidth","allowClear","customVariant","dropdownStyle","tagRender","getContextPopupContainer","getPrefixCls","renderEmpty","direction","contextPopupMatchSelectWidth","popupOverflow","ConfigContext","rootPrefixCls","treeSelectPrefixCls","compactSize","compactItemClassnames","useCompactItemContext","useCSSVarCls","treeSelectRootCls","wrapCSSVar","hashId","cssVarCls","useSelectStyle","treeSelectWrapCSSVar","useStyle","variant","enableVariantCls","useVariant","mergedDropdownClassName","classNames","isMultiple","showSuffixIcon","useShowArrow","mergedPopupMatchSelectWidth","contextStatus","hasFeedback","isFormItemInput","feedbackIcon","FormItemInputContext","mergedStatus","getMergedStatus","suffixIcon","removeIcon","clearIcon","useIcons","mergedAllowClear","mergedNotFound","DefaultRenderEmpty","selectProps","omit","memoizedPlacement","mergedSize","useSize","ctx","disabled","DisabledContext","mergedDisabled","mergedClassName","getStatusClassNames","renderSwitcherIcon","nodeProps","SwitcherIconCom","zIndex","useZIndex","returnNode","RcTreeSelect","mergedBuiltinPlacements","getTransitionName","TreeSelectRef","PurePanel","genPurePanel","TreeSelect$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}