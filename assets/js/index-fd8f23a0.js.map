{"version":3,"mappings":"2TAYA,MAAMA,EAAe,CACpB,WAAYC,OAAK,UAAM,OAAO,0BAAyB,EAAC,ixBACxD,eAAgBA,OAAK,UAAM,OAAO,8BAA6B,EAAC,6tBAChE,kBAAmBA,OAAK,UAAM,OAAO,iCAAgC,EAAC,kpBACtE,gBAAiBA,OAAK,UAAM,OAAO,+BAA8B,EAAC,gpBAClE,kBAAmBA,OAAK,UAAM,OAAO,iCAAgC,EAAC,kpBACtE,iBAAkBA,OAAK,UAAM,OAAO,gCAA+B,EAAC,sqBACpE,UAAWA,OAAK,UAAM,OAAO,yBAAwB,EAAC,wtBACtD,cAAeA,OAAK,UAAM,OAAO,6BAA4B,EAAC,8oBAC9D,iBAAkBA,OAAK,UAAM,OAAO,gCAA+B,EAAC,ipBACpE,kBAAmBA,OAAK,UAAM,OAAO,iCAAgC,EAAC,kpBACtE,wBAAyBA,OAAK,UAAM,OAAO,uCAAsC,EAAC,wpBAClF,mBAAoBA,OAAK,UAAM,OAAO,kCAAiC,EAAC,mpBACxE,cAAeA,OAAK,UAAM,OAAO,6BAA4B,EAAC,8oBAC9D,cAAeA,OAAK,UAAM,OAAO,6BAA4B,EAAC,oqBAC9D,aAAcA,OAAK,UAAM,OAAO,4BAA2B,EAAC,+sBAC5D,SAAUA,OAAK,UAAM,OAAO,wBAAuB,EAAC,yoBACpD,cAAeA,OAAK,UAAM,OAAO,6BAA4B,EAAC,8oBAC9D,aAAcA,OAAK,UAAM,OAAO,4BAA2B,EAAC,quBAC5D,gBAAiBA,OAAK,UAAM,OAAO,+BAA8B,EAAC,gpBAClE,YAAaA,OAAK,UAAM,OAAO,2BAA0B,EAAC,4oBAC1D,aAAcA,OAAK,UAAM,OAAO,4BAA2B,6oBAAC,CAC7D,EAEMC,EAAuB,IAAM,CAClC,MAAMC,EAAWC,IACXC,EAAWC,IACb,IAAAC,EAAYF,EAAS,OAASA,EAAS,OAAO,MAAM,GAAG,EAAE,CAAC,EAAI,aAClE,KAAM,CAACG,EAAOC,CAAQ,EAAIC,EAAM,SAAiBH,CAAS,EAGpDI,EAAgBH,GAAkB,CACvCC,EAASD,CAAK,EACLL,EAAA,2BAA2BK,CAAK,EAAE,GAG5C,OAEEI,EAAA,KAAAC,WAAA,WAAAC,MAACC,GAAK,UAAU,OACf,SAACH,EAAA,KAAAI,EAAA,CAAM,KAAM,SACZ,UAAAF,MAAC,KAAE,SAAI,SAAI,MAAGA,MAACG,EAAW,cAAAN,EAA4B,UAAAJ,CAAsB,IAC7E,CACD,GACCO,EAAA,IAAAC,EAAA,CAAK,UAAU,OACf,SAACD,EAAA,IAAAI,WAAA,CAAS,SAAUJ,EAAA,IAAC,MAAI,uBAAU,EACjC,gBAAO,QAAQd,CAAY,EAAE,IAAI,CAAC,CAACmB,EAAKC,CAAS,IAAMZ,IAAUW,GAAOL,MAACM,EAAoB,QAAQZ,IAAUW,CAAA,EAAvBA,CAA4B,CAAE,CACxH,GACD,CACD,GAEF","names":["componentMap","lazy","BasicTable","navigate","useNavigate","location","useLocation","initValue","value","setValue","React","handleChange","jsxs","Fragment","jsx","Card","Space","SelectComp","Suspense","key","Component"],"sources":["../../../src/views/list/basicTable/index.tsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport React, { lazy, Suspense, useEffect } from 'react'\r\nimport { Card, Typography, Button, Space, Select, Divider } from 'antd'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport SelectComp from './selectComp'\r\nimport './index.less'\r\n\r\nexport type MyComponentProps = {\r\n\tisShow: boolean\r\n}\r\n\r\n// 创建一个映射对象，将组件名称映射到对应的组件\r\nconst componentMap = {\r\n\tTableBasic: lazy(() => import('./components/tableBasic')),\r\n\tTableBasicHigt: lazy(() => import('./components/tableBasicHigt')), // !\r\n\tTableSelectCustom: lazy(() => import('./components/tableSelectCustom')),\r\n\tTableFilterSort: lazy(() => import('./components/tableFilterSort')),\r\n\tTableFilterSearch: lazy(() => import('./components/tableFilterSearch')),\r\n\tTableFilterPanel: lazy(() => import('./components/tableFilterPanel')),\r\n\tTableAjax: lazy(() => import('./components/tableAjax')),\r\n\tTableTreeData: lazy(() => import('./components/tableTreeData')),\r\n\tTableFixedHeader: lazy(() => import('./components/tableFixedHeader')),\r\n\tTableFixedColumns: lazy(() => import('./components/tableFixedColumns')),\r\n\tTableFixedHeaderColumns: lazy(() => import('./components/tableFixedHeaderColumns')),\r\n\tTableHiddenColumns: lazy(() => import('./components/tableHiddenColumns')),\r\n\tTableGrouping: lazy(() => import('./components/tableGrouping')),\r\n\tTableEditCell: lazy(() => import('./components/tableEditCell')),\r\n\tTableEditRow: lazy(() => import('./components/tableEditRow')),\r\n\tTableSub: lazy(() => import('./components/tableSub')),\r\n\tTableEllipsis: lazy(() => import('./components/tableEllipsis')),\r\n\tTableVirtual: lazy(() => import('./components/tableVirtual')),\r\n\tTableResponsive: lazy(() => import('./components/tableResponsive')),\r\n\tTableSticky: lazy(() => import('./components/tableSticky')),\r\n\tTableDynamic: lazy(() => import('./components/tableDynamic')),\r\n}\r\n\r\nconst BasicTable: React.FC = () => {\r\n\tconst navigate = useNavigate()\r\n\tconst location = useLocation()\r\n\tlet initValue = location.search ? location.search.split('=')[1] : 'TableBasic'\r\n\tconst [value, setValue] = React.useState<string>(initValue)\r\n\r\n\t// 要新添加 ? 自定义表单控件、多表单联动、内联登陆栏、普通登陆框、注册新用户、弹出层中的新建表单、时间类控件、自行处理表单数据\r\n\tconst handleChange = (value: string) => {\r\n\t\tsetValue(value)\r\n\t\tnavigate(`/list/basicTable?select=${value}`)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Card className=\"mb10\">\r\n\t\t\t\t<Space size={'middle'}>\r\n\t\t\t\t\t<b>基础表格</b> - <SelectComp handleChange={handleChange} initValue={initValue} />\r\n\t\t\t\t</Space>\r\n\t\t\t</Card>\r\n\t\t\t<Card className=\"mb10\">\r\n\t\t\t\t<Suspense fallback={<div>Loading...</div>}>\r\n\t\t\t\t\t{Object.entries(componentMap).map(([key, Component]) => value === key && <Component key={key} isShow={value === key} />)}\r\n\t\t\t\t</Suspense>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default BasicTable\r\n"],"file":"assets/js/index-fd8f23a0.js"}