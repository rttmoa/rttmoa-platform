{"version":3,"file":"tableEditRow-0f17341c.js","sources":["../../../src/views/list/basicTable/components/tableEditRow.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Input, InputNumber, Popconfirm, Table, Typography } from \"antd\";\n\ninterface Item {\n  key: string;\n  name: string;\n  age: number;\n  address: string;\n}\n\nconst originData: Item[] = [];\nfor (let i = 0; i < 100; i++) {\n  originData.push({\n    key: i.toString(),\n    name: `Edward ${i}`,\n    age: 32,\n    address: `London Park no. ${i}`\n  });\n}\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\n  editing: boolean;\n  dataIndex: string;\n  title: any;\n  inputType: \"number\" | \"text\";\n  record: Item;\n  index: number;\n  children: React.ReactNode;\n}\n\nconst EditableCell: React.FC<EditableCellProps> = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\n\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{ margin: 0 }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`\n            }\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n\nconst App: any = ({ isShow }: any) => {\n  const [form] = Form.useForm();\n  const [data, setData] = useState(originData);\n  const [editingKey, setEditingKey] = useState(\"\");\n\n  const isEditing = (record: Item) => record.key === editingKey;\n\n  const edit = (record: Partial<Item> & { key: React.Key }) => {\n    form.setFieldsValue({ name: \"\", age: \"\", address: \"\", ...record });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n  };\n\n  const save = async (key: React.Key) => {\n    try {\n      const row = (await form.validateFields()) as Item;\n\n      const newData = [...data];\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row\n        });\n        setData(newData);\n        setEditingKey(\"\");\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey(\"\");\n      }\n    } catch (errInfo) {\n      console.log(\"Validate Failed:\", errInfo);\n    }\n  };\n\n  const columns = [\n    {\n      title: \"name\",\n      dataIndex: \"name\",\n      width: \"25%\",\n      editable: true\n    },\n    {\n      title: \"age\",\n      dataIndex: \"age\",\n      width: \"15%\",\n      editable: true\n    },\n    {\n      title: \"address\",\n      dataIndex: \"address\",\n      width: \"40%\",\n      editable: true\n    },\n    {\n      title: \"operation\",\n      dataIndex: \"operation\",\n      render: (_: any, record: Item) => {\n        const editable = isEditing(record);\n        return editable ? (\n          <span>\n            <Typography.Link onClick={() => save(record.key)} style={{ marginRight: 8 }}>\n              Save\n            </Typography.Link>\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n              <a>Cancel</a>\n            </Popconfirm>\n          </span>\n        ) : (\n          <Typography.Link disabled={editingKey !== \"\"} onClick={() => edit(record)}>\n            Edit\n          </Typography.Link>\n        );\n      }\n    }\n  ];\n\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n    return {\n      ...col,\n      onCell: (record: Item) => ({\n        record,\n        inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    };\n  });\n\n  return (\n    isShow && (\n      <Form form={form} component={false}>\n        <Table\n          components={{\n            body: {\n              cell: EditableCell\n            }\n          }}\n          bordered\n          dataSource={data}\n          columns={mergedColumns}\n          rowClassName=\"editable-row\"\n          pagination={{\n            onChange: cancel\n          }}\n        />\n      </Form>\n    )\n  );\n};\n\nexport default App;\n"],"names":["originData","i","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","InputNumber","Input","jsx","Form","App","isShow","form","data","setData","useState","editingKey","setEditingKey","isEditing","edit","cancel","save","key","row","newData","item","mergedColumns","_","Typography","Popconfirm","col","Table"],"mappings":"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"}