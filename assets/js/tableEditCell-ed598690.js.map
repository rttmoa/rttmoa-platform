{"version":3,"file":"tableEditCell-ed598690.js","sources":["../../../src/views/list/basicTable/components/tableEditCell.tsx"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport type { GetRef } from \"antd\";\nimport { Button, Form, Input, Popconfirm, Table } from \"antd\";\n\ntype InputRef = GetRef<typeof Input>;\ntype FormInstance<T> = GetRef<typeof Form<T>>;\n\nconst EditableContext = React.createContext<FormInstance<any> | null>(null);\n\ninterface Item {\n  key: string;\n  name: string;\n  age: string;\n  address: string;\n}\n\ninterface EditableRowProps {\n  index: number;\n}\n\nconst EditableRow: React.FC<EditableRowProps> = ({ index, ...props }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} />\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\ninterface EditableCellProps {\n  title: React.ReactNode;\n  editable: boolean;\n  children: React.ReactNode;\n  dataIndex: keyof Item;\n  record: Item;\n  handleSave: (record: Item) => void;\n}\n\nconst EditableCell: React.FC<EditableCellProps> = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  // const inputRef = useRef<InputRef>(null);\n  const inputRef = useRef<any>(null);\n  const form = useContext(EditableContext)!;\n\n  useEffect(() => {\n    if (editing) {\n      inputRef.current!.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({ [dataIndex]: record[dataIndex] });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n\n      toggleEdit();\n      handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log(\"Save failed:\", errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{ margin: 0 }}\n        name={dataIndex}\n        rules={[\n          {\n            required: true,\n            message: `${title} is required.`\n          }\n        ]}\n      >\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n      </Form.Item>\n    ) : (\n      <div className=\"editable-cell-value-wrap\" style={{ paddingRight: 24 }} onClick={toggleEdit}>\n        {children}\n      </div>\n    );\n  }\n\n  return <td {...restProps}>{childNode}</td>;\n};\n\ntype EditableTableProps = Parameters<typeof Table>[0];\n\ninterface DataType {\n  key: React.Key;\n  name: string;\n  age: string;\n  address: string;\n}\n\ntype ColumnTypes = Exclude<EditableTableProps[\"columns\"], undefined>;\n\nconst App: any = ({ isShow }: any) => {\n  const [dataSource, setDataSource] = useState<DataType[]>([\n    {\n      key: \"0\",\n      name: \"Edward King 0\",\n      age: \"32\",\n      address: \"London, Park Lane no. 0\"\n    },\n    {\n      key: \"1\",\n      name: \"Edward King 1\",\n      age: \"32\",\n      address: \"London, Park Lane no. 1\"\n    }\n  ]);\n\n  const [count, setCount] = useState(2);\n\n  const handleDelete = (key: React.Key) => {\n    const newData = dataSource.filter(item => item.key !== key);\n    setDataSource(newData);\n  };\n\n  const defaultColumns: (ColumnTypes[number] & { editable?: boolean; dataIndex: string })[] = [\n    {\n      title: \"name\",\n      dataIndex: \"name\",\n      width: \"30%\",\n      editable: true\n    },\n    {\n      title: \"age\",\n      dataIndex: \"age\"\n    },\n    {\n      title: \"address\",\n      dataIndex: \"address\"\n    },\n    {\n      title: \"operation\",\n      dataIndex: \"operation\",\n      render: (_, record: any) =>\n        dataSource.length >= 1 ? (\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\n            <a>Delete</a>\n          </Popconfirm>\n        ) : null\n    }\n  ];\n\n  const handleAdd = () => {\n    const newData: DataType = {\n      key: count,\n      name: `Edward King ${count}`,\n      age: \"32\",\n      address: `London, Park Lane no. ${count}`\n    };\n    setDataSource([...dataSource, newData]);\n    setCount(count + 1);\n  };\n\n  const handleSave = (row: DataType) => {\n    const newData = [...dataSource];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, {\n      ...item,\n      ...row\n    });\n    setDataSource(newData);\n  };\n\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell\n    }\n  };\n\n  const columns = defaultColumns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n    return {\n      ...col,\n      onCell: (record: DataType) => ({\n        record,\n        editable: col.editable,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        handleSave\n      })\n    };\n  });\n\n  return (\n    isShow && (\n      <div>\n        <Button onClick={handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n          Add a row\n        </Button>\n        <Table\n          components={components}\n          rowClassName={() => \"editable-row\"}\n          bordered\n          dataSource={dataSource}\n          columns={columns as ColumnTypes}\n        />\n      </div>\n    )\n  );\n};\n\nexport default App;\n"],"names":["EditableContext","React","EditableRow","index","props","form","Form","jsx","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","useState","inputRef","useRef","useContext","useEffect","toggleEdit","save","values","childNode","Input","App","isShow","dataSource","setDataSource","count","setCount","handleDelete","key","newData","item","defaultColumns","_","Popconfirm","handleAdd","row","components","columns","col","Button","Table"],"mappings":"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"}