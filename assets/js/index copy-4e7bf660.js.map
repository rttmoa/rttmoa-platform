{"version":3,"file":"index copy-4e7bf660.js","sources":["../../../src/views/assembly/excel/index copy.tsx"],"sourcesContent":["import { Button, Input, message, Select, Table, Upload } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport './index.less';\r\nimport Config from './config';\r\nimport { saveAs } from 'file-saver';\r\n\r\ninterface sheetNamesSelectType {\r\n\tlabel: string;\r\n\tvalue: string;\r\n}\r\nconst expectedHeaders = ['序号', '学科', '项目名称', '端', '账号', '密码'];\r\n\r\nconst TableDataImport = () => {\r\n\t// 需要的\r\n\tconst [tableData, setTableData] = useState<any>(Config().dataSource); // 表格数据：最终结果 tableDataRes\r\n\tconst [tableLoading, setTableLoading] = useState<boolean>(false); // 加载状态：Loading\r\n\tconst [fileName, setFileName] = useState<string>(''); // 文件名称： __EXCEL__黑马账号信息.xlsx\r\n\r\n\tconst [sheetNames, setSheetNames] = useState<sheetNamesSelectType[]>([]); // 工作表列表；[{ label: 'Sheet1', value: 'Sheet1' }, {label: 'Sheet2', value: 'Sheet2'}];\r\n\tconst [defaultSheetName, setDefaultSheetName] = useState<string>(''); // 默认工作表\r\n\r\n\tconst [columns, setColumns] = useState<any[]>(Config().column); // 列 表头\r\n\tconst [tableFile, setTableFile] = useState<Blob>(); // 正在上传的文件：file\r\n\r\n\t// ! 导入表格数据\r\n\t// 参数设置   (file:文件 Blob类型,sheetName:工作区名称 string类型)\r\n\tconst handleUpload = (file: Blob, sheetName?: string) => {\r\n\t\t// 只要该调用当前方法就清空数据重新渲染\r\n\t\t// setColumns([]);\r\n\t\t// setTableData([]);\r\n\t\tif (!sheetName) {\r\n\t\t\t// 将默认工作区名称设为空\r\n\t\t\tsetDefaultSheetName('');\r\n\t\t}\r\n\t\t// 表格加载状态\r\n\t\tsetTableLoading(true);\r\n\t\t// 异步读取文件\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onload = (e: any) => {\r\n\t\t\t// 格式化数组\r\n\t\t\tconst data = new Uint8Array(e.target.result);\r\n\t\t\t// 读取文件内容\r\n\t\t\tconst workbook = XLSX.read(data, { type: 'array' });\r\n\t\t\t// 如果指定了 sheetName，则将其用于查找工作表；否则，使用默认的第一个工作表。\r\n\t\t\t// * SheetNames: ['Sheet1']  指的是工作区一\r\n\t\t\tconst worksheet = sheetName ? workbook.Sheets[sheetName] : workbook.Sheets[workbook.SheetNames[0]];\r\n\t\t\t// 将工作表数据转换为 JSON 格式\r\n\t\t\tconst jsonData: any = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n\t\t\tconsole.log('jsonData', jsonData); // ! 这里就是所有的表格数据了\r\n\t\t\t// 将工作区转为options需要的格式\r\n\t\t\tconst newSheetNames = workbook.SheetNames.map(item => ({ label: item, value: item }));\r\n\t\t\tconsole.log('工作区：', newSheetNames); // [{ label: 'Sheet1', value: 'Sheet1' }, {label: 'Sheet2', value: 'Sheet2'}];\r\n\r\n\t\t\tconst headers = jsonData[0] || [];\r\n\r\n\t\t\t// 验证表头字段 【少一列提示、多一列提示吗？】\r\n\t\t\tconst missingHeaders = expectedHeaders.filter(h => !headers.includes(h));\r\n\t\t\tif (missingHeaders.length > 0) {\r\n\t\t\t\tmessage.error(`导入失败，缺少字段：${missingHeaders.join('、')}`);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// const content = jsonData.slice(1).map((row: { [x: string]: any }, idx: any) => {\r\n\t\t\t// \treturn {\r\n\t\t\t// \t\tkey: idx,\r\n\t\t\t// \t\t姓名: row[headers.indexOf('姓名')],\r\n\t\t\t// \t\t年龄: row[headers.indexOf('年龄')],\r\n\t\t\t// \t\t性别: row[headers.indexOf('性别')],\r\n\t\t\t// \t};\r\n\t\t\t// });\r\n\t\t\t// console.log('这个是?', content);\r\n\t\t\t// setTableData(content);\r\n\r\n\t\t\t// 保存工作区\r\n\t\t\tsetSheetNames(newSheetNames);\r\n\t\t\t// 设置默认工作区\r\n\t\t\tsetDefaultSheetName(sheetName ? sheetName : newSheetNames[0].value); // Sheet1\r\n\t\t\t// 判断所选工作区的内容是否为空\r\n\t\t\tif (jsonData.length > 0) {\r\n\t\t\t\tconst tableDataRes: any[] = [];\r\n\t\t\t\t// 第一行默认认为是表头 除开第一行以外都是数据\r\n\t\t\t\tjsonData.slice(1).forEach((item: any, itemIndex: number) => {\r\n\t\t\t\t\tif (item.length === 0) return false;\r\n\t\t\t\t\tconst obj: any = { key: itemIndex };\r\n\t\t\t\t\tjsonData[0].forEach((header: any, index: any) => {\r\n\t\t\t\t\t\tobj[header] = item[index];\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttableDataRes.push(obj);\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log('tableData', tableDataRes); // ! 最终表格数据\r\n\t\t\t\t// // 将第一行转为表头\r\n\t\t\t\t// const columns = jsonData[0].map((header: any) => ({\r\n\t\t\t\t// \ttitle: header,\r\n\t\t\t\t// \tdataIndex: header,\r\n\t\t\t\t// \tkey: header,\r\n\t\t\t\t// \talign: 'center',\r\n\t\t\t\t// \t// 以input格式渲染可以对导入的数据进行编辑  如果不需要此功能可以将render删除 也就不用changeTableData方法了\r\n\t\t\t\t// \trender: (text: any, record: any, renderIndex: any) => (\r\n\t\t\t\t// \t\t<Input\r\n\t\t\t\t// \t\t\tkey={renderIndex}\r\n\t\t\t\t// \t\t\tstyle={{ color: '#000', height: '100%', textAlign: 'center' }}\r\n\t\t\t\t// \t\t\t// bordered={false}\r\n\t\t\t\t// \t\t\tdefaultValue={text}\r\n\t\t\t\t// \t\t\tonBlur={eee => {\r\n\t\t\t\t// \t\t\t\tchangeTableData(eee.target.value, renderIndex, header, tableDataRes);\r\n\t\t\t\t// \t\t\t}}\r\n\t\t\t\t// \t\t/>\r\n\t\t\t\t// \t),\r\n\t\t\t\t// }));\r\n\t\t\t\t// // 设置表头\r\n\t\t\t\t// setColumns(columns);\r\n\t\t\t\t// // 设置数据\r\n\t\t\t\t// setTableData(tableDataRes);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('没数据');\r\n\t\t\t\tmessage.warning('表格无数据');\r\n\t\t\t}\r\n\t\t\t// 取消表格加载状态\r\n\t\t\tsetTableLoading(false);\r\n\t\t};\r\n\t\treader.readAsArrayBuffer(file);\r\n\t};\r\n\r\n\t// // 需要参数    value:输入框输入的值   index:下标索引    key:表头对应字段     allData:表格中的数据\r\n\t// const changeTableData = (value: string, index: any, key: any, allData: any) => {\r\n\t// \tconst newTableData = JSON.parse(JSON.stringify(allData));\r\n\t// \tnewTableData[index][key] = value;\r\n\t// \tsetTableData(newTableData);\r\n\t// };\r\n\r\n\t//  4、导入方法（tableDataImport）。作用：将最终数据进行保存数据库\r\n\tconst tableDataImport = () => {\r\n\t\tconsole.log('tableData', tableData);\r\n\t};\r\n\r\n\t// 需要参数  value:工作区   【切换工作区】\r\n\tconst handleChange = (value: string) => {\r\n\t\t// 调用数据渲染的方法 传入文件以及工作区\r\n\t\tif (tableFile) handleUpload(tableFile, value);\r\n\t};\r\n\tconsole.log('columns', columns);\r\n\tconsole.log(tableData);\r\n\r\n\t// * 导出模板\r\n\t// ! 传参：expectedHeaders表头信息\r\n\t// ! 传参：名称：用户管理\r\n\tconst exportTemplate = () => {\r\n\t\tconst expectedHeaders = ['序号', '学科', '项目名称', '端', '账号', '密码'];\r\n\r\n\t\t// 1. 构造一个空的 worksheet，只包含表头\r\n\t\tconst ws = XLSX.utils.aoa_to_sheet([expectedHeaders]);\r\n\r\n\t\t// 2. 创建 workbook\r\n\t\tconst wb = XLSX.utils.book_new();\r\n\t\tXLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n\r\n\t\t// 3. 生成并导出\r\n\t\tconst wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n\t\tconst blob = new Blob([wbout], { type: 'application/octet-stream' });\r\n\r\n\t\tsaveAs(blob, '用户管理模板.xlsx');\r\n\t};\r\n\r\n\t// * 导出表格\r\n\t// ! 传参：tableData\r\n\t// ! 传参：名称：用户管理\r\n\tconst handleExport = () => {\r\n\t\tif (!tableData.length) return message.warning('暂无数据可导出');\r\n\r\n\t\tconst worksheet = XLSX.utils.json_to_sheet(tableData);\r\n\t\tconst workbook = XLSX.utils.book_new();\r\n\t\tXLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n\r\n\t\tconst excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n\t\tconst fileBlob = new Blob([excelBuffer], { type: 'application/octet-stream' });\r\n\t\tsaveAs(fileBlob, '导出用户管理数据.xlsx');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='TableDataImport bg-white p-[24px]'>\r\n\t\t\t<div className='fileUpDiv mb-5' style={{ marginTop: 0, marginBottom: 40 }}>\r\n\t\t\t\t<span style={{ marginRight: 42 }}>文件名称</span>\r\n\t\t\t\t<span className='fileName'>{fileName}</span>\r\n\r\n\t\t\t\t<Upload\r\n\t\t\t\t\tbeforeUpload={file => {\r\n\t\t\t\t\t\tconst isExcel = /\\.(xlsx|xls)$/.test(file.name.toLowerCase());\r\n\t\t\t\t\t\tif (!isExcel) {\r\n\t\t\t\t\t\t\tmessage.error('请上传Excel文件（.xlsx 或 .xls）');\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 文件名称选工作区的时候并不会改变\r\n\t\t\t\t\t\tsetFileName(file.name);\r\n\t\t\t\t\t\t// 保存上传的文件\r\n\t\t\t\t\t\tsetTableFile(file);\r\n\t\t\t\t\t\t// 调用数据渲染的方法\r\n\t\t\t\t\t\thandleUpload(file);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button>上传Excel文件</Button>\r\n\t\t\t\t</Upload>\r\n\r\n\t\t\t\t<span style={{ marginRight: 26 }}>选择工作区</span>\r\n\t\t\t\t{!defaultSheetName && <Select disabled style={{ width: 120 }} options={[]} />}\r\n\t\t\t\t{defaultSheetName && <Select defaultValue={defaultSheetName} style={{ width: 120 }} onChange={handleChange} options={sheetNames} />}\r\n\r\n\t\t\t\t<Button type='primary' onClick={tableDataImport}>\r\n\t\t\t\t\t导入表格数据\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button type='primary' onClick={exportTemplate}>\r\n\t\t\t\t\t导出表格模板\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button type='primary' onClick={handleExport}>\r\n\t\t\t\t\t导出表格数据\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t\t<Table\r\n\t\t\t\t// style={{ height: '100%' }}\r\n\t\t\t\tscroll={{ x: '100%', y: 'calc( 100vh - 270px )' }}\r\n\t\t\t\trowKey={record => record.key}\r\n\t\t\t\tbordered\r\n\t\t\t\tloading={tableLoading}\r\n\t\t\t\tsize='small'\r\n\t\t\t\tdataSource={tableData}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TableDataImport;\r\n"],"names":["expectedHeaders","TableDataImport","tableData","setTableData","useState","Config","tableLoading","setTableLoading","fileName","setFileName","sheetNames","setSheetNames","defaultSheetName","setDefaultSheetName","columns","setColumns","tableFile","setTableFile","handleUpload","file","sheetName","reader","e","data","workbook","XLSX.read","worksheet","jsonData","XLSX.utils","newSheetNames","item","headers","missingHeaders","h","message","itemIndex","header","index","tableDataImport","handleChange","value","exportTemplate","ws","wb","wbout","XLSX.write","blob","saveAs","handleExport","excelBuffer","fileBlob","jsxs","jsx","Upload","Button","Select","Table","record"],"mappings":"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"}