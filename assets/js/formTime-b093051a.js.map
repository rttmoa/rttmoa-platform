{"version":3,"file":"formTime-b093051a.js","sources":["../../../src/views/form/basicForm/components/formTime.tsx"],"sourcesContent":["import React from \"react\";\nimport { Button, DatePicker, Form, TimePicker } from \"antd\";\n\nconst { RangePicker } = DatePicker;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 }\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 }\n  }\n};\n\nconst onFinish = (fieldsValue: any) => {\n  console.log(\"未处理的值：\", fieldsValue);\n  // date-picker: M2 {$L: 'zh-cn', $u: undefined, $d: Tue Jan 02 2024 11:30:39 GMT+0800 (中国标准时间), $y: 2024, $M: 0, …}\n  // date-time-picker: M2 {$L: 'zh-cn', $u: undefined, $d: Tue Jan 02 2024 11:32:08 GMT+0800 (中国标准时间), $y: 2024, $M: 0, …}\n  // month-picker: M2 {$L: 'zh-cn', $u: undefined, $d: Thu Jan 18 2024 11:34:39 GMT+0800 (中国标准时间), $y: 2024, $M: 0, …}\n  // range-picker: (2) [M2, M2]\n  // range-time-picker: (2) [M2, M2]\n  // time-picker: M2 {$L: 'zh-cn', $u: undefined, $d: Thu Jan 18 2024 11:35:14 GMT+0800 (中国标准时间), $y: 2024, $M: 0, …}\n\n  // 处理后的值：\n  // date-picker: \"2024-01-02\"\n  // date-time-picker:  \"2024-01-02 11:32:08\"\n  // month-picker: \"2024-01\"\n  // range-picker: (2) ['2024-01-05', '2024-01-13']\n  // range-time-picker: (2) ['2024-01-11 11:34:56', '2024-01-19 11:34:59']\n  // time-picker: \"11:35:14\"\n\n  // 应在提交前格式化日期值.\n  const rangeValue = fieldsValue[\"range-picker\"]; // type: array\n  const rangeTimeValue = fieldsValue[\"range-time-picker\"]; // type: array\n  const values = {\n    ...fieldsValue,\n    \"date-picker\": fieldsValue[\"date-picker\"].format(\"YYYY-MM-DD\"),\n    \"date-time-picker\": fieldsValue[\"date-time-picker\"].format(\"YYYY-MM-DD HH:mm:ss\"),\n    \"month-picker\": fieldsValue[\"month-picker\"].format(\"YYYY-MM\"),\n    \"range-picker\": [rangeValue[0].format(\"YYYY-MM-DD\"), rangeValue[1].format(\"YYYY-MM-DD\")],\n    \"range-time-picker\": [rangeTimeValue[0].format(\"YYYY-MM-DD HH:mm:ss\"), rangeTimeValue[1].format(\"YYYY-MM-DD HH:mm:ss\")],\n    \"time-picker\": fieldsValue[\"time-picker\"].format(\"HH:mm:ss\")\n  };\n  console.log(\"Received values of form: \", values);\n};\nconst App: React.FC<{ value: string }> = ({ value }) => {\n  // ? 校验配置\n  const config = {\n    rules: [{ type: \"object\" as const, required: false, message: \"Please select time!\" }]\n  };\n  const rangeConfig = {\n    rules: [{ type: \"array\" as const, required: false, message: \"Please select time!\" }]\n  };\n\n  return (\n    <>\n      {value == \"FormTime\" && (\n        <>\n          <Form\n            name=\"time_related_controls\"\n            {...formItemLayout}\n            // initialValues={{ \"date-picker\": \"2024-01-02\" }}\n            onFinish={onFinish}\n            style={{ maxWidth: 1200 }}\n          >\n            <Form.Item name=\"date-picker\" label=\"DatePicker\" {...config}>\n              <DatePicker />\n            </Form.Item>\n            <Form.Item name=\"date-time-picker\" label=\"DatePicker[showTime]\" {...config}>\n              <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n            </Form.Item>\n            <Form.Item name=\"month-picker\" label=\"MonthPicker\" {...config}>\n              <DatePicker picker=\"month\" />\n            </Form.Item>\n            <Form.Item name=\"range-picker\" label=\"RangePicker\" {...rangeConfig}>\n              <RangePicker />\n            </Form.Item>\n            <Form.Item name=\"range-time-picker\" label=\"RangePicker[showTime]\" {...rangeConfig}>\n              <RangePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n            </Form.Item>\n            <Form.Item name=\"time-picker\" label=\"TimePicker\" {...config}>\n              <TimePicker />\n            </Form.Item>\n            <Form.Item wrapperCol={{ xs: { span: 24, offset: 0 }, sm: { span: 16, offset: 8 } }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default App;\n"],"names":["RangePicker","DatePicker","formItemLayout","onFinish","fieldsValue","rangeValue","rangeTimeValue","App","value","config","rangeConfig","jsx","Fragment","jsxs","Form","TimePicker","Button"],"mappings":"8MAGA,KAAM,CAAE,YAAAA,CAAgB,EAAAC,EAElBC,EAAiB,CACrB,SAAU,CACR,GAAI,CAAE,KAAM,EAAG,EACf,GAAI,CAAE,KAAM,CAAE,CAChB,EACA,WAAY,CACV,GAAI,CAAE,KAAM,EAAG,EACf,GAAI,CAAE,KAAM,EAAG,CACjB,CACF,EAEMC,EAAYC,GAAqB,CAkB/B,MAAAC,EAAaD,EAAY,cAAc,EACvCE,EAAiBF,EAAY,mBAAmB,GACvC,CACb,GAAGA,EACH,cAAeA,EAAY,aAAa,EAAE,OAAO,YAAY,EAC7D,mBAAoBA,EAAY,kBAAkB,EAAE,OAAO,qBAAqB,EAChF,eAAgBA,EAAY,cAAc,EAAE,OAAO,SAAS,EAC5D,gBAAiBC,EAAW,CAAC,EAAE,OAAO,YAAY,EAAGA,EAAW,CAAC,EAAE,OAAO,YAAY,GACtF,qBAAsBC,EAAe,CAAC,EAAE,OAAO,qBAAqB,EAAGA,EAAe,CAAC,EAAE,OAAO,qBAAqB,GACrH,cAAeF,EAAY,aAAa,EAAE,OAAO,UAAU,CAC7D,EAEF,EACMG,EAAmC,CAAC,CAAE,MAAAC,KAAY,CAEtD,MAAMC,EAAS,CACb,MAAO,CAAC,CAAE,KAAM,SAAmB,SAAU,GAAO,QAAS,sBAAuB,CAAA,EAEhFC,EAAc,CAClB,MAAO,CAAC,CAAE,KAAM,QAAkB,SAAU,GAAO,QAAS,sBAAuB,CAAA,EAInF,OAAAC,EAAA,IAAAC,WAAA,CACG,SAASJ,GAAA,YAENG,MAAAC,EAAAA,SAAA,CAAA,SAAAC,EAAA,KAACC,EAAA,CACC,KAAK,wBACJ,GAAGZ,EAEJ,SAAAC,EACA,MAAO,CAAE,SAAU,IAAK,EAExB,SAAA,CAACQ,EAAAA,IAAAG,EAAK,KAAL,CAAU,KAAK,cAAc,MAAM,aAAc,GAAGL,EACnD,SAACE,EAAAA,IAAAV,EAAA,CAAA,CAAW,CACd,CAAA,QACCa,EAAK,KAAL,CAAU,KAAK,mBAAmB,MAAM,uBAAwB,GAAGL,EAClE,eAACR,EAAW,CAAA,SAAQ,GAAC,OAAO,qBAAsB,CAAA,EACpD,EACCU,EAAA,IAAAG,EAAK,KAAL,CAAU,KAAK,eAAe,MAAM,cAAe,GAAGL,EACrD,SAAAE,EAAAA,IAACV,EAAW,CAAA,OAAO,OAAQ,CAAA,EAC7B,EACCU,EAAAA,IAAAG,EAAK,KAAL,CAAU,KAAK,eAAe,MAAM,cAAe,GAAGJ,EACrD,SAACC,EAAAA,IAAAX,EAAA,CAAA,CAAY,CACf,CAAA,QACCc,EAAK,KAAL,CAAU,KAAK,oBAAoB,MAAM,wBAAyB,GAAGJ,EACpE,eAACV,EAAY,CAAA,SAAQ,GAAC,OAAO,qBAAsB,CAAA,EACrD,EACCW,EAAAA,IAAAG,EAAK,KAAL,CAAU,KAAK,cAAc,MAAM,aAAc,GAAGL,EACnD,SAACE,EAAAA,IAAAI,EAAA,CAAA,CAAW,CACd,CAAA,EACCJ,EAAAA,IAAAG,EAAK,KAAL,CAAU,WAAY,CAAE,GAAI,CAAE,KAAM,GAAI,OAAQ,CAAK,EAAA,GAAI,CAAE,KAAM,GAAI,OAAQ,CAAE,CAC9E,EAAA,SAAAH,EAAA,IAACK,EAAO,CAAA,KAAK,UAAU,SAAS,SAAS,SAAA,QAAA,CAEzC,CACF,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,CAEJ,CAAA,CAEJ"}