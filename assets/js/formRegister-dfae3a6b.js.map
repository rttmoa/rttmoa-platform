{"version":3,"file":"formRegister-dfae3a6b.js","sources":["../../../node_modules/antd/es/auto-complete/index.js","../../../src/views/form/basicForm/components/formRegister.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport { useZIndex } from '../_util/hooks/useZIndex';\nimport genPurePanel from '../_util/PurePanel';\nimport { isValidElement } from '../_util/reactNode';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport Select from '../select';\nconst {\n  Option\n} = Select;\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\nconst AutoComplete = (props, ref) => {\n  var _a;\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    popupClassName,\n    dropdownClassName,\n    children,\n    dataSource\n  } = props;\n  const childNodes = toArray(children);\n  // ============================= Input =============================\n  let customizeInput;\n  if (childNodes.length === 1 && isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    [customizeInput] = childNodes;\n  }\n  const getInputElement = customizeInput ? () => customizeInput : undefined;\n  // ============================ Options ============================\n  let optionChildren;\n  // [Legacy] convert `children` or `dataSource` into option children\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(item => {\n      if (isValidElement(item)) {\n        return item;\n      }\n      switch (typeof item) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n        case 'object':\n          {\n            const {\n              value: optionValue\n            } = item;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n        default:\n          return undefined;\n      }\n    }) : [];\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('AutoComplete');\n    warning.deprecated(!('dataSource' in props), 'dataSource', 'options');\n    process.env.NODE_ENV !== \"production\" ? warning(!customizeInput || !('size' in props), 'usage', 'You need to control style self instead of setting `size` when using customize input.') : void 0;\n    warning.deprecated(!dropdownClassName, 'dropdownClassName', 'popupClassName');\n  }\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\n  // ============================ zIndex ============================\n  const [zIndex] = useZIndex('SelectLike', (_a = props.dropdownStyle) === null || _a === void 0 ? void 0 : _a.zIndex);\n  return /*#__PURE__*/React.createElement(Select, Object.assign({\n    ref: ref,\n    suffixIcon: null\n  }, omit(props, ['dataSource', 'dropdownClassName']), {\n    prefixCls: prefixCls,\n    popupClassName: popupClassName || dropdownClassName,\n    dropdownStyle: Object.assign(Object.assign({}, props.dropdownStyle), {\n      zIndex\n    }),\n    className: classNames(`${prefixCls}-auto-complete`, className),\n    mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE,\n    // Internal api\n    getInputElement\n  }), optionChildren);\n};\nconst RefAutoComplete = /*#__PURE__*/React.forwardRef(AutoComplete);\n// We don't care debug panel\n/* istanbul ignore next */\nconst PurePanel = genPurePanel(RefAutoComplete);\nRefAutoComplete.Option = Option;\nRefAutoComplete._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nif (process.env.NODE_ENV !== 'production') {\n  RefAutoComplete.displayName = 'AutoComplete';\n}\nexport default RefAutoComplete;","import React, { useState } from \"react\";\r\nimport type { CascaderProps } from \"antd\";\r\nimport { AutoComplete, Button, Cascader, Checkbox, Col, Form, Input, InputNumber, Row, Select } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\ninterface DataNodeType {\r\n  value: string;\r\n  label: string;\r\n  children?: DataNodeType[];\r\n}\r\n\r\nconst residences: CascaderProps<DataNodeType>[\"options\"] = [\r\n  {\r\n    value: \"zhejiang\",\r\n    label: \"Zhejiang\",\r\n    children: [\r\n      {\r\n        value: \"hangzhou\",\r\n        label: \"Hangzhou\",\r\n        children: [\r\n          {\r\n            value: \"xihu\",\r\n            label: \"West Lake\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    value: \"jiangsu\",\r\n    label: \"Jiangsu\",\r\n    children: [\r\n      {\r\n        value: \"nanjing\",\r\n        label: \"Nanjing\",\r\n        children: [\r\n          {\r\n            value: \"zhonghuamen\",\r\n            label: \"Zhong Hua Men\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 }\r\n  }\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8\r\n    }\r\n  }\r\n};\r\n\r\nconst App: React.FC<{ value: string }> = ({ value }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values: any) => {\r\n    console.log(\"Received values of form: \", values);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select style={{ width: 70 }}>\r\n        <Option value=\"86\">+86</Option>\r\n        <Option value=\"87\">+87</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n  const suffixSelector = (\r\n    <Form.Item name=\"suffix\" noStyle>\r\n      <Select style={{ width: 70 }}>\r\n        <Option value=\"USD\">$</Option>\r\n        <Option value=\"CNY\">Â¥</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n  const [autoCompleteResult, setAutoCompleteResult] = useState<string[]>([]);\r\n\r\n  const onWebsiteChange = (value: string) => {\r\n    if (!value) {\r\n      setAutoCompleteResult([]);\r\n    } else {\r\n      setAutoCompleteResult([\".com\", \".org\", \".net\"].map(domain => `${value}${domain}`));\r\n    }\r\n  };\r\n\r\n  const websiteOptions = autoCompleteResult.map(website => ({\r\n    label: website,\r\n    value: website\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      {value == \"FormRegister\" && (\r\n        <>\r\n          <Form\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            initialValues={{ residence: [\"zhejiang\", \"hangzhou\", \"xihu\"], prefix: \"86\" }}\r\n            style={{ maxWidth: 600 }}\r\n            scrollToFirstError\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              label=\"E-mail\"\r\n              rules={[\r\n                {\r\n                  type: \"email\",\r\n                  message: \"The input is not valid E-mail!\"\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your E-mail!\"\r\n                }\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your password!\"\r\n                }\r\n              ]}\r\n              hasFeedback\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"confirm\"\r\n              label=\"Confirm Password\"\r\n              dependencies={[\"password\"]}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please confirm your password!\"\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(new Error(\"The new password that you entered do not match!\"));\r\n                  }\r\n                })\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"nickname\"\r\n              label=\"Nickname\"\r\n              tooltip=\"What do you want others to call you?\"\r\n              rules={[{ required: true, message: \"Please input your nickname!\", whitespace: true }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"residence\"\r\n              label=\"Habitual Residence\"\r\n              rules={[{ type: \"array\", required: true, message: \"Please select your habitual residence!\" }]}\r\n            >\r\n              <Cascader options={residences} />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"phone\" label=\"Phone Number\" rules={[{ required: true, message: \"Please input your phone number!\" }]}>\r\n              <Input addonBefore={prefixSelector} style={{ width: \"100%\" }} />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"donation\" label=\"Donation\" rules={[{ required: true, message: \"Please input donation amount!\" }]}>\r\n              <InputNumber addonAfter={suffixSelector} style={{ width: \"100%\" }} />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"website\" label=\"Website\" rules={[{ required: true, message: \"Please input website!\" }]}>\r\n              <AutoComplete options={websiteOptions} onChange={onWebsiteChange} placeholder=\"website\">\r\n                <Input />\r\n              </AutoComplete>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"intro\" label=\"Intro\" rules={[{ required: true, message: \"Please input Intro\" }]}>\r\n              <Input.TextArea showCount maxLength={100} />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"gender\" label=\"Gender\" rules={[{ required: true, message: \"Please select gender!\" }]}>\r\n              <Select placeholder=\"select your gender\">\r\n                <Option value=\"male\">Male</Option>\r\n                <Option value=\"female\">Female</Option>\r\n                <Option value=\"other\">Other</Option>\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\r\n              <Row gutter={8}>\r\n                <Col span={12}>\r\n                  <Form.Item name=\"captcha\" noStyle rules={[{ required: true, message: \"Please input the captcha you got!\" }]}>\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Button>Get captcha</Button>\r\n                </Col>\r\n              </Row>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"agreement\"\r\n              valuePropName=\"checked\"\r\n              rules={[\r\n                {\r\n                  validator: (_, value) => (value ? Promise.resolve() : Promise.reject(new Error(\"Should accept agreement\")))\r\n                }\r\n              ]}\r\n              {...tailFormItemLayout}\r\n            >\r\n              <Checkbox>\r\n                I have read the <a href=\"\">agreement</a>\r\n              </Checkbox>\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Register\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"names":["Option","Select","isSelectOptionOrSelectOptGroup","child","AutoComplete","props","ref","_a","customizePrefixCls","className","popupClassName","dropdownClassName","children","dataSource","childNodes","toArray","customizeInput","isValidElement","getInputElement","optionChildren","item","React.createElement","optionValue","getPrefixCls","React.useContext","ConfigContext","prefixCls","zIndex","useZIndex","omit","classNames","RefAutoComplete","React.forwardRef","PurePanel","genPurePanel","AutoComplete$1","residences","formItemLayout","tailFormItemLayout","App","value","form","Form","onFinish","values","prefixSelector","jsx","suffixSelector","autoCompleteResult","setAutoCompleteResult","useState","onWebsiteChange","domain","websiteOptions","website","Fragment","jsxs","Input","getFieldValue","_","Cascader","InputNumber","Row","Col","Button","Checkbox"],"mappings":"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","x_google_ignoreList":[0]}