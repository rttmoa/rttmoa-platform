{"version":3,"file":"index-236dd86a.js","sources":["../../../src/views/system/role/index.tsx"],"sourcesContent":["import { useRef, useState } from 'react';\r\nimport { Form } from 'antd';\r\nimport { formatDataForProTable } from '@/utils';\r\nimport { UserList } from '@/api/interface';\r\nimport { ProTable } from '@ant-design/pro-components';\r\nimport type { ActionType, FormInstance } from '@ant-design/pro-components';\r\nimport { message } from '@/hooks/useMessage';\r\nimport TableColumnsConfig from './component/ColumnConfig';\r\nimport ToolBarRender from './component/ToolBar';\r\nimport { addRole, delMoreJob, delRole, findRole, modifyRole } from '@/api/modules/system/common';\r\nimport './index.less';\r\nimport ModalComponent from './component/Modal';\r\nimport DrawerComponent from './component/Drawer';\r\nimport FooterComponent from './component/Footer';\r\nimport ModalAuth from './component/ModalAuth';\r\n\r\nconst useProTable = () => {\r\n\tconst actionRef = useRef<ActionType>(); // 表格 ref\r\n\tconst formRef = useRef<FormInstance>(); // 表单 ref\r\n\r\n\tconst [form] = Form.useForm();\r\n\r\n\tconst [openSearch, SetOpenSearch] = useState<boolean>(false); // 工具栏：开启关闭表单搜索\r\n\tconst [loading, SetLoading] = useState<boolean>(false); // Loading：加载Loading\r\n\tconst [pagination, SetPagination] = useState<any>({ page: 1, pageSize: 10, total: 0 }); // 分页数据\r\n\tconst [selectedRows, setSelectedRows] = useState<any[]>([]); // 表格：选择行数据\r\n\r\n\t// Drawer\r\n\tconst [drawerCurrentRow, setDrawerCurrentRow] = useState({}); // Drawer 选择当前行数据\r\n\tconst [drawerIsVisible, setDrawerIsVisible] = useState<boolean>(false); // Drawer 是否显示\r\n\r\n\t// Modal\r\n\tconst [modalIsVisible, setModalIsVisible] = useState<boolean>(false);\r\n\tconst [modalTitle, setModalTitle] = useState<string>('');\r\n\tconst [modalType, setModalType] = useState<string>('');\r\n\tconst [modalUserInfo, setModalUserInfo] = useState({});\r\n\r\n\tconst [modalIsOpenAuth, setModalIsOpenAuth] = useState<boolean>(false);\r\n\r\n\tconst quickSearch = () => {};\r\n\r\n\t// * 操作 — 员工： 新建、编辑、详情、删除  按钮\r\n\tconst handleOperator = async (type: string, item: any) => {\r\n\t\t// console.log('handleOperator', type, item);\r\n\r\n\t\tif (type == 'authorize') {\r\n\t\t\t// console.log(object);\r\n\t\t\tsetModalIsOpenAuth(true);\r\n\t\t} else if (type === 'detail') {\r\n\t\t\tsetDrawerIsVisible(true);\r\n\t\t\tsetDrawerCurrentRow(item);\r\n\t\t} else if (type === 'create') {\r\n\t\t\tsetModalIsVisible(true);\r\n\t\t\tsetModalTitle('新建用户');\r\n\t\t\tsetModalType(type);\r\n\t\t\tsetModalUserInfo({});\r\n\t\t} else if (['edit'].includes(type)) {\r\n\t\t\tsetModalIsVisible(true);\r\n\t\t\tsetModalTitle(type === 'edit' ? '编辑用户' : '查看详情');\r\n\t\t\tsetModalType(type);\r\n\t\t\tsetModalUserInfo(item);\r\n\t\t} else if (type === 'delete') {\r\n\t\t\tconst hide = message.loading('正在删除');\r\n\t\t\ttry {\r\n\t\t\t\tconst result: any = await delRole(item._id);\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\thide();\r\n\t\t\t\t\tactionRef?.current?.reload();\r\n\t\t\t\t\tmessage.success(`删除 ${item?.role_name} 成功`);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\thide();\r\n\t\t\t\tmessage.error('删除失败、请再试一次！');\r\n\t\t\t}\r\n\t\t} else if (type === 'moreDelete') {\r\n\t\t\tconst hide = message.loading('正在删除');\r\n\t\t\ttry {\r\n\t\t\t\tconst selectIds = selectedRows.map(value => value?._id);\r\n\t\t\t\tconsole.log('selectIds', selectIds);\r\n\t\t\t\tconst res: any = await delMoreJob(selectIds || []);\r\n\t\t\t\tif (res) {\r\n\t\t\t\t\thide();\r\n\t\t\t\t\tsetSelectedRows([]);\r\n\t\t\t\t\tactionRef.current?.reloadAndRest?.();\r\n\t\t\t\t\tmessage.success('全部删除完成！');\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\thide();\r\n\t\t\t\tmessage.error('删除失败、请再试一次！');\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t// * 操作 — 员工： 新建、编辑、详情  弹窗内容提交\r\n\tconst handleModalSubmit = async (type: string, item: any) => {\r\n\t\tconsole.log('Modal 提交：', type, item);\r\n\t\t// 1、获取form字段值 并 过滤出有值的字段\r\n\t\t// 2、字段值传递接口、获取接口结果、并提示出信息\r\n\t\t// 3、重置Modal信息\r\n\t\t// 4、重新请求，根据页码等条件\r\n\t\tconst hide = message.loading(type == 'create' ? '正在添加' : '正在编辑');\r\n\t\ttry {\r\n\t\t\tlet res = type === 'create' ? await addRole(item) : await modifyRole(item);\r\n\t\t\tif (res) {\r\n\t\t\t\thide();\r\n\t\t\t\tform.resetFields();\r\n\t\t\t\tsetModalTitle('');\r\n\t\t\t\tsetModalType('');\r\n\t\t\t\tsetModalIsVisible(false);\r\n\t\t\t\tsetModalUserInfo({});\r\n\t\t\t\tif (actionRef.current) actionRef.current.reload();\r\n\t\t\t\tmessage.success(type == 'create' ? '添加成功' : '编辑成功');\r\n\t\t\t}\r\n\t\t} catch (error: any) {\r\n\t\t\thide();\r\n\t\t\tmessage.error(error.message || error.msg);\r\n\t\t}\r\n\t};\r\n\t// * 工具栏 ToolBar\r\n\tlet ToolBarParams: any = {\r\n\t\tquickSearch, // 工具栏：快捷搜索\r\n\t\topenSearch,\r\n\t\tSetOpenSearch, // 工具栏：开启表单搜索\r\n\t\thandleOperator,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ProTable<UserList>\r\n\t\t\t\trowKey='_id'\r\n\t\t\t\tclassName='ant-pro-table-scroll'\r\n\t\t\t\t// scroll={{ x: 2500, y: '100vh' }} // 100vh\r\n\t\t\t\tbordered\r\n\t\t\t\tcardBordered\r\n\t\t\t\tdateFormatter='string'\r\n\t\t\t\theaderTitle='使用 ProTable'\r\n\t\t\t\tdefaultSize='small'\r\n\t\t\t\tloading={loading}\r\n\t\t\t\tcolumns={TableColumnsConfig(handleOperator)}\r\n\t\t\t\ttoolBarRender={() => ToolBarRender(ToolBarParams)} // 渲染工具栏\r\n\t\t\t\tactionRef={actionRef} // Table action 的引用，便于自定义触发 actionRef.current.reset()\r\n\t\t\t\tformRef={formRef} // 可以获取到查询表单的 form 实例\r\n\t\t\t\tsearch={openSearch ? false : { labelWidth: 'auto', filterType: 'query', span: 6 }} // 搜索表单配置\r\n\t\t\t\trequest={async (params, sort, filter) => {\r\n\t\t\t\t\tSetLoading(true);\r\n\t\t\t\t\t// console.log('request请求参数：', params, sort, filter);\r\n\t\t\t\t\tconst { data }: any = await findRole({ ...params, page: params.current });\r\n\t\t\t\t\t// console.log('data', data);\r\n\t\t\t\t\tSetLoading(false);\r\n\t\t\t\t\tSetPagination({ ...pagination, total: data.total });\r\n\t\t\t\t\treturn formatDataForProTable<any>({ ...data, page: params.current });\r\n\t\t\t\t}}\r\n\t\t\t\tpagination={{\r\n\t\t\t\t\t...pagination,\r\n\t\t\t\t\tpageSizeOptions: [10, 20, 30, 50, 100],\r\n\t\t\t\t\tonChange: (page, pageSize) => {\r\n\t\t\t\t\t\tSetPagination({ ...pagination, page, pageSize });\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t\trowSelection={{\r\n\t\t\t\t\tonChange: (selectedRowKeys, selectedRows) => {\r\n\t\t\t\t\t\tsetSelectedRows(selectedRows);\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t\tghost={false}\r\n\t\t\t\tonSizeChange={() => {}} // Table 尺寸发生改变、将尺寸存储到数据库中\r\n\t\t\t\tonRequestError={(error: any) => {}} // 数据加载失败时触发\r\n\t\t\t\teditable={{ type: 'multiple' }}\r\n\t\t\t\tcolumnsState={{\r\n\t\t\t\t\t// 持久化列的 key，用于判断是否是同一个 table\r\n\t\t\t\t\tpersistenceKey: 'use-pro-table-key',\r\n\t\t\t\t\t// 持久化列的类型: localStorage | sessionStorage\r\n\t\t\t\t\tpersistenceType: 'localStorage',\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{selectedRows?.length > 0 && <FooterComponent actionRef={actionRef} selectedRows={selectedRows} setSelectedRows={setSelectedRows} handleOperator={handleOperator} />}\r\n\t\t\t<ModalComponent\r\n\t\t\t\tform={form}\r\n\t\t\t\tmodalIsVisible={modalIsVisible}\r\n\t\t\t\tsetModalIsVisible={setModalIsVisible}\r\n\t\t\t\tmodalTitle={modalTitle}\r\n\t\t\t\tmodalType={modalType}\r\n\t\t\t\tmodalUserInfo={modalUserInfo}\r\n\t\t\t\thandleModalSubmit={handleModalSubmit}\r\n\t\t\t/>\r\n\t\t\t<DrawerComponent\r\n\t\t\t\tdrawerIsVisible={drawerIsVisible}\r\n\t\t\t\tdrawerCurrentRow={drawerCurrentRow}\r\n\t\t\t\tsetDrawerCurrentRow={setDrawerCurrentRow}\r\n\t\t\t\tsetDrawerIsVisible={setDrawerIsVisible}\r\n\t\t\t\thandleOperator={handleOperator}\r\n\t\t\t/>\r\n\t\t\t{/* 用户授权组件 */}\r\n\t\t\t<ModalAuth modalIsOpenAuth={modalIsOpenAuth} setModalIsOpenAuth={setModalIsOpenAuth} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default useProTable;\r\n"],"names":["useProTable","actionRef","useRef","formRef","form","Form","openSearch","SetOpenSearch","useState","loading","SetLoading","pagination","SetPagination","selectedRows","setSelectedRows","drawerCurrentRow","setDrawerCurrentRow","drawerIsVisible","setDrawerIsVisible","modalIsVisible","setModalIsVisible","modalTitle","setModalTitle","modalType","setModalType","modalUserInfo","setModalUserInfo","modalIsOpenAuth","setModalIsOpenAuth","quickSearch","handleOperator","type","item","hide","message","delRole","_a","selectIds","value","delMoreJob","_c","_b","handleModalSubmit","addRole","modifyRole","error","ToolBarParams","jsxs","Fragment","jsx","ProTable","TableColumnsConfig","ToolBarRender","params","sort","filter","data","findRole","formatDataForProTable","page","pageSize","selectedRowKeys","FooterComponent","ModalComponent","DrawerComponent","ModalAuth"],"mappings":"y8DAgBA,MAAMA,GAAc,IAAM,CACzB,MAAMC,EAAYC,EAAAA,SACZC,EAAUD,EAAAA,SAEV,CAACE,CAAI,EAAIC,EAAK,QAAQ,EAEtB,CAACC,EAAYC,CAAa,EAAIC,WAAkB,EAAK,EACrD,CAACC,EAASC,CAAU,EAAIF,WAAkB,EAAK,EAC/C,CAACG,EAAYC,CAAa,EAAIJ,EAAc,SAAA,CAAE,KAAM,EAAG,SAAU,GAAI,MAAO,CAAG,CAAA,EAC/E,CAACK,EAAcC,CAAe,EAAIN,EAAA,SAAgB,CAAE,CAAA,EAGpD,CAACO,EAAkBC,CAAmB,EAAIR,EAAA,SAAS,CAAE,CAAA,EACrD,CAACS,EAAiBC,CAAkB,EAAIV,WAAkB,EAAK,EAG/D,CAACW,EAAgBC,CAAiB,EAAIZ,WAAkB,EAAK,EAC7D,CAACa,EAAYC,CAAa,EAAId,WAAiB,EAAE,EACjD,CAACe,EAAWC,CAAY,EAAIhB,WAAiB,EAAE,EAC/C,CAACiB,EAAeC,CAAgB,EAAIlB,EAAA,SAAS,CAAE,CAAA,EAE/C,CAACmB,EAAiBC,CAAkB,EAAIpB,WAAkB,EAAK,EAE/DqB,EAAc,IAAM,CAAA,EAGpBC,EAAiB,MAAOC,EAAcC,IAAc,WAGzD,GAAID,GAAQ,YAEXH,EAAmB,EAAI,UACbG,IAAS,SACnBb,EAAmB,EAAI,EACvBF,EAAoBgB,CAAI,UACdD,IAAS,SACnBX,EAAkB,EAAI,EACtBE,EAAc,MAAM,EACpBE,EAAaO,CAAI,EACjBL,EAAiB,CAAE,CAAA,UACT,CAAC,MAAM,EAAE,SAASK,CAAI,EAChCX,EAAkB,EAAI,EACRE,EAAAS,IAAS,OAAS,OAAS,MAAM,EAC/CP,EAAaO,CAAI,EACjBL,EAAiBM,CAAI,UACXD,IAAS,SAAU,CACvB,MAAAE,EAAOC,EAAQ,QAAQ,MAAM,EAC/B,GAAA,CACiB,MAAMC,EAAQH,EAAK,GAAG,IAEpCC,KACLG,EAAAnC,GAAA,YAAAA,EAAW,UAAX,MAAAmC,EAAoB,SACpBF,EAAQ,QAAQ,MAAMF,GAAA,YAAAA,EAAM,SAAS,KAAK,QAE5B,CACVC,IACLC,EAAQ,MAAM,aAAa,CAC5B,CAAA,SACUH,IAAS,aAAc,CAC3B,MAAAE,EAAOC,EAAQ,QAAQ,MAAM,EAC/B,GAAA,CACH,MAAMG,EAAYxB,EAAa,IAAIyB,GAASA,GAAA,YAAAA,EAAO,GAAG,EAErC,MAAMC,EAAWF,GAAa,CAAE,CAAA,IAE3CJ,IACLnB,EAAgB,CAAE,CAAA,GAClB0B,GAAAC,EAAAxC,EAAU,UAAV,YAAAwC,EAAmB,gBAAnB,MAAAD,EAAA,KAAAC,GACAP,EAAQ,QAAQ,SAAS,QAEX,CACVD,IACLC,EAAQ,MAAM,aAAa,CAC5B,CACD,CAAA,EAGKQ,EAAoB,MAAOX,EAAcC,IAAc,CAM5D,MAAMC,EAAOC,EAAQ,QAAQH,GAAQ,SAAW,OAAS,MAAM,EAC3D,GAAA,EACOA,IAAS,SAAW,MAAMY,EAAQX,CAAI,EAAI,MAAMY,EAAWZ,CAAI,KAEnEC,IACL7B,EAAK,YAAY,EACjBkB,EAAc,EAAE,EAChBE,EAAa,EAAE,EACfJ,EAAkB,EAAK,EACvBM,EAAiB,CAAE,CAAA,EACfzB,EAAU,SAASA,EAAU,QAAQ,SACzCiC,EAAQ,QAAQH,GAAQ,SAAW,OAAS,MAAM,SAE3Cc,EAAY,CACfZ,IACLC,EAAQ,MAAMW,EAAM,SAAWA,EAAM,GAAG,CACzC,CAAA,EAGD,IAAIC,EAAqB,CACxB,YAAAjB,EACA,WAAAvB,EACA,cAAAC,EACA,eAAAuB,CAAA,EAGD,OAEEiB,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,EAAA,IAACC,EAAA,CACA,OAAO,MACP,UAAU,uBAEV,SAAQ,GACR,aAAY,GACZ,cAAc,SACd,YAAY,cACZ,YAAY,QACZ,QAAAzC,EACA,QAAS0C,EAAmBrB,CAAc,EAC1C,cAAe,IAAMsB,EAAcN,CAAa,EAChD,UAAA7C,EACA,QAAAE,EACA,OAAQG,EAAa,GAAQ,CAAE,WAAY,OAAQ,WAAY,QAAS,KAAM,CAAE,EAChF,QAAS,MAAO+C,EAAQC,EAAMC,IAAW,CACxC7C,EAAW,EAAI,EAET,KAAA,CAAE,KAAA8C,GAAc,MAAMC,EAAS,CAAE,GAAGJ,EAAQ,KAAMA,EAAO,OAAA,CAAS,EAExE,OAAA3C,EAAW,EAAK,EAChBE,EAAc,CAAE,GAAGD,EAAY,MAAO6C,EAAK,MAAO,EAC3CE,EAA2B,CAAE,GAAGF,EAAM,KAAMH,EAAO,QAAS,CACpE,EACA,WAAY,CACX,GAAG1C,EACH,gBAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAG,EACrC,SAAU,CAACgD,EAAMC,IAAa,CAC7BhD,EAAc,CAAE,GAAGD,EAAY,KAAAgD,EAAM,SAAAC,CAAU,CAAA,CAChD,CACD,EACA,aAAc,CACb,SAAU,CAACC,EAAiBhD,IAAiB,CAC5CC,EAAgBD,CAAY,CAC7B,CACD,EACA,MAAO,GACP,aAAc,IAAM,CAAC,EACrB,eAAiBgC,GAAe,CAAC,EACjC,SAAU,CAAE,KAAM,UAAW,EAC7B,aAAc,CAEb,eAAgB,oBAEhB,gBAAiB,cAClB,CAAA,CACD,GACChC,GAAA,YAAAA,EAAc,QAAS,GAAKoC,MAACa,GAAgB,UAAA7D,EAAsB,aAAAY,EAA4B,gBAAAC,EAAkC,eAAAgB,EAAgC,EAClKmB,EAAA,IAACc,EAAA,CACA,KAAA3D,EACA,eAAAe,EACA,kBAAAC,EACA,WAAAC,EACA,UAAAE,EACA,cAAAE,EACA,kBAAAiB,CAAA,CACD,EACAO,EAAA,IAACe,EAAA,CACA,gBAAA/C,EACA,iBAAAF,EACA,oBAAAC,EACA,mBAAAE,EACA,eAAAY,CAAA,CACD,EAEAmB,EAAAA,IAACgB,EAAU,CAAA,gBAAAtC,EAAkC,mBAAAC,CAAwC,CAAA,CACtF,CAAA,CAAA,CAEF"}