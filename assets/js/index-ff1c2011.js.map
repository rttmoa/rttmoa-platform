{"version":3,"file":"index-ff1c2011.js","sources":["../../../src/views/feat/tabs/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { Button, Card, Divider, Input, Space, Typography } from \"antd\";\nimport { HOME_URL } from \"@/config\";\nimport { RootState, useDispatch, useSelector } from \"@/redux\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { RefreshContext } from \"@/context/Refresh\";\nimport { setGlobalState } from \"@/redux/modules/global\";\nimport { message } from \"@/hooks/useMessage\";\nimport { removeTab, closeMultipleTab, closeTabsOnSide, setTabTitle } from \"@/redux/modules/tabs\";\nimport {\n  ReloadOutlined,\n  ExpandOutlined,\n  CompressOutlined,\n  CloseCircleOutlined,\n  ColumnWidthOutlined,\n  SwitcherOutlined,\n  VerticalLeftOutlined,\n  VerticalRightOutlined,\n  SmileOutlined\n} from \"@ant-design/icons\";\n\nconst Tabs: React.FC = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n\n  const path = pathname + search;\n\n  const [value, setValue] = useState(\"\");\n\n  const maximize = useSelector((state: RootState) => state.global.maximize);\n\n  const { updateOutletShow } = useContext(RefreshContext);\n  const refreshCurrentPage = () => {\n    updateOutletShow(false);\n    setTimeout(() => updateOutletShow(true));\n  };\n\n  // todo：react-routerV6 路由传递参数的三种方式\n  // State 传参：注意：此时路由上不能有params 传参时的参数占位，否则无法跳转；\n  const handleToDetail = (id: string, query: string = \"\") => {\n    // iD: params传参 （使用useParams接收参数）\n    navigate(`/feat/tabs/detail/${id}${query}`);\n    // State 传参：\n    // navigate(\"/feat/tabs/\", { state: { name: \"Eula\", age: \"18\" } });\n  };\n\n  const stateDetail = () => {\n    const obj = {\n      id: 3,\n      name: \"san\",\n      age: 36\n    };\n    navigate(\"/feat/tabs/\", { state: obj });\n  };\n  // console.log(\"/feat/tabs页：\", useLocation());\n\n  return (\n    <React.Fragment>\n      <Card className=\"mb10\">\n        <Typography.Title level={4} className=\"mb20\">\n          Tab 标题\n        </Typography.Title>\n        <Space.Compact style={{ width: \"350px\" }}>\n          <Input placeholder=\"Please enter content\" value={value} onChange={e => setValue(e.target.value)} />\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              if (!value) return message.warning(\"请输入 Tab 标题\");\n              dispatch(setTabTitle(value));\n            }}\n          >\n            Submit\n          </Button>\n        </Space.Compact>\n      </Card>\n\n      <Card className=\"mb10\">\n        <Typography.Title level={4} className=\"mb20\">\n          Tab 操作\n        </Typography.Title>\n        <Space className=\"text\">\n          <Button type=\"primary\" icon={<ReloadOutlined />} onClick={refreshCurrentPage}>\n            刷新当前页\n          </Button>\n          <Button\n            type=\"primary\"\n            icon={maximize ? <CompressOutlined /> : <ExpandOutlined />}\n            onClick={() => dispatch(setGlobalState({ key: \"maximize\", value: !maximize }))}\n          >\n            当前页全屏切换\n          </Button>\n          <Button type=\"primary\" icon={<CloseCircleOutlined />} onClick={() => dispatch(removeTab({ path, isCurrent: true }))}>\n            关闭当前标签页\n          </Button>\n          <Button\n            type=\"primary\"\n            icon={<VerticalRightOutlined />}\n            onClick={() => dispatch(closeTabsOnSide({ path, type: \"left\" }))}\n          >\n            关闭左侧标签页\n          </Button>\n          <Button\n            type=\"primary\"\n            icon={<VerticalLeftOutlined />}\n            onClick={() => dispatch(closeTabsOnSide({ path, type: \"right\" }))}\n          >\n            关闭右侧标签页\n          </Button>\n          <Button type=\"primary\" icon={<ColumnWidthOutlined />} onClick={() => dispatch(closeMultipleTab({ path }))}>\n            关闭其它标签页\n          </Button>\n          <Button\n            type=\"primary\"\n            icon={<SwitcherOutlined />}\n            onClick={() => {\n              dispatch(closeMultipleTab({}));\n              navigate(HOME_URL);\n            }}\n          >\n            关闭所有标签页\n          </Button>\n        </Space>\n      </Card>\n\n      <Card>\n        <Typography.Title level={4} className=\"mb20\" style={{ color: \"red\" }}>\n          Tab 跳转 （Tabs Detail中接收参数处理）\n        </Typography.Title>\n        <Typography.Title level={5}>详情页：\"path\":\"/feat/tabs/detail/:id\"</Typography.Title>\n        <Space className=\"text\">\n          <Button type=\"primary\" icon={<SmileOutlined />} onClick={() => handleToDetail(\"1\")}>\n            打开详情页1\n          </Button>\n          <Button type=\"primary\" icon={<SmileOutlined />} onClick={() => handleToDetail(\"2\")}>\n            Params 传参（打开详情页2）\n          </Button>\n          <Button type=\"primary\" icon={<SmileOutlined />} onClick={() => handleToDetail(\"5\", \"?params=详情文章&pageSize=30\")}>\n            Search 传参\n          </Button>\n          <Button type=\"primary\" icon={<SmileOutlined />} onClick={() => stateDetail()}>\n            State 传参（传递本页）\n          </Button>\n        </Space>\n      </Card>\n\n      <Card className=\"mb10\">\n        <Typography.Title level={4} className=\"mb20\" style={{ color: \"red\" }}>\n          跳转 空白页\n        </Typography.Title>\n        <Button type=\"primary\" icon={<SmileOutlined />} onClick={() => navigate(\"/noLayout/index\")}>\n          No layout 空白页\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Tabs;\n"],"names":["Tabs","navigate","useNavigate","dispatch","useDispatch","pathname","search","useLocation","path","value","setValue","useState","maximize","useSelector","state","updateOutletShow","useContext","RefreshContext","refreshCurrentPage","handleToDetail","id","query","stateDetail","jsxs","React","Card","jsx","Typography","Space","Input","e","Button","message","setTabTitle","ReloadOutlined","CompressOutlined","ExpandOutlined","setGlobalState","CloseCircleOutlined","removeTab","VerticalRightOutlined","closeTabsOnSide","VerticalLeftOutlined","ColumnWidthOutlined","closeMultipleTab","SwitcherOutlined","HOME_URL","SmileOutlined"],"mappings":"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"}