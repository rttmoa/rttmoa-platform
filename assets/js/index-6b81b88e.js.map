{"version":3,"file":"index-6b81b88e.js","sources":["../../../src/hooks/useClipboard.ts","../../../src/views/feat/clipboard/index.tsx"],"sourcesContent":["import { useRef, useState } from \"react\";\n\ninterface ClipboardFunctions {\n  copyToClipboard: (text: string) => void;\n}\n\ntype IsCopiedState = boolean;\n\ntype TextareaRef = React.RefObject<HTMLTextAreaElement>;\n\n// ! ËÅîÂêàÁ±ªÂûã\ntype ClipboardHook = ClipboardFunctions & {\n  isCopied: IsCopiedState;\n  textareaRef: TextareaRef;\n};\n\n// todoÔºöuse Hooks ËÆæÁΩÆÂâ™ÂàáÁâà\n// todoÔºöÂ∏∏Áî®ÂäüËÉΩÔºö Ââ™ÂàáÊùø\nconst useClipboard = (): ClipboardHook => {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const [isCopied, setIsCopied] = useState<IsCopiedState>(false);\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setIsCopied(true);\n    } catch (err) {\n      console.error(\"Â§çÂà∂Êìç‰Ωú‰∏çË¢´ÊîØÊåÅÊàñÂ§±Ë¥•: \", err);\n    }\n  };\n\n  return { copyToClipboard, isCopied, textareaRef };\n};\n\nexport default useClipboard;\n","import { useState } from \"react\";\nimport { Alert, Button, Card, Divider, Input, Space, Typography } from \"antd\";\nimport { SmileFilled, SmileOutlined } from \"@ant-design/icons\";\nimport { message } from \"@/hooks/useMessage\";\nimport useClipboard from \"@/hooks/useClipboard\";\n\nconst { Paragraph, Link } = Typography;\n\nconst Clipboard: React.FC = () => {\n  const { copyToClipboard, isCopied } = useClipboard();\n\n  const [value, setValue] = useState(\"\");\n\n  const handleCopy = () => {\n    if (!value) return message.warning(\"ËØ∑ËæìÂÖ•Ë¶Å Copy ÁöÑÂÜÖÂÆπ ÔºÅ\");\n    copyToClipboard(value);\n    message.success(\"Copy Success ÔºÅ\");\n  };\n\n  const antMessage = (\n    <span>\n      Ant Design Paragraph Ôºö\n      <Link href=\"https://ant.design/components/typography-cn#components-typography-demo-interactive\" target=\"_blank\">\n        https://ant.design/components/typography-cn#components-typography-demo-interactive\n      </Link>\n    </span>\n  );\n\n  return (\n    <Card>\n      <Alert message=\"useClipboard hook üåà\" type=\"success\" showIcon className=\"mb20\" />\n\n      <Space.Compact style={{ width: \"350px\" }}>\n        <Input placeholder=\"Please enter content\" value={value} onChange={e => setValue(e.target.value)} />\n        <Button type=\"primary\" onClick={handleCopy}>\n          Copy\n        </Button>\n      </Space.Compact>\n      <span className=\"ml10\"> Copy Status: {isCopied + \"\"}</span>\n\n      <Divider />\n\n      <Alert message={antMessage} type=\"success\" showIcon className=\"mb20\" />\n\n      <Paragraph copyable>This is a copyable text.</Paragraph>\n      <Paragraph copyable={{ text: \"Hello, Hooks Admin!\" }}>Replace copy text.</Paragraph>\n      <Paragraph\n        copyable={{\n          icon: [<SmileOutlined key=\"copy-icon\" />, <SmileFilled key=\"copied-icon\" />],\n          tooltips: [\"click here\", \"you clicked!!\"]\n        }}\n      >\n        Custom Copy icon and replace tooltips text.\n      </Paragraph>\n      <Paragraph copyable={{ tooltips: false }}>Hide Copy tooltips.</Paragraph>\n    </Card>\n  );\n};\n\nexport default Clipboard;\n"],"names":["useClipboard","textareaRef","useRef","isCopied","setIsCopied","useState","copyToClipboard","text","navigator","clipboard","writeText","err","console","error","Paragraph","Link","Typography","Clipboard","value","setValue","handleCopy","message","antMessage","Card","jsx","Alert","jsxs","Space","Input","e","Button","Divider","SmileOutlined","SmileFilled"],"mappings":"4RAkBA,MAAMA,EAAeA,IAAqB,CAClC,MAAAC,EAAcC,SAA4B,IAAI,EAC9C,CAACC,EAAUC,CAAW,EAAIC,WAAwB,EAAK,EAWtD,MAAA,CAAEC,gBATe,MAAOC,GAAiB,CAC1C,GAAA,CACI,MAAAC,UAAUC,UAAUC,UAAUH,CAAI,EACxCH,EAAY,EAAI,QACTO,EAAK,CACJC,QAAAC,MAAM,gBAAiBF,CAAG,CACpC,GAGwBR,SAAAA,EAAUF,YAAAA,EACtC,EC1BM,CAAE,UAAAa,EAAW,KAAAC,CAAS,EAAAC,EAEtBC,EAAsB,IAAM,CAChC,KAAM,CAAE,gBAAAX,EAAiB,SAAAH,CAAS,EAAIH,EAAa,EAE7C,CAACkB,EAAOC,CAAQ,EAAId,WAAS,EAAE,EAE/Be,EAAa,IAAM,CACvB,GAAI,CAACF,EAAc,OAAAG,EAAQ,QAAQ,iBAAiB,EACpDf,EAAgBY,CAAK,EACrBG,EAAQ,QAAQ,gBAAgB,CAAA,EAG5BC,SACH,OAAK,CAAA,SAAA,CAAA,+BAEHP,EAAK,CAAA,KAAK,qFAAqF,OAAO,SAAS,SAEhH,qFAAA,CACF,CAAA,CAAA,EAGF,cACGQ,EACC,CAAA,SAAA,CAACC,EAAAA,IAAAC,EAAA,CAAM,QAAQ,uBAAuB,KAAK,UAAU,SAAQ,GAAC,UAAU,MAAO,CAAA,EAE/EC,OAACC,EAAM,QAAN,CAAc,MAAO,CAAE,MAAO,OAC7B,EAAA,SAAA,CAACH,EAAAA,IAAAI,EAAA,CAAM,YAAY,uBAAuB,MAAAV,EAAc,YAAeC,EAASU,EAAE,OAAO,KAAK,CAAG,CAAA,QAChGC,EAAO,CAAA,KAAK,UAAU,QAASV,EAAY,SAE5C,OAAA,CAAA,EACF,EACAM,EAAAA,KAAC,OAAK,CAAA,UAAU,OAAO,SAAA,CAAA,iBAAevB,EAAW,EAAA,EAAG,QAEnD4B,EAAQ,EAAA,EAETP,EAAAA,IAACC,GAAM,QAASH,EAAY,KAAK,UAAU,SAAQ,GAAC,UAAU,MAAO,CAAA,EAEpEE,EAAA,IAAAV,EAAA,CAAU,SAAQ,GAAC,SAAwB,2BAAA,QAC3CA,EAAU,CAAA,SAAU,CAAE,KAAM,uBAAyB,SAAkB,qBAAA,EACxEU,EAAA,IAACV,EAAA,CACC,SAAU,CACR,KAAM,CAAEU,EAAAA,IAAAQ,EAAA,GAAkB,WAAY,EAAIR,EAAAA,IAACS,EAAgB,GAAA,aAAc,CAAE,EAC3E,SAAU,CAAC,aAAc,eAAe,CAC1C,EACD,SAAA,6CAAA,CAED,QACCnB,EAAU,CAAA,SAAU,CAAE,SAAU,IAAS,SAAmB,sBAAA,CAC/D,CAAA,CAAA,CAEJ"}