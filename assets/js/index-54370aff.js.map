{"version":3,"file":"index-54370aff.js","sources":["../../../node_modules/echarts/lib/echarts.js","../../../node_modules/echarts-liquidfill/src/liquidFillSeries.js","../../../node_modules/echarts-liquidfill/src/liquidFillShape.js","../../../node_modules/echarts-liquidfill/src/liquidFillView.js","../../../src/views/dataScreen/components/RealTimeAccessChart/index.tsx"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nexport * from './export/core.js';\nimport { use } from './extension.js';\nimport { init } from './core/echarts.js';\nimport { install as CanvasRenderer } from './renderer/installCanvasRenderer.js';\nimport { install as DatasetComponent } from './component/dataset/install.js';\n// Default to have canvas renderer and dataset for compitatble reason.\nuse([CanvasRenderer, DatasetComponent]);\n// TODO: Compatitable with the following code\n// import echarts from 'echarts/lib/echarts.js'\nexport default {\n  init: function () {\n    if (process.env.NODE_ENV !== 'production') {\n      /* eslint-disable-next-line */\n      console.error(\"\\\"import echarts from 'echarts/lib/echarts.js'\\\" is not supported anymore. Use \\\"import * as echarts from 'echarts/lib/echarts.js'\\\" instead;\");\n    }\n    // @ts-ignore\n    return init.apply(null, arguments);\n  }\n};\n// Import label layout by default.\n// TODO remove\nimport { installLabelLayout } from './label/installLabelLayout.js';\nuse(installLabelLayout);","import * as echarts from 'echarts/lib/echarts';\n\necharts.extendSeriesModel({\n\n    type: 'series.liquidFill',\n\n    optionUpdated: function () {\n        var option = this.option;\n        option.gridSize = Math.max(Math.floor(option.gridSize), 4);\n    },\n\n    getInitialData: function (option, ecModel) {\n        var dimensions = echarts.helper.createDimensions(option.data, {\n            coordDimensions: ['value']\n        });\n        var list = new echarts.List(dimensions, this);\n        list.initData(option.data);\n        return list;\n    },\n\n    defaultOption: {\n        color: ['#294D99', '#156ACF', '#1598ED', '#45BDFF'],\n        center: ['50%', '50%'],\n        radius: '50%',\n        amplitude: '8%',\n        waveLength: '80%',\n        phase: 'auto',\n        period: 'auto',\n        direction: 'right',\n        shape: 'circle',\n\n        waveAnimation: true,\n        animationEasing: 'linear',\n        animationEasingUpdate: 'linear',\n        animationDuration: 2000,\n        animationDurationUpdate: 1000,\n\n        outline: {\n            show: true,\n            borderDistance: 8,\n            itemStyle: {\n                color: 'none',\n                borderColor: '#294D99',\n                borderWidth: 8,\n                shadowBlur: 20,\n                shadowColor: 'rgba(0, 0, 0, 0.25)'\n            }\n        },\n\n        backgroundStyle: {\n            color: '#E3F7FF'\n        },\n\n        itemStyle: {\n            opacity: 0.95,\n            shadowBlur: 50,\n            shadowColor: 'rgba(0, 0, 0, 0.4)'\n        },\n\n        label: {\n            show: true,\n            color: '#294D99',\n            insideColor: '#fff',\n            fontSize: 50,\n            fontWeight: 'bold',\n\n            align: 'center',\n            baseline: 'middle',\n            position: 'inside'\n        },\n\n        emphasis: {\n            itemStyle: {\n                opacity: 0.8\n            }\n        }\n    }\n});\n","import * as echarts from 'echarts/lib/echarts';\n\nexport default echarts.graphic.extendShape({\n    type: 'ec-liquid-fill',\n\n    shape: {\n        waveLength: 0,\n        radius: 0,\n        radiusY: 0,\n        cx: 0,\n        cy: 0,\n        waterLevel: 0,\n        amplitude: 0,\n        phase: 0,\n        inverse: false\n    },\n\n    buildPath: function (ctx, shape) {\n        if (shape.radiusY == null) {\n            shape.radiusY = shape.radius;\n        }\n\n        /**\n         * We define a sine wave having 4 waves, and make sure at least 8 curves\n         * is drawn. Otherwise, it may cause blank area for some waves when\n         * wave length is large enough.\n         */\n        var curves = Math.max(\n            Math.ceil(2 * shape.radius / shape.waveLength * 4) * 2,\n            8\n        );\n\n        // map phase to [-Math.PI * 2, 0]\n        while (shape.phase < -Math.PI * 2) {\n            shape.phase += Math.PI * 2;\n        }\n        while (shape.phase > 0) {\n            shape.phase -= Math.PI * 2;\n        }\n        var phase = shape.phase / Math.PI / 2 * shape.waveLength;\n\n        var left = shape.cx - shape.radius + phase - shape.radius * 2;\n\n        /**\n         * top-left corner as start point\n         *\n         * draws this point\n         *  |\n         * \\|/\n         *  ~~~~~~~~\n         *  |      |\n         *  +------+\n         */\n        ctx.moveTo(left, shape.waterLevel);\n\n        /**\n         * top wave\n         *\n         * ~~~~~~~~ <- draws this sine wave\n         * |      |\n         * +------+\n         */\n        var waveRight = 0;\n        for (var c = 0; c < curves; ++c) {\n            var stage = c % 4;\n            var pos = getWaterPositions(c * shape.waveLength / 4, stage,\n                shape.waveLength, shape.amplitude);\n            ctx.bezierCurveTo(pos[0][0] + left, -pos[0][1] + shape.waterLevel,\n                pos[1][0] + left, -pos[1][1] + shape.waterLevel,\n                pos[2][0] + left, -pos[2][1] + shape.waterLevel);\n\n            if (c === curves - 1) {\n                waveRight = pos[2][0];\n            }\n        }\n\n        if (shape.inverse) {\n            /**\n             * top-right corner\n             *                  2. draws this line\n             *                          |\n             *                       +------+\n             * 3. draws this line -> |      | <- 1. draws this line\n             *                       ~~~~~~~~\n             */\n            ctx.lineTo(waveRight + left, shape.cy - shape.radiusY);\n            ctx.lineTo(left, shape.cy - shape.radiusY);\n            ctx.lineTo(left, shape.waterLevel);\n        }\n        else {\n            /**\n             * top-right corner\n             *\n             *                       ~~~~~~~~\n             * 3. draws this line -> |      | <- 1. draws this line\n             *                       +------+\n             *                          ^\n             *                          |\n             *                  2. draws this line\n             */\n            ctx.lineTo(waveRight + left, shape.cy + shape.radiusY);\n            ctx.lineTo(left, shape.cy + shape.radiusY);\n            ctx.lineTo(left, shape.waterLevel);\n        }\n\n        ctx.closePath();\n    }\n});\n\n\n\n/**\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param {number} x          x position of the left-most point (a)\n * @param {number} stage      0-3, stating which part of the wave it is\n * @param {number} waveLength wave length of the sine wave\n * @param {number} amplitude  wave amplitude\n */\nfunction getWaterPositions(x, stage, waveLength, amplitude) {\n    if (stage === 0) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2, amplitude / 2],\n            [x + 1 / 2 * waveLength / Math.PI,     amplitude],\n            [x + waveLength / 4,                   amplitude]\n        ];\n    }\n    else if (stage === 1) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2),\n            amplitude],\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1),\n            amplitude / 2],\n            [x + waveLength / 4,                   0]\n        ]\n    }\n    else if (stage === 2) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2, -amplitude / 2],\n            [x + 1 / 2 * waveLength / Math.PI,     -amplitude],\n            [x + waveLength / 4,                   -amplitude]\n        ]\n    }\n    else {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2),\n            -amplitude],\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1),\n            -amplitude / 2],\n            [x + waveLength / 4,                   0]\n        ]\n    }\n}\n","import * as echarts from 'echarts/lib/echarts';\nimport * as numberUtil from 'echarts/lib/util/number';\nimport LiquidShape from './liquidFillShape';\n\nvar parsePercent = numberUtil.parsePercent;\n\nfunction isPathSymbol(symbol) {\n    return symbol && symbol.indexOf('path://') === 0\n}\n\necharts.extendChartView({\n\n    type: 'liquidFill',\n\n    render: function (seriesModel, ecModel, api) {\n        var self = this;\n        var group = this.group;\n        group.removeAll();\n\n        var data = seriesModel.getData();\n\n        var itemModel = data.getItemModel(0);\n\n        var center = itemModel.get('center');\n        var radius = itemModel.get('radius');\n\n        var width = api.getWidth();\n        var height = api.getHeight();\n        var size = Math.min(width, height);\n        // itemStyle\n        var outlineDistance = 0;\n        var outlineBorderWidth = 0;\n        var showOutline = seriesModel.get('outline.show');\n\n        if (showOutline) {\n            outlineDistance = seriesModel.get('outline.borderDistance');\n            outlineBorderWidth = parsePercent(\n                seriesModel.get('outline.itemStyle.borderWidth'), size\n            );\n        }\n\n        var cx = parsePercent(center[0], width);\n        var cy = parsePercent(center[1], height);\n\n        var outterRadius;\n        var innerRadius;\n        var paddingRadius;\n\n        var isFillContainer = false;\n\n        var symbol = seriesModel.get('shape');\n        if (symbol === 'container') {\n            // a shape that fully fills the container\n            isFillContainer = true;\n\n            outterRadius = [\n                width / 2,\n                height / 2\n            ];\n            innerRadius = [\n                outterRadius[0] - outlineBorderWidth / 2,\n                outterRadius[1] - outlineBorderWidth / 2\n            ];\n            paddingRadius = [\n                parsePercent(outlineDistance, width),\n                parsePercent(outlineDistance, height)\n            ];\n\n            radius = [\n                Math.max(innerRadius[0] - paddingRadius[0], 0),\n                Math.max(innerRadius[1] - paddingRadius[1], 0)\n            ];\n        }\n        else {\n            outterRadius = parsePercent(radius, size) / 2;\n            innerRadius = outterRadius - outlineBorderWidth / 2;\n            paddingRadius = parsePercent(outlineDistance, size);\n\n            radius = Math.max(innerRadius - paddingRadius, 0);\n        }\n\n        if (showOutline) {\n            var outline = getOutline();\n            outline.style.lineWidth = outlineBorderWidth;\n            group.add(getOutline());\n        }\n\n        var left = isFillContainer ? 0 : cx - radius;\n        var top = isFillContainer ? 0 : cy - radius;\n\n        var wavePath = null;\n\n        group.add(getBackground());\n\n        // each data item for a wave\n        var oldData = this._data;\n        var waves = [];\n        data.diff(oldData)\n            .add(function (idx) {\n                var wave = getWave(idx, false);\n\n                var waterLevel = wave.shape.waterLevel;\n                wave.shape.waterLevel = isFillContainer ? height / 2 : radius;\n                echarts.graphic.initProps(wave, {\n                    shape: {\n                        waterLevel: waterLevel\n                    }\n                }, seriesModel);\n\n                wave.z2 = 2;\n                setWaveAnimation(idx, wave, null);\n\n                group.add(wave);\n                data.setItemGraphicEl(idx, wave);\n                waves.push(wave);\n            })\n            .update(function (newIdx, oldIdx) {\n                var waveElement = oldData.getItemGraphicEl(oldIdx);\n\n                // new wave is used to calculate position, but not added\n                var newWave = getWave(newIdx, false, waveElement);\n\n                // changes with animation\n                var shape = {};\n                var shapeAttrs = ['amplitude', 'cx', 'cy', 'phase', 'radius', 'radiusY', 'waterLevel', 'waveLength'];\n                for (var i = 0; i < shapeAttrs.length; ++i) {\n                    var attr = shapeAttrs[i];\n                    if (newWave.shape.hasOwnProperty(attr)) {\n                        shape[attr] = newWave.shape[attr];\n                    }\n                }\n\n                var style = {};\n                var styleAttrs = ['fill', 'opacity', 'shadowBlur', 'shadowColor'];\n                for (var i = 0; i < styleAttrs.length; ++i) {\n                    var attr = styleAttrs[i];\n                    if (newWave.style.hasOwnProperty(attr)) {\n                        style[attr] = newWave.style[attr];\n                    }\n                }\n\n                if (isFillContainer) {\n                    shape.radiusY = height / 2;\n                }\n\n                // changes with animation\n                echarts.graphic.updateProps(waveElement, {\n                    shape: shape,\n                    x: newWave.x,\n                    y: newWave.y\n                }, seriesModel);\n\n                if (seriesModel.isUniversalTransitionEnabled && seriesModel.isUniversalTransitionEnabled()) {\n                    echarts.graphic.updateProps(waveElement, {\n                        style: style\n                    }, seriesModel);\n                }\n                else {\n                    waveElement.useStyle(style);\n                }\n\n                // instant changes\n                var oldWaveClipPath = waveElement.getClipPath();\n                var newWaveClipPath = newWave.getClipPath();\n\n                waveElement.setClipPath(newWave.getClipPath());\n                waveElement.shape.inverse = newWave.inverse;\n\n                if (oldWaveClipPath && newWaveClipPath\n                    && self._shape === symbol\n                    // TODO use zrender morphing to apply complex symbol animation.\n                    && !isPathSymbol(symbol)\n                ) {\n                    // Can be animated.\n                    echarts.graphic.updateProps(newWaveClipPath, {\n                        shape: oldWaveClipPath.shape\n                    }, seriesModel, { isFrom: true });\n                }\n\n                setWaveAnimation(newIdx, waveElement, waveElement);\n                group.add(waveElement);\n                data.setItemGraphicEl(newIdx, waveElement);\n                waves.push(waveElement);\n            })\n            .remove(function (idx) {\n                var wave = oldData.getItemGraphicEl(idx);\n                group.remove(wave);\n            })\n            .execute();\n\n        if (itemModel.get('label.show')) {\n            group.add(getText(waves));\n        }\n\n        this._shape = symbol;\n        this._data = data;\n\n        /**\n         * Get path for outline, background and clipping\n         *\n         * @param {number} r outter radius of shape\n         * @param {boolean|undefined} isForClipping if the shape is used\n         *                                          for clipping\n         */\n        function getPath(r, isForClipping) {\n            if (symbol) {\n                // customed symbol path\n                if (isPathSymbol(symbol)) {\n                    var path = echarts.graphic.makePath(symbol.slice(7), {});\n                    var bouding = path.getBoundingRect();\n                    var w = bouding.width;\n                    var h = bouding.height;\n                    if (w > h) {\n                        h = r * 2 / w * h;\n                        w = r * 2;\n                    }\n                    else {\n                        w = r * 2 / h * w;\n                        h = r * 2;\n                    }\n\n                    var left = isForClipping ? 0 : cx - w / 2;\n                    var top = isForClipping ? 0 : cy - h / 2;\n                    path = echarts.graphic.makePath(\n                        symbol.slice(7),\n                        {},\n                        new echarts.graphic.BoundingRect(left, top, w, h)\n                    );\n                    if (isForClipping) {\n                        path.x = -w / 2;\n                        path.y = -h / 2;\n                    }\n                    return path;\n                }\n                else if (isFillContainer) {\n                    // fully fill the container\n                    var x = isForClipping ? -r[0] : cx - r[0];\n                    var y = isForClipping ? -r[1] : cy - r[1];\n                    return echarts.helper.createSymbol(\n                        'rect', x, y, r[0] * 2, r[1] * 2\n                    );\n                }\n                else {\n                    var x = isForClipping ? -r : cx - r;\n                    var y = isForClipping ? -r : cy - r;\n                    if (symbol === 'pin') {\n                        y += r;\n                    }\n                    else if (symbol === 'arrow') {\n                        y -= r;\n                    }\n                    return echarts.helper.createSymbol(symbol, x, y, r * 2, r * 2);\n                }\n            }\n\n            return new echarts.graphic.Circle({\n                shape: {\n                    cx: isForClipping ? 0 : cx,\n                    cy: isForClipping ? 0 : cy,\n                    r: r\n                }\n            });\n        }\n        /**\n         * Create outline\n         */\n        function getOutline() {\n            var outlinePath = getPath(outterRadius);\n            outlinePath.style.fill = null;\n\n            outlinePath.setStyle(seriesModel.getModel('outline.itemStyle')\n                .getItemStyle());\n\n            return outlinePath;\n        }\n\n        /**\n         * Create background\n         */\n        function getBackground() {\n            // Seperate stroke and fill, so we can use stroke to cover the alias of clipping.\n            var strokePath = getPath(radius);\n            strokePath.setStyle(seriesModel.getModel('backgroundStyle')\n                .getItemStyle());\n            strokePath.style.fill = null;\n\n            // Stroke is front of wave\n            strokePath.z2 = 5;\n\n            var fillPath = getPath(radius);\n            fillPath.setStyle(seriesModel.getModel('backgroundStyle')\n                .getItemStyle());\n            fillPath.style.stroke = null;\n\n            var group = new echarts.graphic.Group();\n            group.add(strokePath);\n            group.add(fillPath);\n\n            return group;\n        }\n\n        /**\n         * wave shape\n         */\n        function getWave(idx, isInverse, oldWave) {\n            var radiusX = isFillContainer ? radius[0] : radius;\n            var radiusY = isFillContainer ? height / 2 : radius;\n\n            var itemModel = data.getItemModel(idx);\n            var itemStyleModel = itemModel.getModel('itemStyle');\n            var phase = itemModel.get('phase');\n            var amplitude = parsePercent(itemModel.get('amplitude'),\n                radiusY * 2);\n            var waveLength = parsePercent(itemModel.get('waveLength'),\n                radiusX * 2);\n\n            var value = data.get('value', idx);\n            var waterLevel = radiusY - value * radiusY * 2;\n            phase = oldWave ? oldWave.shape.phase\n                : (phase === 'auto' ? idx * Math.PI / 4 : phase);\n            var normalStyle = itemStyleModel.getItemStyle();\n            if (!normalStyle.fill) {\n                var seriesColor = seriesModel.get('color');\n                var id = idx % seriesColor.length;\n                normalStyle.fill = seriesColor[id];\n            }\n\n            var x = radiusX * 2;\n            var wave = new LiquidShape({\n                shape: {\n                    waveLength: waveLength,\n                    radius: radiusX,\n                    radiusY: radiusY,\n                    cx: x,\n                    cy: 0,\n                    waterLevel: waterLevel,\n                    amplitude: amplitude,\n                    phase: phase,\n                    inverse: isInverse\n                },\n                style: normalStyle,\n                x: cx,\n                y: cy,\n            });\n            wave.shape._waterLevel = waterLevel;\n\n            var hoverStyle = itemModel.getModel('emphasis.itemStyle')\n                .getItemStyle();\n            hoverStyle.lineWidth = 0;\n\n            wave.ensureState('emphasis').style = hoverStyle;\n            echarts.helper.enableHoverEmphasis(wave);\n\n            // clip out the part outside the circle\n            var clip = getPath(radius, true);\n            // set fill for clipPath, otherwise it will not trigger hover event\n            clip.setStyle({\n                fill: 'white'\n            });\n            wave.setClipPath(clip);\n\n            return wave;\n        }\n\n        function setWaveAnimation(idx, wave, oldWave) {\n            var itemModel = data.getItemModel(idx);\n\n            var maxSpeed = itemModel.get('period');\n            var direction = itemModel.get('direction');\n\n            var value = data.get('value', idx);\n\n            var phase = itemModel.get('phase');\n            phase = oldWave ? oldWave.shape.phase\n                : (phase === 'auto' ? idx * Math.PI / 4 : phase);\n\n            var defaultSpeed = function (maxSpeed) {\n                var cnt = data.count();\n                return cnt === 0 ? maxSpeed : maxSpeed *\n                    (0.2 + (cnt - idx) / cnt * 0.8);\n            };\n            var speed = 0;\n            if (maxSpeed === 'auto') {\n                speed = defaultSpeed(5000);\n            }\n            else {\n                speed = typeof maxSpeed === 'function'\n                    ? maxSpeed(value, idx) : maxSpeed;\n            }\n\n            // phase for moving left/right\n            var phaseOffset = 0;\n            if (direction === 'right' || direction == null) {\n                phaseOffset = Math.PI;\n            }\n            else if (direction === 'left') {\n                phaseOffset = -Math.PI;\n            }\n            else if (direction === 'none') {\n                phaseOffset = 0;\n            }\n            else {\n                console.error('Illegal direction value for liquid fill.');\n            }\n\n            // wave animation of moving left/right\n            if (direction !== 'none' && itemModel.get('waveAnimation')) {\n                wave\n                    .animate('shape', true)\n                    .when(0, {\n                        phase: phase\n                    })\n                    .when(speed / 2, {\n                        phase: phaseOffset + phase\n                    })\n                    .when(speed, {\n                        phase: phaseOffset * 2 + phase\n                    })\n                    .during(function () {\n                        if (wavePath) {\n                            wavePath.dirty(true);\n                        }\n                    })\n                    .start();\n            }\n        }\n\n        /**\n         * text on wave\n         */\n        function getText(waves) {\n            var labelModel = itemModel.getModel('label');\n\n            function formatLabel() {\n                var formatted = seriesModel.getFormattedLabel(0, 'normal');\n                var defaultVal = (data.get('value', 0) * 100);\n                var defaultLabel = data.getName(0) || seriesModel.name;\n                if (!isNaN(defaultVal)) {\n                    defaultLabel = defaultVal.toFixed(0) + '%';\n                }\n                return formatted == null ? defaultLabel : formatted;\n            }\n\n            var textRectOption = {\n                z2: 10,\n                shape: {\n                    x: left,\n                    y: top,\n                    width: (isFillContainer ? radius[0] : radius) * 2,\n                    height: (isFillContainer ? radius[1] : radius) * 2\n                },\n                style: {\n                    fill: 'transparent'\n                },\n                textConfig: {\n                    position: labelModel.get('position') || 'inside'\n                },\n                silent: true\n            };\n            var textOption = {\n                style: {\n                    text: formatLabel(),\n                    textAlign: labelModel.get('align'),\n                    textVerticalAlign: labelModel.get('baseline')\n                }\n            };\n            Object.assign(textOption.style, echarts.helper.createTextStyle(labelModel));\n\n            var outsideTextRect = new echarts.graphic.Rect(textRectOption);\n            var insideTextRect = new echarts.graphic.Rect(textRectOption);\n            insideTextRect.disableLabelAnimation = true;\n            outsideTextRect.disableLabelAnimation = true;\n\n            var outsideText = new echarts.graphic.Text(textOption);\n            var insideText = new echarts.graphic.Text(textOption);\n            outsideTextRect.setTextContent(outsideText);\n\n            insideTextRect.setTextContent(insideText);\n            var insColor = labelModel.get('insideColor');\n            insideText.style.fill = insColor;\n\n            var group = new echarts.graphic.Group();\n            group.add(outsideTextRect);\n            group.add(insideTextRect);\n\n            // clip out waves for insideText\n            var boundingCircle = getPath(radius, true);\n\n            wavePath = new echarts.graphic.CompoundPath({\n                shape: {\n                    paths: waves\n                },\n                x: cx,\n                y: cy\n            });\n\n            wavePath.setClipPath(boundingCircle);\n            insideTextRect.setClipPath(wavePath);\n\n            return group;\n        }\n    },\n\n    dispose: function () {\n        // dispose nothing here\n    }\n});\n","import React, { useState } from 'react'\r\nimport ECharts from '@/components/Echarts'\r\nimport { ECOption } from '@/components/Echarts/config'\r\nimport 'echarts-liquidfill'\r\nimport './index.less'\r\n\r\nconst RealTimeAccessChart: React.FC = () => {\r\n\tconst option = {\r\n\t\ttitle: [\r\n\t\t\t{\r\n\t\t\t\ttext: (0.5 * 100).toFixed(0) + '%',\r\n\t\t\t\tleft: '49%',\r\n\t\t\t\ttop: '35%',\r\n\t\t\t\ttextAlign: 'center',\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tfontSize: '16',\r\n\t\t\t\t\tfontWeight: 'normal',\r\n\t\t\t\t\tcolor: '#ffffff',\r\n\t\t\t\t\talign: 'center',\r\n\t\t\t\t\ttextBorderColor: 'rgba(0, 0, 0, 0)',\r\n\t\t\t\t\ttextShadowColor: '#000',\r\n\t\t\t\t\ttextShadowBlur: 0,\r\n\t\t\t\t\ttextShadowOffsetX: 0,\r\n\t\t\t\t\ttextShadowOffsetY: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttext: '预约量',\r\n\t\t\t\tleft: '49%',\r\n\t\t\t\ttop: '25%',\r\n\t\t\t\ttextAlign: 'center',\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tfontSize: '15',\r\n\t\t\t\t\tfontWeight: 'normal',\r\n\t\t\t\t\tcolor: '#ffffff',\r\n\t\t\t\t\talign: 'center',\r\n\t\t\t\t\ttextBorderColor: 'rgba(0, 0, 0, 0)',\r\n\t\t\t\t\ttextShadowColor: '#000',\r\n\t\t\t\t\ttextShadowBlur: 0,\r\n\t\t\t\t\ttextShadowOffsetX: 0,\r\n\t\t\t\t\ttextShadowOffsetY: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t\tgrid: {\r\n\t\t\ttop: '0',\r\n\t\t\tleft: '0px',\r\n\t\t\tright: '0px',\r\n\t\t\tbottom: '0',\r\n\t\t\tcontainLabel: true,\r\n\t\t},\r\n\t\tpolar: {\r\n\t\t\tradius: ['75%', '85%'],\r\n\t\t\tcenter: ['50%', '50%'],\r\n\t\t},\r\n\t\tangleAxis: {\r\n\t\t\tmax: 120,\r\n\t\t\tclockwise: false,\r\n\t\t\taxisLine: {\r\n\t\t\t\tshow: false,\r\n\t\t\t},\r\n\t\t\taxisTick: {\r\n\t\t\t\tshow: false,\r\n\t\t\t},\r\n\t\t\taxisLabel: {\r\n\t\t\t\tshow: false,\r\n\t\t\t},\r\n\t\t\tsplitLine: {\r\n\t\t\t\tshow: false,\r\n\t\t\t},\r\n\t\t\tstartAngle: 188,\r\n\t\t},\r\n\t\tradiusAxis: {\r\n\t\t\ttype: 'category',\r\n\t\t\tshow: true,\r\n\t\t\taxisLabel: {\r\n\t\t\t\tshow: false,\r\n\t\t\t},\r\n\t\t\taxisLine: {\r\n\t\t\t\tshow: false,\r\n\t\t\t},\r\n\t\t\taxisTick: {\r\n\t\t\t\tshow: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\ttype: 'liquidFill',\r\n\t\t\t\tradius: '70%',\r\n\t\t\t\tz: 2,\r\n\t\t\t\tcenter: ['50%', '50%'],\r\n\t\t\t\tdata: [0.4, 0.4, 0.4],\r\n\t\t\t\titemStyle: {\r\n\t\t\t\t\tcolor: {\r\n\t\t\t\t\t\ttype: 'linear',\r\n\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t\tx2: 0,\r\n\t\t\t\t\t\ty2: 1,\r\n\t\t\t\t\t\tcolorStops: [\r\n\t\t\t\t\t\t\t{ offset: 0, color: '#35FAB6' },\r\n\t\t\t\t\t\t\t{ offset: 1, color: 'rgba(40, 209, 247,0.3)' },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tglobal: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\toutline: {\r\n\t\t\t\t\tborderDistance: 0,\r\n\t\t\t\t\titemStyle: {\r\n\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\tborderColor: '#31d8d5',\r\n\t\t\t\t\t\tshadowBlur: 20,\r\n\t\t\t\t\t\tshadowColor: '#50c1a7',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: false,\r\n\t\t\t\t},\r\n\t\t\t\tbackgroundStyle: {\r\n\t\t\t\t\tborderWidth: 1,\r\n\t\t\t\t\tcolor: {\r\n\t\t\t\t\t\ttype: 'radial',\r\n\t\t\t\t\t\tx: 0.5,\r\n\t\t\t\t\t\ty: 0.5,\r\n\t\t\t\t\t\tr: 0.5,\r\n\t\t\t\t\t\tcolorStops: [\r\n\t\t\t\t\t\t\t{ offset: 0, color: '#0D2648' },\r\n\t\t\t\t\t\t\t{ offset: 0.8, color: '#0D2648' },\r\n\t\t\t\t\t\t\t{ offset: 1, color: '#228E7D' },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tglobal: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'pie',\r\n\t\t\t\tradius: ['80%', '80%'],\r\n\t\t\t\tcenter: ['50%', '50%'],\r\n\t\t\t\tz: 1,\r\n\t\t\t\tlabel: { show: false },\r\n\t\t\t\tsilent: true,\r\n\t\t\t\titemStyle: {\r\n\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\tborderType: [8, 10],\r\n\t\t\t\t\tborderDashOffset: 15,\r\n\t\t\t\t\tborderColor: '#31d8d5',\r\n\t\t\t\t\tcolor: '#11144e',\r\n\t\t\t\t\tborderCap: 'round',\r\n\t\t\t\t},\r\n\t\t\t\tdata: [100],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'bar',\r\n\t\t\t\tdata: [55],\r\n\t\t\t\tz: 10,\r\n\t\t\t\tcoordinateSystem: 'polar',\r\n\t\t\t\troundCap: true,\r\n\t\t\t\tcolor: '#31d8d5',\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n\r\n\tconst [actualTotal] = useState('216908')\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"actual-total\">\r\n\t\t\t\t<div className=\"expect-total\">\r\n\t\t\t\t\t可预约总量<i>999999</i>人\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"actual-total\">\r\n\t\t\t\t\t{actualTotal.split('').map((item, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className=\"actual-item\" key={index}>\r\n\t\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t<div className=\"actual-item\">人</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"actual-echarts\">\r\n\t\t\t\t<ECharts option={option as ECOption} isResize={false} />\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default RealTimeAccessChart\r\n"],"names":["use","CanvasRenderer","DatasetComponent","installLabelLayout","echarts.extendSeriesModel","option","ecModel","dimensions","echarts.helper.createDimensions","list","echarts.List","LiquidShape","echarts.graphic.extendShape","ctx","shape","curves","phase","left","waveRight","c","stage","pos","getWaterPositions","x","waveLength","amplitude","parsePercent","numberUtil.parsePercent","isPathSymbol","symbol","echarts.extendChartView","seriesModel","api","self","group","data","itemModel","center","radius","width","height","size","outlineDistance","outlineBorderWidth","showOutline","cx","cy","outterRadius","innerRadius","paddingRadius","isFillContainer","outline","getOutline","top","wavePath","getBackground","oldData","waves","idx","wave","getWave","waterLevel","echarts.graphic.initProps","setWaveAnimation","newIdx","oldIdx","waveElement","newWave","shapeAttrs","i","attr","style","styleAttrs","echarts.graphic.updateProps","oldWaveClipPath","newWaveClipPath","getText","getPath","r","isForClipping","path","echarts.graphic.makePath","bouding","w","h","echarts.graphic.BoundingRect","y","echarts.helper.createSymbol","echarts.graphic.Circle","outlinePath","strokePath","fillPath","echarts.graphic.Group","isInverse","oldWave","radiusX","radiusY","itemStyleModel","value","normalStyle","seriesColor","id","hoverStyle","echarts.helper.enableHoverEmphasis","clip","maxSpeed","direction","defaultSpeed","cnt","speed","phaseOffset","labelModel","formatLabel","formatted","defaultVal","defaultLabel","textRectOption","textOption","echarts.helper.createTextStyle","outsideTextRect","echarts.graphic.Rect","insideTextRect","outsideText","echarts.graphic.Text","insideText","insColor","boundingCircle","echarts.graphic.CompoundPath","RealTimeAccessChart","actualTotal","useState","jsxs","React","jsx","item","index","ECharts"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}