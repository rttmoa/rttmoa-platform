{"version":3,"file":"index-925c4e70.js","sources":["../../../src/api/modules/api_useProTable_eg/api.ts","../../../src/config/proTable.ts","../../../src/views/module/shelf/index.tsx"],"sourcesContent":["// @ts-ignore\n/* eslint-disable */\n\nimport http from '@/api';\n\n/** 获取当前的用户 GET /api/currentUser */\nexport async function currentUser(options?: { [key: string]: any }) {\n\treturn http.get<{\n\t\tdata: API.CurrentUser;\n\t}>('/api/currentUser', {\n\t\tmethod: 'GET',\n\t\t...(options || {}),\n\t});\n}\n\n/** 退出登录接口 POST /api/login/outLogin */\nexport async function outLogin(options?: { [key: string]: any }) {\n\treturn http.post<Record<string, any>>('/api/login/outLogin', {\n\t\tmethod: 'POST',\n\t\t...(options || {}),\n\t});\n}\n\n/** 登录接口 POST /api/login/account */\nexport async function login(body: API.LoginParams, options?: { [key: string]: any }) {\n\treturn http.post<API.LoginResult>('/api/login/account', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tdata: body,\n\t\t...(options || {}),\n\t});\n}\n\n/** 此处后端没有提供注释 GET /api/notices */\nexport async function getNotices(options?: { [key: string]: any }) {\n\treturn http.get<API.NoticeIconList>('/api/notices', {\n\t\tmethod: 'GET',\n\t\t...(options || {}),\n\t});\n}\n\n/** 获取规则列表 GET /api/rule */\nexport async function rule(\n\tparams: {\n\t\t// query\n\t\t/** 当前的页码 */\n\t\tcurrent?: number;\n\t\t/** 页面的容量 */\n\t\tpageSize?: number;\n\t},\n\toptions?: { [key: string]: any }\n) {\n\treturn http.get<API.RuleList>('/api/rule', {\n\t\tmethod: 'GET',\n\t\tparams: {\n\t\t\t...params,\n\t\t},\n\t\t...(options || {}),\n\t});\n}\n\n/** 更新规则 PUT /api/rule */\n// await updateRule({ name: fields.name, desc: fields.desc, key: fields.key,\t});\nexport async function updateRule(options?: { [key: string]: any }) {\n\treturn http.post<API.RuleListItem>('/api/rule', {\n\t\tmethod: 'POST',\n\t\tdata: {\n\t\t\tmethod: 'update',\n\t\t\t...(options || {}),\n\t\t},\n\t});\n}\n\n/** 新建规则 POST /api/rule */\n// await addRule({ ...formValues });\nexport async function addRule(options?: { [key: string]: any }) {\n\treturn http.post<API.RuleListItem>('/api/rule', {\n\t\tmethod: 'POST',\n\t\tdata: {\n\t\t\tmethod: 'post',\n\t\t\t...(options || {}),\n\t\t},\n\t});\n}\n\n/** 删除规则 DELETE /api/rule */\nexport async function removeRule(options?: { [key: string]: any }) {\n\treturn http.post<Record<string, any>>('/api/rule', {\n\t\tmethod: 'POST',\n\t\tdata: {\n\t\t\tmethod: 'delete',\n\t\t\t...(options || {}),\n\t\t},\n\t});\n}\n","import { TablePaginationConfig } from 'antd';\n\nexport const pagination: TablePaginationConfig = {\n\tsize: 'default', // default | samll\n\tshowSizeChanger: true,\n\tdefaultPageSize: 10,\n};\n","import { useRef, useState } from 'react'\nimport { Button, Drawer } from 'antd'\nimport { formatDataForProTable } from '@/utils'\nimport { pagination as paginationConfig } from '@/config/proTable'\nimport { UserList } from '@/api/interface'\nimport { FooterToolbar, LightFilter, ModalForm, ProDescriptions, ProFormDatePicker, ProFormText, ProFormTextArea, ProTable } from '@ant-design/pro-components'\nimport type { ActionType, FormInstance, ProColumns, ProDescriptionsItemProps } from '@ant-design/pro-components'\nimport { message } from '@/hooks/useMessage'\nimport { addRule, removeRule, updateRule } from '@/api/modules/api_useProTable_eg/api'\nimport UpdateForm from './component/_UpdateForm'\nimport './index.less'\nimport TableColumnsConfig, { TableColumnsParams } from './component/Table_Column_Config'\nimport ToolBarRender from './component/ToolBarRender'\nimport { GetAllShelf } from '@/api/modules/upack/common'\n\nexport type FormValueType = {\n\ttarget?: string\n\ttemplate?: string\n\ttype?: string\n\ttime?: string\n\tfrequency?: string\n} & Partial<UserList>\n\n// TODO: refer： https://github.com/ant-design/ant-design-pro\n// ProTable：https://procomponents.ant.design/components/table\nconst useProTable = () => {\n\tconst actionRef = useRef<ActionType>()\n\tconst formRef = useRef<FormInstance>()\n\tconst [createModalOpen, handleModalOpen] = useState<boolean>(false)\n\tconst [selectedRowsState, setSelectedRows] = useState<UserList[]>([]) // 表格：选择行数据\n\tconst [currentRow, setCurrentRow] = useState<UserList>()\n\tconst [showDetail, setShowDetail] = useState<boolean>(false)\n\tconst [updateModalOpen, handleUpdateModalOpen] = useState<boolean>(false)\n\tconst [pagination, setPagination] = useState<any>({}) // 分页数据\n\n\t// TODO:\n\t// 设置 页码值的 useState\n\t// 设置 搜索条件的 useState\n\t// useEffect 监听值的变化去请求服务端\n\n\tconst quickSearch = () => {}\n\n\t/**\n\t * @en-US Add node\n\t * @zh-CN 添加节点\n\t * @param fields\n\t */\n\tconst handleAdd = async (fields: UserList) => {\n\t\tconst hide = message.loading('正在添加')\n\t\ttry {\n\t\t\tawait addRule({ ...fields })\n\t\t\thide()\n\t\t\tmessage.success('Added successfully')\n\t\t\treturn true\n\t\t} catch (error) {\n\t\t\thide()\n\t\t\tmessage.error('Adding failed, please try again!')\n\t\t\treturn false\n\t\t}\n\t}\n\n\t/**\n\t * @en-US Update node\n\t * @zh-CN 更新节点\n\t *\n\t * @param fields\n\t */\n\tconst handleUpdate = async (fields: FormValueType) => {\n\t\tconst hide = message.loading('Configuring')\n\t\ttry {\n\t\t\tawait updateRule({\n\t\t\t\t// name: fields.name,\n\t\t\t\t// desc: fields.desc,\n\t\t\t\t// key: fields.key,\n\t\t\t})\n\t\t\thide()\n\n\t\t\tmessage.success('Configuration is successful')\n\t\t\treturn true\n\t\t} catch (error) {\n\t\t\thide()\n\t\t\tmessage.error('Configuration failed, please try again!')\n\t\t\treturn false\n\t\t}\n\t}\n\n\t/**\n\t *  Delete node\n\t * @zh-CN 删除节点\n\t *\n\t * @param selectedRows\n\t */\n\tconst handleRemove = async (selectedRows: UserList[]) => {\n\t\tconst hide = message.loading('正在删除')\n\t\tif (!selectedRows) return true\n\t\ttry {\n\t\t\tawait removeRule({\n\t\t\t\tkey: selectedRows.map(row => row.id),\n\t\t\t})\n\t\t\thide()\n\t\t\tmessage.success('Deleted successfully and will refresh soon')\n\t\t\treturn true\n\t\t} catch (error) {\n\t\t\thide()\n\t\t\tmessage.error('Delete failed, please try again')\n\t\t\treturn false\n\t\t}\n\t}\n\n\t// * 表头：新建按钮\n\tlet ToolBarParams = {\n\t\thandleModalOpen, // 表头新建按钮\n\t\tquickSearch, // 表头快捷搜索\n\t}\n\t// * 表格列配置\n\tlet TableColumnParams: TableColumnsParams = {\n\t\tsetCurrentRow,\n\t\tsetShowDetail,\n\t}\n\n\t// & 表格封装成通用\n\treturn (\n\t\t<>\n\t\t\t<ProTable<UserList>\n\t\t\t\trowKey=\"_id\"\n\t\t\t\tscroll={{ y: '100vh' }}\n\t\t\t\tbordered={true}\n\t\t\t\tcardBordered\n\t\t\t\tclassName=\"ant-pro-table-scroll\"\n\t\t\t\tcolumns={TableColumnsConfig(TableColumnParams)}\n\t\t\t\t// dataSource={[]}\n\t\t\t\tactionRef={actionRef} // Table action 的引用，便于自定义触发      actionRef.current.reload()  |  actionRef.current.reset()   |   actionRef.current.clearSelected()\n\t\t\t\tformRef={formRef} // 可以获取到查询表单的 form 实例\n\t\t\t\t// polling={2000} // 是否轮询\n\t\t\t\t// params={{\n\t\t\t\t// \tcurrent: pagination.page,\n\t\t\t\t// \tpageSize: pagination.pageSize,\n\t\t\t\t// }} // 用于 request 查询的额外参数，一旦变化会触发重新加载、比如表单的变化\n\t\t\t\tonSubmit={params => {\n\t\t\t\t\tconsole.log('onSubmit', params)\n\t\t\t\t}} // 提交表单时触发\n\t\t\t\tonReset={() => {}} // 重置表单时触发\n\t\t\t\tpagination={{\n\t\t\t\t\t...paginationConfig,\n\t\t\t\t\tpageSizeOptions: [10, 20, 50, 100, 500, 1000, 5000],\n\t\t\t\t\tonChange: (page, pageSize) => {\n\t\t\t\t\t\tconsole.log('page, pageSize', page, pageSize)\n\t\t\t\t\t\tsetPagination({ page, pageSize })\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t\trequest={async (params, sort, filter) => {\n\t\t\t\t\tconsole.log('request - params', params)\n\t\t\t\t\t// console.log('request - sort', sort)\n\t\t\t\t\t// console.log('request - filter', filter)\n\t\t\t\t\t// const { data } = await getUserList(params)\n\t\t\t\t\t// console.log('api === request == data', data)\n\t\t\t\t\t// return formatDataForProTable<UserList>(data)\n\t\t\t\t\tconst { data }: any = await GetAllShelf(params)\n\t\t\t\t\tconsole.log('请求数据：', data)\n\t\t\t\t\treturn formatDataForProTable<UserList>(data)\n\t\t\t\t}}\n\t\t\t\trowSelection={{\n\t\t\t\t\tonChange: (_, selectedRows) => {\n\t\t\t\t\t\tsetSelectedRows(selectedRows)\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t\tghost={false}\n\t\t\t\tdateFormatter=\"string\"\n\t\t\t\theaderTitle=\"仓库货架表\"\n\t\t\t\tsearch={{ labelWidth: 'auto', filterType: 'query', span: 6 }} // 搜索表单配置 Form\n\t\t\t\ttoolBarRender={() => ToolBarRender(ToolBarParams)} // 渲染工具栏\n\t\t\t\tdefaultSize=\"small\" // 尺寸：紧凑、中等、宽松\n\t\t\t\tonSizeChange={() => {}} // Table 尺寸发生改变、将尺寸存储到数据库中\n\t\t\t\tonRequestError={(error: any) => {}} // 数据加载失败时触发\n\t\t\t\teditable={{ type: 'multiple' }}\n\t\t\t\tcolumnsState={{\n\t\t\t\t\t// 持久化列的 key，用于判断是否是同一个 table\n\t\t\t\t\tpersistenceKey: 'use-pro-table-key',\n\t\t\t\t\t// 持久化列的类型: localStorage | sessionStorage\n\t\t\t\t\tpersistenceType: 'localStorage',\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t{selectedRowsState?.length > 0 && (\n\t\t\t\t<FooterToolbar\n\t\t\t\t\textra={\n\t\t\t\t\t\t<div className=\"font-mono\">\n\t\t\t\t\t\t\t已选择 <a style={{ fontWeight: 600 }}>{selectedRowsState.length}</a> 项 &nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t总数为 <span className=\"text-red-600\">{selectedRowsState.reduce((pre, item) => pre + item.age!, 0)}</span> 岁\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\tawait handleRemove(selectedRowsState)\n\t\t\t\t\t\t\tsetSelectedRows([])\n\t\t\t\t\t\t\tactionRef.current?.reloadAndRest?.()\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t批量删除\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type=\"primary\">批量批准</Button>\n\t\t\t\t</FooterToolbar>\n\t\t\t)}\n\n\t\t\t<ModalForm\n\t\t\t\ttitle=\"新建\"\n\t\t\t\twidth=\"400px\"\n\t\t\t\topen={createModalOpen}\n\t\t\t\tonOpenChange={handleModalOpen}\n\t\t\t\tonFinish={async value => {\n\t\t\t\t\tconst success = await handleAdd(value as UserList)\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\thandleModalOpen(false)\n\t\t\t\t\t\tif (actionRef.current) {\n\t\t\t\t\t\t\tactionRef.current.reload()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t<ProFormText\n\t\t\t\t\trules={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tmessage: 'Rule name is required',\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t\twidth=\"md\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t/>\n\t\t\t\t<ProFormTextArea width=\"md\" name=\"desc\" />\n\t\t\t</ModalForm>\n\n\t\t\t<UpdateForm\n\t\t\t\tonSubmit={async value => {\n\t\t\t\t\tmessage.info('成功，，，')\n\t\t\t\t\tconst success = await handleUpdate(value)\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\thandleUpdateModalOpen(false)\n\t\t\t\t\t\tsetCurrentRow(undefined)\n\t\t\t\t\t\tif (actionRef.current) {\n\t\t\t\t\t\t\tactionRef.current.reload()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonCancel={() => {\n\t\t\t\t\tmessage.info('取消，，，')\n\t\t\t\t\thandleUpdateModalOpen(false)\n\t\t\t\t\tif (!showDetail) {\n\t\t\t\t\t\tsetCurrentRow(undefined)\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tupdateModalOpen={updateModalOpen}\n\t\t\t\tvalues={currentRow || {}}\n\t\t\t/>\n\t\t\t<Drawer\n\t\t\t\twidth={600}\n\t\t\t\topen={showDetail}\n\t\t\t\tonClose={() => {\n\t\t\t\t\tsetCurrentRow(undefined)\n\t\t\t\t\tsetShowDetail(false)\n\t\t\t\t}}\n\t\t\t\tclosable={false}>\n\t\t\t\t{currentRow?.username && (\n\t\t\t\t\t<ProDescriptions<UserList>\n\t\t\t\t\t\tcolumn={2}\n\t\t\t\t\t\ttitle={currentRow?.username}\n\t\t\t\t\t\trequest={async () => ({\n\t\t\t\t\t\t\tdata: currentRow || {},\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tparams={{\n\t\t\t\t\t\t\tid: currentRow?.username,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcolumns={TableColumnsConfig(TableColumnParams) as ProDescriptionsItemProps<UserList>[]}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Drawer>\n\t\t</>\n\t)\n}\n\nexport default useProTable\n"],"names":["updateRule","options","http","post","method","data","addRule","removeRule","pagination","size","showSizeChanger","defaultPageSize","useProTable","actionRef","useRef","formRef","createModalOpen","handleModalOpen","useState","selectedRowsState","setSelectedRows","currentRow","setCurrentRow","showDetail","setShowDetail","updateModalOpen","handleUpdateModalOpen","setPagination","quickSearch","handleAdd","fields","hide","message","handleUpdate","handleRemove","selectedRows","row","ToolBarParams","TableColumnParams","jsxs","Fragment","jsx","ProTable","TableColumnsConfig","params","paginationConfig","page","pageSize","sort","filter","GetAllShelf","formatDataForProTable","_","ToolBarRender","error","FooterToolbar","pre","item","Button","_b","_a","ModalForm","value","ProFormText","ProFormTextArea","UpdateForm","Drawer","ProDescriptions"],"mappings":"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"}