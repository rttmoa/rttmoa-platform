{"version":3,"file":"tableGrouping-022061ef.js","sources":["../../../src/views/list/basicTable/components/tableGrouping.tsx"],"sourcesContent":["import React from \"react\";\nimport { Table } from \"antd\";\nimport type { TableColumnsType } from \"antd\";\n\ninterface DataType {\n  key: React.Key;\n  name: string;\n  age: number;\n  street: string;\n  building: string;\n  number: number;\n  companyAddress: string;\n  companyName: string;\n  gender: string;\n}\n\nconst columns: TableColumnsType<DataType> = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    width: 100,\n    fixed: \"left\",\n    filters: [\n      {\n        text: \"Joe\",\n        value: \"Joe\"\n      },\n      {\n        text: \"John\",\n        value: \"John\"\n      }\n    ],\n    onFilter: (value: any, record) => record.name.indexOf(value) === 0\n  },\n  {\n    title: \"Other\",\n    children: [\n      {\n        title: \"Age\",\n        dataIndex: \"age\",\n        key: \"age\",\n        width: 150,\n        sorter: (a, b) => a.age - b.age\n      },\n      {\n        title: \"Address\",\n        children: [\n          {\n            title: \"Street\",\n            dataIndex: \"street\",\n            key: \"street\",\n            width: 150\n          },\n          {\n            title: \"Block\",\n            children: [\n              {\n                title: \"Building\",\n                dataIndex: \"building\",\n                key: \"building\",\n                width: 100\n              },\n              {\n                title: \"Door No.\",\n                dataIndex: \"number\",\n                key: \"number\",\n                width: 100\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  {\n    title: \"Company\",\n    children: [\n      {\n        title: \"Company Address\",\n        dataIndex: \"companyAddress\",\n        key: \"companyAddress\",\n        width: 200\n      },\n      {\n        title: \"Company Name\",\n        dataIndex: \"companyName\",\n        key: \"companyName\"\n      }\n    ]\n  },\n  {\n    title: \"Gender\",\n    dataIndex: \"gender\",\n    key: \"gender\",\n    width: 80,\n    fixed: \"right\"\n  }\n];\n\nconst data: DataType[] = [];\nfor (let i = 0; i < 100; i++) {\n  data.push({\n    key: i,\n    name: \"John Brown\",\n    age: i + 1,\n    street: \"Lake Park\",\n    building: \"C\",\n    number: 2035,\n    companyAddress: \"Lake Street 42\",\n    companyName: \"SoftLake Co\",\n    gender: \"M\"\n  });\n}\n\nconst App: any = ({ isShow }: any) =>\n  isShow && <Table columns={columns} dataSource={data} bordered size=\"middle\" scroll={{ x: \"calc(700px + 50%)\", y: 240 }} />;\n\nexport default App;\n"],"names":["columns","value","record","a","b","data","i","App","isShow","jsx","Table"],"mappings":"sZAgBA,MAAMA,EAAsC,CAC1C,CACE,MAAO,OACP,UAAW,OACX,IAAK,OACL,MAAO,IACP,MAAO,OACP,QAAS,CACP,CACE,KAAM,MACN,MAAO,KACT,EACA,CACE,KAAM,OACN,MAAO,MACT,CACF,EACA,SAAU,CAACC,EAAYC,IAAWA,EAAO,KAAK,QAAQD,CAAK,IAAM,CACnE,EACA,CACE,MAAO,QACP,SAAU,CACR,CACE,MAAO,MACP,UAAW,MACX,IAAK,MACL,MAAO,IACP,OAAQ,CAACE,EAAGC,IAAMD,EAAE,IAAMC,EAAE,GAC9B,EACA,CACE,MAAO,UACP,SAAU,CACR,CACE,MAAO,SACP,UAAW,SACX,IAAK,SACL,MAAO,GACT,EACA,CACE,MAAO,QACP,SAAU,CACR,CACE,MAAO,WACP,UAAW,WACX,IAAK,WACL,MAAO,GACT,EACA,CACE,MAAO,WACP,UAAW,SACX,IAAK,SACL,MAAO,GACT,CACF,CACF,CACF,CACF,CACF,CACF,EACA,CACE,MAAO,UACP,SAAU,CACR,CACE,MAAO,kBACP,UAAW,iBACX,IAAK,iBACL,MAAO,GACT,EACA,CACE,MAAO,eACP,UAAW,cACX,IAAK,aACP,CACF,CACF,EACA,CACE,MAAO,SACP,UAAW,SACX,IAAK,SACL,MAAO,GACP,MAAO,OACT,CACF,EAEMC,EAAmB,CAAA,EACzB,QAASC,EAAI,EAAGA,EAAI,IAAKA,IACvBD,EAAK,KAAK,CACR,IAAKC,EACL,KAAM,aACN,IAAKA,EAAI,EACT,OAAQ,YACR,SAAU,IACV,OAAQ,KACR,eAAgB,iBAChB,YAAa,cACb,OAAQ,GAAA,CACT,EAGG,MAAAC,EAAW,CAAC,CAAE,OAAAC,KAClBA,GAAUC,EAAAA,IAACC,GAAM,QAAAV,EAAkB,WAAYK,EAAM,SAAQ,GAAC,KAAK,SAAS,OAAQ,CAAE,EAAG,oBAAqB,EAAG,IAAO,CAAA"}