{"version":3,"file":"TreeSelect-c05da38e.js","sources":["../../../node_modules/rc-tree-select/es/hooks/useCache.js","../../../node_modules/rc-tree-select/es/hooks/useCheckedKeys.js","../../../node_modules/rc-tree-select/es/utils/valueUtil.js","../../../node_modules/rc-tree-select/es/hooks/useDataEntities.js","../../../node_modules/rc-tree-select/es/TreeNode.js","../../../node_modules/rc-tree-select/es/utils/legacyUtil.js","../../../node_modules/rc-tree-select/es/hooks/useFilterTreeData.js","../../../node_modules/rc-tree-select/es/hooks/useRefFunc.js","../../../node_modules/rc-tree-select/es/hooks/useTreeData.js","../../../node_modules/rc-tree-select/es/LegacyContext.js","../../../node_modules/rc-tree-select/es/TreeSelectContext.js","../../../node_modules/rc-tree-select/es/OptionList.js","../../../node_modules/rc-tree-select/es/utils/strategyUtil.js","../../../node_modules/rc-tree-select/es/TreeSelect.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\n/**\n * This function will try to call requestIdleCallback if available to save performance.\n * No need `getLabel` here since already fetch on `rawLabeledValue`.\n */\nexport default (function (values) {\n  var cacheRef = React.useRef({\n    valueLabels: new Map()\n  });\n  return React.useMemo(function () {\n    var valueLabels = cacheRef.current.valueLabels;\n    var valueLabelsCache = new Map();\n    var filledValues = values.map(function (item) {\n      var value = item.value,\n        label = item.label;\n      var mergedLabel = label !== null && label !== void 0 ? label : valueLabels.get(value);\n\n      // Save in cache\n      valueLabelsCache.set(value, mergedLabel);\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: mergedLabel\n      });\n    });\n    cacheRef.current.valueLabels = valueLabelsCache;\n    return [filledValues];\n  }, [values]);\n});","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nvar useCheckedKeys = function useCheckedKeys(rawLabeledValues, rawHalfCheckedValues, treeConduction, keyEntities) {\n  return React.useMemo(function () {\n    var extractValues = function extractValues(values) {\n      return values.map(function (_ref) {\n        var value = _ref.value;\n        return value;\n      });\n    };\n    var checkedKeys = extractValues(rawLabeledValues);\n    var halfCheckedKeys = extractValues(rawHalfCheckedValues);\n    var missingValues = checkedKeys.filter(function (key) {\n      return !keyEntities[key];\n    });\n    var finalCheckedKeys = checkedKeys;\n    var finalHalfCheckedKeys = halfCheckedKeys;\n    if (treeConduction) {\n      var conductResult = conductCheck(checkedKeys, true, keyEntities);\n      finalCheckedKeys = conductResult.checkedKeys;\n      finalHalfCheckedKeys = conductResult.halfCheckedKeys;\n    }\n    return [Array.from(new Set([].concat(_toConsumableArray(missingValues), _toConsumableArray(finalCheckedKeys)))), finalHalfCheckedKeys];\n  }, [rawLabeledValues, rawHalfCheckedValues, treeConduction, keyEntities]);\n};\nexport default useCheckedKeys;","export var toArray = function toArray(value) {\n  return Array.isArray(value) ? value : value !== undefined ? [value] : [];\n};\nexport var fillFieldNames = function fillFieldNames(fieldNames) {\n  var _ref = fieldNames || {},\n    label = _ref.label,\n    value = _ref.value,\n    children = _ref.children;\n  return {\n    _title: label ? [label] : ['title', 'label'],\n    value: value || 'value',\n    key: value || 'value',\n    children: children || 'children'\n  };\n};\nexport var isCheckDisabled = function isCheckDisabled(node) {\n  return !node || node.disabled || node.disableCheckbox || node.checkable === false;\n};\nexport var getAllKeys = function getAllKeys(treeData, fieldNames) {\n  var keys = [];\n  var dig = function dig(list) {\n    list.forEach(function (item) {\n      var children = item[fieldNames.children];\n      if (children) {\n        keys.push(item[fieldNames.value]);\n        dig(children);\n      }\n    });\n  };\n  dig(treeData);\n  return keys;\n};\nexport var isNil = function isNil(val) {\n  return val === null || val === undefined;\n};","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport { convertDataToEntities } from \"rc-tree/es/utils/treeUtil\";\nimport warning from \"rc-util/es/warning\";\nimport { isNil } from \"../utils/valueUtil\";\nexport default (function (treeData, fieldNames) {\n  return React.useMemo(function () {\n    var collection = convertDataToEntities(treeData, {\n      fieldNames: fieldNames,\n      initWrapper: function initWrapper(wrapper) {\n        return _objectSpread(_objectSpread({}, wrapper), {}, {\n          valueEntities: new Map()\n        });\n      },\n      processEntity: function processEntity(entity, wrapper) {\n        var val = entity.node[fieldNames.value];\n\n        // Check if exist same value\n        if (process.env.NODE_ENV !== 'production') {\n          var key = entity.node.key;\n          warning(!isNil(val), 'TreeNode `value` is invalidate: undefined');\n          warning(!wrapper.valueEntities.has(val), \"Same `value` exist in the tree: \".concat(val));\n          warning(!key || String(key) === String(val), \"`key` or `value` with TreeNode must be the same or you can remove one of them. key: \".concat(key, \", value: \").concat(val, \".\"));\n        }\n        wrapper.valueEntities.set(val, entity);\n      }\n    });\n    return collection;\n  }, [treeData, fieldNames]);\n});","/* istanbul ignore file */\n\n/** This is a placeholder, not real render in dom */\nvar TreeNode = function TreeNode() {\n  return null;\n};\nexport default TreeNode;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"value\"];\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport TreeNode from \"../TreeNode\";\nexport function convertChildrenToData(nodes) {\n  return toArray(nodes).map(function (node) {\n    if (! /*#__PURE__*/React.isValidElement(node) || !node.type) {\n      return null;\n    }\n    var _ref = node,\n      key = _ref.key,\n      _ref$props = _ref.props,\n      children = _ref$props.children,\n      value = _ref$props.value,\n      restProps = _objectWithoutProperties(_ref$props, _excluded);\n    var data = _objectSpread({\n      key: key,\n      value: value\n    }, restProps);\n    var childData = convertChildrenToData(children);\n    if (childData.length) {\n      data.children = childData;\n    }\n    return data;\n  }).filter(function (data) {\n    return data;\n  });\n}\nexport function fillLegacyProps(dataNode) {\n  if (!dataNode) {\n    return dataNode;\n  }\n  var cloneNode = _objectSpread({}, dataNode);\n  if (!('props' in cloneNode)) {\n    Object.defineProperty(cloneNode, 'props', {\n      get: function get() {\n        warning(false, 'New `rc-tree-select` not support return node instance as argument anymore. Please consider to remove `props` access.');\n        return cloneNode;\n      }\n    });\n  }\n  return cloneNode;\n}\nexport function fillAdditionalInfo(extra, triggerValue, checkedValues, treeData, showPosition, fieldNames) {\n  var triggerNode = null;\n  var nodeList = null;\n  function generateMap() {\n    function dig(list) {\n      var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';\n      var parentIncluded = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      return list.map(function (option, index) {\n        var pos = \"\".concat(level, \"-\").concat(index);\n        var value = option[fieldNames.value];\n        var included = checkedValues.includes(value);\n        var children = dig(option[fieldNames.children] || [], pos, included);\n        var node = /*#__PURE__*/React.createElement(TreeNode, option, children.map(function (child) {\n          return child.node;\n        }));\n\n        // Link with trigger node\n        if (triggerValue === value) {\n          triggerNode = node;\n        }\n        if (included) {\n          var checkedNode = {\n            pos: pos,\n            node: node,\n            children: children\n          };\n          if (!parentIncluded) {\n            nodeList.push(checkedNode);\n          }\n          return checkedNode;\n        }\n        return null;\n      }).filter(function (node) {\n        return node;\n      });\n    }\n    if (!nodeList) {\n      nodeList = [];\n      dig(treeData);\n\n      // Sort to keep the checked node length\n      nodeList.sort(function (_ref2, _ref3) {\n        var val1 = _ref2.node.props.value;\n        var val2 = _ref3.node.props.value;\n        var index1 = checkedValues.indexOf(val1);\n        var index2 = checkedValues.indexOf(val2);\n        return index1 - index2;\n      });\n    }\n  }\n  Object.defineProperty(extra, 'triggerNode', {\n    get: function get() {\n      warning(false, '`triggerNode` is deprecated. Please consider decoupling data with node.');\n      generateMap();\n      return triggerNode;\n    }\n  });\n  Object.defineProperty(extra, 'allCheckedNodes', {\n    get: function get() {\n      warning(false, '`allCheckedNodes` is deprecated. Please consider decoupling data with node.');\n      generateMap();\n      if (showPosition) {\n        return nodeList;\n      }\n      return nodeList.map(function (_ref4) {\n        var node = _ref4.node;\n        return node;\n      });\n    }\n  });\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport { fillLegacyProps } from \"../utils/legacyUtil\";\nvar useFilterTreeData = function useFilterTreeData(treeData, searchValue, options) {\n  var fieldNames = options.fieldNames,\n    treeNodeFilterProp = options.treeNodeFilterProp,\n    filterTreeNode = options.filterTreeNode;\n  var fieldChildren = fieldNames.children;\n  return React.useMemo(function () {\n    if (!searchValue || filterTreeNode === false) {\n      return treeData;\n    }\n    var filterOptionFunc = typeof filterTreeNode === 'function' ? filterTreeNode : function (_, dataNode) {\n      return String(dataNode[treeNodeFilterProp]).toUpperCase().includes(searchValue.toUpperCase());\n    };\n    var filterTreeNodes = function filterTreeNodes(nodes) {\n      var keepAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return nodes.reduce(function (filtered, node) {\n        var children = node[fieldChildren];\n        var isMatch = keepAll || filterOptionFunc(searchValue, fillLegacyProps(node));\n        var filteredChildren = filterTreeNodes(children || [], isMatch);\n        if (isMatch || filteredChildren.length) {\n          filtered.push(_objectSpread(_objectSpread({}, node), {}, _defineProperty({\n            isLeaf: undefined\n          }, fieldChildren, filteredChildren)));\n        }\n        return filtered;\n      }, []);\n    };\n    return filterTreeNodes(treeData);\n  }, [treeData, searchValue, fieldChildren, treeNodeFilterProp, filterTreeNode]);\n};\nexport default useFilterTreeData;","import * as React from 'react';\n\n/**\n * Same as `React.useCallback` but always return a memoized function\n * but redirect to real function.\n */\nexport default function useRefFunc(callback) {\n  var funcRef = React.useRef();\n  funcRef.current = callback;\n  var cacheFn = React.useCallback(function () {\n    return funcRef.current.apply(funcRef, arguments);\n  }, []);\n  return cacheFn;\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport { convertChildrenToData } from \"../utils/legacyUtil\";\nfunction buildTreeStructure(nodes, config) {\n  var id = config.id,\n    pId = config.pId,\n    rootPId = config.rootPId;\n  var nodeMap = new Map();\n  var rootNodes = [];\n  nodes.forEach(function (node) {\n    var nodeKey = node[id];\n    var clonedNode = _objectSpread(_objectSpread({}, node), {}, {\n      key: node.key || nodeKey\n    });\n    nodeMap.set(nodeKey, clonedNode);\n  });\n  nodeMap.forEach(function (node) {\n    var parentKey = node[pId];\n    var parent = nodeMap.get(parentKey);\n    if (parent) {\n      parent.children = parent.children || [];\n      parent.children.push(node);\n    } else if (parentKey === rootPId || rootPId === null) {\n      rootNodes.push(node);\n    }\n  });\n  return rootNodes;\n}\n\n/**\n * 将 `treeData` 或 `children` 转换为格式化的 `treeData`。\n * 如果 `treeData` 或 `children` 没有变化，则不会重新计算。\n */\nexport default function useTreeData(treeData, children, simpleMode) {\n  return React.useMemo(function () {\n    if (treeData) {\n      if (simpleMode) {\n        var config = _objectSpread({\n          id: 'id',\n          pId: 'pId',\n          rootPId: null\n        }, _typeof(simpleMode) === 'object' ? simpleMode : {});\n        return buildTreeStructure(treeData, config);\n      }\n      return treeData;\n    }\n    return convertChildrenToData(children);\n  }, [children, simpleMode, treeData]);\n}","import * as React from 'react';\nvar LegacySelectContext = /*#__PURE__*/React.createContext(null);\nexport default LegacySelectContext;","import * as React from 'react';\nvar TreeSelectContext = /*#__PURE__*/React.createContext(null);\nexport default TreeSelectContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useBaseProps } from 'rc-select';\nimport Tree from 'rc-tree';\nimport { UnstableContext } from 'rc-tree';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport * as React from 'react';\nimport LegacyContext from \"./LegacyContext\";\nimport TreeSelectContext from \"./TreeSelectContext\";\nimport { getAllKeys, isCheckDisabled } from \"./utils/valueUtil\";\nimport { useEvent } from 'rc-util';\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\nvar OptionList = function OptionList(_, ref) {\n  var _useBaseProps = useBaseProps(),\n    prefixCls = _useBaseProps.prefixCls,\n    multiple = _useBaseProps.multiple,\n    searchValue = _useBaseProps.searchValue,\n    toggleOpen = _useBaseProps.toggleOpen,\n    open = _useBaseProps.open,\n    notFoundContent = _useBaseProps.notFoundContent;\n  var _React$useContext = React.useContext(TreeSelectContext),\n    virtual = _React$useContext.virtual,\n    listHeight = _React$useContext.listHeight,\n    listItemHeight = _React$useContext.listItemHeight,\n    listItemScrollOffset = _React$useContext.listItemScrollOffset,\n    treeData = _React$useContext.treeData,\n    fieldNames = _React$useContext.fieldNames,\n    onSelect = _React$useContext.onSelect,\n    dropdownMatchSelectWidth = _React$useContext.dropdownMatchSelectWidth,\n    treeExpandAction = _React$useContext.treeExpandAction,\n    treeTitleRender = _React$useContext.treeTitleRender,\n    onPopupScroll = _React$useContext.onPopupScroll,\n    leftMaxCount = _React$useContext.leftMaxCount,\n    leafCountOnly = _React$useContext.leafCountOnly,\n    valueEntities = _React$useContext.valueEntities;\n  var _React$useContext2 = React.useContext(LegacyContext),\n    checkable = _React$useContext2.checkable,\n    checkedKeys = _React$useContext2.checkedKeys,\n    halfCheckedKeys = _React$useContext2.halfCheckedKeys,\n    treeExpandedKeys = _React$useContext2.treeExpandedKeys,\n    treeDefaultExpandAll = _React$useContext2.treeDefaultExpandAll,\n    treeDefaultExpandedKeys = _React$useContext2.treeDefaultExpandedKeys,\n    onTreeExpand = _React$useContext2.onTreeExpand,\n    treeIcon = _React$useContext2.treeIcon,\n    showTreeIcon = _React$useContext2.showTreeIcon,\n    switcherIcon = _React$useContext2.switcherIcon,\n    treeLine = _React$useContext2.treeLine,\n    treeNodeFilterProp = _React$useContext2.treeNodeFilterProp,\n    loadData = _React$useContext2.loadData,\n    treeLoadedKeys = _React$useContext2.treeLoadedKeys,\n    treeMotion = _React$useContext2.treeMotion,\n    onTreeLoad = _React$useContext2.onTreeLoad,\n    keyEntities = _React$useContext2.keyEntities;\n  var treeRef = React.useRef();\n  var memoTreeData = useMemo(function () {\n    return treeData;\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [open, treeData], function (prev, next) {\n    return next[0] && prev[1] !== next[1];\n  });\n\n  // ========================== Values ==========================\n  var mergedCheckedKeys = React.useMemo(function () {\n    if (!checkable) {\n      return null;\n    }\n    return {\n      checked: checkedKeys,\n      halfChecked: halfCheckedKeys\n    };\n  }, [checkable, checkedKeys, halfCheckedKeys]);\n\n  // ========================== Scroll ==========================\n  React.useEffect(function () {\n    // Single mode should scroll to current key\n    if (open && !multiple && checkedKeys.length) {\n      var _treeRef$current;\n      (_treeRef$current = treeRef.current) === null || _treeRef$current === void 0 || _treeRef$current.scrollTo({\n        key: checkedKeys[0]\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open]);\n\n  // ========================== Events ==========================\n  var onListMouseDown = function onListMouseDown(event) {\n    event.preventDefault();\n  };\n  var onInternalSelect = function onInternalSelect(__, info) {\n    var node = info.node;\n    if (checkable && isCheckDisabled(node)) {\n      return;\n    }\n    onSelect(node.key, {\n      selected: !checkedKeys.includes(node.key)\n    });\n    if (!multiple) {\n      toggleOpen(false);\n    }\n  };\n\n  // =========================== Keys ===========================\n  var _React$useState = React.useState(treeDefaultExpandedKeys),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    expandedKeys = _React$useState2[0],\n    setExpandedKeys = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    searchExpandedKeys = _React$useState4[0],\n    setSearchExpandedKeys = _React$useState4[1];\n  var mergedExpandedKeys = React.useMemo(function () {\n    if (treeExpandedKeys) {\n      return _toConsumableArray(treeExpandedKeys);\n    }\n    return searchValue ? searchExpandedKeys : expandedKeys;\n  }, [expandedKeys, searchExpandedKeys, treeExpandedKeys, searchValue]);\n  var onInternalExpand = function onInternalExpand(keys) {\n    setExpandedKeys(keys);\n    setSearchExpandedKeys(keys);\n    if (onTreeExpand) {\n      onTreeExpand(keys);\n    }\n  };\n\n  // ========================== Search ==========================\n  var lowerSearchValue = String(searchValue).toLowerCase();\n  var filterTreeNode = function filterTreeNode(treeNode) {\n    if (!lowerSearchValue) {\n      return false;\n    }\n    return String(treeNode[treeNodeFilterProp]).toLowerCase().includes(lowerSearchValue);\n  };\n  React.useEffect(function () {\n    if (searchValue) {\n      setSearchExpandedKeys(getAllKeys(treeData, fieldNames));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchValue]);\n\n  // ========================= Disabled =========================\n  // Cache disabled states in React state to ensure re-render when cache updates\n  var _React$useState5 = React.useState(function () {\n      return new Map();\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    disabledCache = _React$useState6[0],\n    setDisabledCache = _React$useState6[1];\n  React.useEffect(function () {\n    if (leftMaxCount) {\n      setDisabledCache(new Map());\n    }\n  }, [leftMaxCount]);\n  function getDisabledWithCache(node) {\n    var value = node[fieldNames.value];\n    if (!disabledCache.has(value)) {\n      var entity = valueEntities.get(value);\n      var isLeaf = (entity.children || []).length === 0;\n      if (!isLeaf) {\n        var checkableChildren = entity.children.filter(function (childTreeNode) {\n          return !childTreeNode.node.disabled && !childTreeNode.node.disableCheckbox && !checkedKeys.includes(childTreeNode.node[fieldNames.value]);\n        });\n        var checkableChildrenCount = checkableChildren.length;\n        disabledCache.set(value, checkableChildrenCount > leftMaxCount);\n      } else {\n        disabledCache.set(value, false);\n      }\n    }\n    return disabledCache.get(value);\n  }\n  var nodeDisabled = useEvent(function (node) {\n    var nodeValue = node[fieldNames.value];\n    if (checkedKeys.includes(nodeValue)) {\n      return false;\n    }\n    if (leftMaxCount === null) {\n      return false;\n    }\n    if (leftMaxCount <= 0) {\n      return true;\n    }\n\n    // This is a low performance calculation\n    if (leafCountOnly && leftMaxCount) {\n      return getDisabledWithCache(node);\n    }\n    return false;\n  });\n\n  // ========================== Get First Selectable Node ==========================\n  var getFirstMatchingNode = function getFirstMatchingNode(nodes) {\n    var _iterator = _createForOfIteratorHelper(nodes),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var node = _step.value;\n        if (node.disabled || node.selectable === false) {\n          continue;\n        }\n        if (searchValue) {\n          if (filterTreeNode(node)) {\n            return node;\n          }\n        } else {\n          return node;\n        }\n        if (node[fieldNames.children]) {\n          var matchInChildren = getFirstMatchingNode(node[fieldNames.children]);\n          if (matchInChildren) {\n            return matchInChildren;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return null;\n  };\n\n  // ========================== Active ==========================\n  var _React$useState7 = React.useState(null),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    activeKey = _React$useState8[0],\n    setActiveKey = _React$useState8[1];\n  var activeEntity = keyEntities[activeKey];\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n    var nextActiveKey = null;\n    var getFirstNode = function getFirstNode() {\n      var firstNode = getFirstMatchingNode(memoTreeData);\n      return firstNode ? firstNode[fieldNames.value] : null;\n    };\n\n    // single mode active first checked node\n    if (!multiple && checkedKeys.length && !searchValue) {\n      nextActiveKey = checkedKeys[0];\n    } else {\n      nextActiveKey = getFirstNode();\n    }\n    setActiveKey(nextActiveKey);\n  }, [open, searchValue]);\n\n  // ========================= Keyboard =========================\n  React.useImperativeHandle(ref, function () {\n    var _treeRef$current2;\n    return {\n      scrollTo: (_treeRef$current2 = treeRef.current) === null || _treeRef$current2 === void 0 ? void 0 : _treeRef$current2.scrollTo,\n      onKeyDown: function onKeyDown(event) {\n        var _treeRef$current3;\n        var which = event.which;\n        switch (which) {\n          // >>> Arrow keys\n          case KeyCode.UP:\n          case KeyCode.DOWN:\n          case KeyCode.LEFT:\n          case KeyCode.RIGHT:\n            (_treeRef$current3 = treeRef.current) === null || _treeRef$current3 === void 0 || _treeRef$current3.onKeyDown(event);\n            break;\n\n          // >>> Select item\n          case KeyCode.ENTER:\n            {\n              if (activeEntity) {\n                var isNodeDisabled = nodeDisabled(activeEntity.node);\n                var _ref = (activeEntity === null || activeEntity === void 0 ? void 0 : activeEntity.node) || {},\n                  selectable = _ref.selectable,\n                  value = _ref.value,\n                  disabled = _ref.disabled;\n                if (selectable !== false && !disabled && !isNodeDisabled) {\n                  onInternalSelect(null, {\n                    node: {\n                      key: activeKey\n                    },\n                    selected: !checkedKeys.includes(value)\n                  });\n                }\n              }\n              break;\n            }\n\n          // >>> Close\n          case KeyCode.ESC:\n            {\n              toggleOpen(false);\n            }\n        }\n      },\n      onKeyUp: function onKeyUp() {}\n    };\n  });\n  var hasLoadDataFn = useMemo(function () {\n    return searchValue ? false : true;\n  }, [searchValue, treeExpandedKeys || expandedKeys], function (_ref2, _ref3) {\n    var _ref4 = _slicedToArray(_ref2, 1),\n      preSearchValue = _ref4[0];\n    var _ref5 = _slicedToArray(_ref3, 2),\n      nextSearchValue = _ref5[0],\n      nextExcludeSearchExpandedKeys = _ref5[1];\n    return preSearchValue !== nextSearchValue && !!(nextSearchValue || nextExcludeSearchExpandedKeys);\n  });\n  var syncLoadData = hasLoadDataFn ? loadData : null;\n\n  // ========================== Render ==========================\n  if (memoTreeData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      role: \"listbox\",\n      className: \"\".concat(prefixCls, \"-empty\"),\n      onMouseDown: onListMouseDown\n    }, notFoundContent);\n  }\n  var treeProps = {\n    fieldNames: fieldNames\n  };\n  if (treeLoadedKeys) {\n    treeProps.loadedKeys = treeLoadedKeys;\n  }\n  if (mergedExpandedKeys) {\n    treeProps.expandedKeys = mergedExpandedKeys;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: onListMouseDown\n  }, activeEntity && open && /*#__PURE__*/React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, activeEntity.node.value), /*#__PURE__*/React.createElement(UnstableContext.Provider, {\n    value: {\n      nodeDisabled: nodeDisabled\n    }\n  }, /*#__PURE__*/React.createElement(Tree, _extends({\n    ref: treeRef,\n    focusable: false,\n    prefixCls: \"\".concat(prefixCls, \"-tree\"),\n    treeData: memoTreeData,\n    height: listHeight,\n    itemHeight: listItemHeight,\n    itemScrollOffset: listItemScrollOffset,\n    virtual: virtual !== false && dropdownMatchSelectWidth !== false,\n    multiple: multiple,\n    icon: treeIcon,\n    showIcon: showTreeIcon,\n    switcherIcon: switcherIcon,\n    showLine: treeLine,\n    loadData: syncLoadData,\n    motion: treeMotion,\n    activeKey: activeKey\n    // We handle keys by out instead tree self\n    ,\n    checkable: checkable,\n    checkStrictly: true,\n    checkedKeys: mergedCheckedKeys,\n    selectedKeys: !checkable ? checkedKeys : [],\n    defaultExpandAll: treeDefaultExpandAll,\n    titleRender: treeTitleRender\n  }, treeProps, {\n    // Proxy event out\n    onActiveChange: setActiveKey,\n    onSelect: onInternalSelect,\n    onCheck: onInternalSelect,\n    onExpand: onInternalExpand,\n    onLoad: onTreeLoad,\n    filterTreeNode: filterTreeNode,\n    expandAction: treeExpandAction,\n    onScroll: onPopupScroll\n  }))));\n};\nvar RefOptionList = /*#__PURE__*/React.forwardRef(OptionList);\nif (process.env.NODE_ENV !== 'production') {\n  RefOptionList.displayName = 'OptionList';\n}\nexport default RefOptionList;","import { isCheckDisabled } from \"./valueUtil\";\nexport var SHOW_ALL = 'SHOW_ALL';\nexport var SHOW_PARENT = 'SHOW_PARENT';\nexport var SHOW_CHILD = 'SHOW_CHILD';\nexport function formatStrategyValues(values, strategy, keyEntities, fieldNames) {\n  var valueSet = new Set(values);\n  if (strategy === SHOW_CHILD) {\n    return values.filter(function (key) {\n      var entity = keyEntities[key];\n      return !entity || !entity.children || !entity.children.some(function (_ref) {\n        var node = _ref.node;\n        return valueSet.has(node[fieldNames.value]);\n      }) || !entity.children.every(function (_ref2) {\n        var node = _ref2.node;\n        return isCheckDisabled(node) || valueSet.has(node[fieldNames.value]);\n      });\n    });\n  }\n  if (strategy === SHOW_PARENT) {\n    return values.filter(function (key) {\n      var entity = keyEntities[key];\n      var parent = entity ? entity.parent : null;\n      return !parent || isCheckDisabled(parent.node) || !valueSet.has(parent.key);\n    });\n  }\n  return values;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar _excluded = [\"id\", \"prefixCls\", \"value\", \"defaultValue\", \"onChange\", \"onSelect\", \"onDeselect\", \"searchValue\", \"inputValue\", \"onSearch\", \"autoClearSearchValue\", \"filterTreeNode\", \"treeNodeFilterProp\", \"showCheckedStrategy\", \"treeNodeLabelProp\", \"multiple\", \"treeCheckable\", \"treeCheckStrictly\", \"labelInValue\", \"maxCount\", \"fieldNames\", \"treeDataSimpleMode\", \"treeData\", \"children\", \"loadData\", \"treeLoadedKeys\", \"onTreeLoad\", \"treeDefaultExpandAll\", \"treeExpandedKeys\", \"treeDefaultExpandedKeys\", \"onTreeExpand\", \"treeExpandAction\", \"virtual\", \"listHeight\", \"listItemHeight\", \"listItemScrollOffset\", \"onDropdownVisibleChange\", \"dropdownMatchSelectWidth\", \"treeLine\", \"treeIcon\", \"showTreeIcon\", \"switcherIcon\", \"treeMotion\", \"treeTitleRender\", \"onPopupScroll\"];\nimport { BaseSelect } from 'rc-select';\nimport useId from \"rc-select/es/hooks/useId\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport useCache from \"./hooks/useCache\";\nimport useCheckedKeys from \"./hooks/useCheckedKeys\";\nimport useDataEntities from \"./hooks/useDataEntities\";\nimport useFilterTreeData from \"./hooks/useFilterTreeData\";\nimport useRefFunc from \"./hooks/useRefFunc\";\nimport useTreeData from \"./hooks/useTreeData\";\nimport LegacyContext from \"./LegacyContext\";\nimport OptionList from \"./OptionList\";\nimport TreeNode from \"./TreeNode\";\nimport TreeSelectContext from \"./TreeSelectContext\";\nimport { fillAdditionalInfo, fillLegacyProps } from \"./utils/legacyUtil\";\nimport { formatStrategyValues, SHOW_ALL, SHOW_CHILD, SHOW_PARENT } from \"./utils/strategyUtil\";\nimport { fillFieldNames, isNil, toArray } from \"./utils/valueUtil\";\nimport warningProps from \"./utils/warningPropsUtil\";\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\nvar TreeSelect = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var id = props.id,\n    _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-tree-select' : _props$prefixCls,\n    value = props.value,\n    defaultValue = props.defaultValue,\n    onChange = props.onChange,\n    onSelect = props.onSelect,\n    onDeselect = props.onDeselect,\n    searchValue = props.searchValue,\n    inputValue = props.inputValue,\n    onSearch = props.onSearch,\n    _props$autoClearSearc = props.autoClearSearchValue,\n    autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n    filterTreeNode = props.filterTreeNode,\n    _props$treeNodeFilter = props.treeNodeFilterProp,\n    treeNodeFilterProp = _props$treeNodeFilter === void 0 ? 'value' : _props$treeNodeFilter,\n    showCheckedStrategy = props.showCheckedStrategy,\n    treeNodeLabelProp = props.treeNodeLabelProp,\n    multiple = props.multiple,\n    treeCheckable = props.treeCheckable,\n    treeCheckStrictly = props.treeCheckStrictly,\n    labelInValue = props.labelInValue,\n    maxCount = props.maxCount,\n    fieldNames = props.fieldNames,\n    treeDataSimpleMode = props.treeDataSimpleMode,\n    treeData = props.treeData,\n    children = props.children,\n    loadData = props.loadData,\n    treeLoadedKeys = props.treeLoadedKeys,\n    onTreeLoad = props.onTreeLoad,\n    treeDefaultExpandAll = props.treeDefaultExpandAll,\n    treeExpandedKeys = props.treeExpandedKeys,\n    treeDefaultExpandedKeys = props.treeDefaultExpandedKeys,\n    onTreeExpand = props.onTreeExpand,\n    treeExpandAction = props.treeExpandAction,\n    virtual = props.virtual,\n    _props$listHeight = props.listHeight,\n    listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n    _props$listItemHeight = props.listItemHeight,\n    listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n    _props$listItemScroll = props.listItemScrollOffset,\n    listItemScrollOffset = _props$listItemScroll === void 0 ? 0 : _props$listItemScroll,\n    onDropdownVisibleChange = props.onDropdownVisibleChange,\n    _props$dropdownMatchS = props.dropdownMatchSelectWidth,\n    dropdownMatchSelectWidth = _props$dropdownMatchS === void 0 ? true : _props$dropdownMatchS,\n    treeLine = props.treeLine,\n    treeIcon = props.treeIcon,\n    showTreeIcon = props.showTreeIcon,\n    switcherIcon = props.switcherIcon,\n    treeMotion = props.treeMotion,\n    treeTitleRender = props.treeTitleRender,\n    onPopupScroll = props.onPopupScroll,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var mergedId = useId(id);\n  var treeConduction = treeCheckable && !treeCheckStrictly;\n  var mergedCheckable = treeCheckable || treeCheckStrictly;\n  var mergedLabelInValue = treeCheckStrictly || labelInValue;\n  var mergedMultiple = mergedCheckable || multiple;\n  var _useMergedState = useMergedState(defaultValue, {\n      value: value\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    internalValue = _useMergedState2[0],\n    setInternalValue = _useMergedState2[1];\n\n  // `multiple` && `!treeCheckable` should be show all\n  var mergedShowCheckedStrategy = React.useMemo(function () {\n    if (!treeCheckable) {\n      return SHOW_ALL;\n    }\n    return showCheckedStrategy || SHOW_CHILD;\n  }, [showCheckedStrategy, treeCheckable]);\n\n  // ========================== Warning ===========================\n  if (process.env.NODE_ENV !== 'production') {\n    warningProps(props);\n  }\n\n  // ========================= FieldNames =========================\n  var mergedFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames);\n  }, /* eslint-disable react-hooks/exhaustive-deps */\n  [JSON.stringify(fieldNames)]\n  /* eslint-enable react-hooks/exhaustive-deps */);\n\n  // =========================== Search ===========================\n  var _useMergedState3 = useMergedState('', {\n      value: searchValue !== undefined ? searchValue : inputValue,\n      postState: function postState(search) {\n        return search || '';\n      }\n    }),\n    _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n    mergedSearchValue = _useMergedState4[0],\n    setSearchValue = _useMergedState4[1];\n  var onInternalSearch = function onInternalSearch(searchText) {\n    setSearchValue(searchText);\n    onSearch === null || onSearch === void 0 || onSearch(searchText);\n  };\n\n  // ============================ Data ============================\n  // `useTreeData` only do convert of `children` or `simpleMode`.\n  // Else will return origin `treeData` for perf consideration.\n  // Do not do anything to loop the data.\n  var mergedTreeData = useTreeData(treeData, children, treeDataSimpleMode);\n  var _useDataEntities = useDataEntities(mergedTreeData, mergedFieldNames),\n    keyEntities = _useDataEntities.keyEntities,\n    valueEntities = _useDataEntities.valueEntities;\n\n  /** Get `missingRawValues` which not exist in the tree yet */\n  var splitRawValues = React.useCallback(function (newRawValues) {\n    var missingRawValues = [];\n    var existRawValues = [];\n\n    // Keep missing value in the cache\n    newRawValues.forEach(function (val) {\n      if (valueEntities.has(val)) {\n        existRawValues.push(val);\n      } else {\n        missingRawValues.push(val);\n      }\n    });\n    return {\n      missingRawValues: missingRawValues,\n      existRawValues: existRawValues\n    };\n  }, [valueEntities]);\n\n  // Filtered Tree\n  var filteredTreeData = useFilterTreeData(mergedTreeData, mergedSearchValue, {\n    fieldNames: mergedFieldNames,\n    treeNodeFilterProp: treeNodeFilterProp,\n    filterTreeNode: filterTreeNode\n  });\n\n  // =========================== Label ============================\n  var getLabel = React.useCallback(function (item) {\n    if (item) {\n      if (treeNodeLabelProp) {\n        return item[treeNodeLabelProp];\n      }\n\n      // Loop from fieldNames\n      var titleList = mergedFieldNames._title;\n      for (var i = 0; i < titleList.length; i += 1) {\n        var title = item[titleList[i]];\n        if (title !== undefined) {\n          return title;\n        }\n      }\n    }\n  }, [mergedFieldNames, treeNodeLabelProp]);\n\n  // ========================= Wrap Value =========================\n  var toLabeledValues = React.useCallback(function (draftValues) {\n    var values = toArray(draftValues);\n    return values.map(function (val) {\n      if (isRawValue(val)) {\n        return {\n          value: val\n        };\n      }\n      return val;\n    });\n  }, []);\n  var convert2LabelValues = React.useCallback(function (draftValues) {\n    var values = toLabeledValues(draftValues);\n    return values.map(function (item) {\n      var rawLabel = item.label;\n      var rawValue = item.value,\n        rawHalfChecked = item.halfChecked;\n      var rawDisabled;\n      var entity = valueEntities.get(rawValue);\n\n      // Fill missing label & status\n      if (entity) {\n        var _rawLabel;\n        rawLabel = treeTitleRender ? treeTitleRender(entity.node) : (_rawLabel = rawLabel) !== null && _rawLabel !== void 0 ? _rawLabel : getLabel(entity.node);\n        rawDisabled = entity.node.disabled;\n      } else if (rawLabel === undefined) {\n        // We try to find in current `labelInValue` value\n        var labelInValueItem = toLabeledValues(internalValue).find(function (labeledItem) {\n          return labeledItem.value === rawValue;\n        });\n        rawLabel = labelInValueItem.label;\n      }\n      return {\n        label: rawLabel,\n        value: rawValue,\n        halfChecked: rawHalfChecked,\n        disabled: rawDisabled\n      };\n    });\n  }, [valueEntities, getLabel, toLabeledValues, internalValue]);\n\n  // =========================== Values ===========================\n  var rawMixedLabeledValues = React.useMemo(function () {\n    return toLabeledValues(internalValue === null ? [] : internalValue);\n  }, [toLabeledValues, internalValue]);\n\n  // Split value into full check and half check\n  var _React$useMemo = React.useMemo(function () {\n      var fullCheckValues = [];\n      var halfCheckValues = [];\n      rawMixedLabeledValues.forEach(function (item) {\n        if (item.halfChecked) {\n          halfCheckValues.push(item);\n        } else {\n          fullCheckValues.push(item);\n        }\n      });\n      return [fullCheckValues, halfCheckValues];\n    }, [rawMixedLabeledValues]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    rawLabeledValues = _React$useMemo2[0],\n    rawHalfLabeledValues = _React$useMemo2[1];\n\n  // const [mergedValues] = useCache(rawLabeledValues);\n  var rawValues = React.useMemo(function () {\n    return rawLabeledValues.map(function (item) {\n      return item.value;\n    });\n  }, [rawLabeledValues]);\n\n  // Convert value to key. Will fill missed keys for conduct check.\n  var _useCheckedKeys = useCheckedKeys(rawLabeledValues, rawHalfLabeledValues, treeConduction, keyEntities),\n    _useCheckedKeys2 = _slicedToArray(_useCheckedKeys, 2),\n    rawCheckedValues = _useCheckedKeys2[0],\n    rawHalfCheckedValues = _useCheckedKeys2[1];\n\n  // Convert rawCheckedKeys to check strategy related values\n  var displayValues = React.useMemo(function () {\n    // Collect keys which need to show\n    var displayKeys = formatStrategyValues(rawCheckedValues, mergedShowCheckedStrategy, keyEntities, mergedFieldNames);\n\n    // Convert to value and filled with label\n    var values = displayKeys.map(function (key) {\n      var _keyEntities$key$node, _keyEntities$key;\n      return (_keyEntities$key$node = (_keyEntities$key = keyEntities[key]) === null || _keyEntities$key === void 0 || (_keyEntities$key = _keyEntities$key.node) === null || _keyEntities$key === void 0 ? void 0 : _keyEntities$key[mergedFieldNames.value]) !== null && _keyEntities$key$node !== void 0 ? _keyEntities$key$node : key;\n    });\n\n    // Back fill with origin label\n    var labeledValues = values.map(function (val) {\n      var targetItem = rawLabeledValues.find(function (item) {\n        return item.value === val;\n      });\n      var label = labelInValue ? targetItem === null || targetItem === void 0 ? void 0 : targetItem.label : treeTitleRender === null || treeTitleRender === void 0 ? void 0 : treeTitleRender(targetItem);\n      return {\n        value: val,\n        label: label\n      };\n    });\n    var rawDisplayValues = convert2LabelValues(labeledValues);\n    var firstVal = rawDisplayValues[0];\n    if (!mergedMultiple && firstVal && isNil(firstVal.value) && isNil(firstVal.label)) {\n      return [];\n    }\n    return rawDisplayValues.map(function (item) {\n      var _item$label;\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: (_item$label = item.label) !== null && _item$label !== void 0 ? _item$label : item.value\n      });\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mergedFieldNames, mergedMultiple, rawCheckedValues, rawLabeledValues, convert2LabelValues, mergedShowCheckedStrategy, keyEntities]);\n  var _useCache = useCache(displayValues),\n    _useCache2 = _slicedToArray(_useCache, 1),\n    cachedDisplayValues = _useCache2[0];\n\n  // ========================== MaxCount ==========================\n  var mergedMaxCount = React.useMemo(function () {\n    if (mergedMultiple && (mergedShowCheckedStrategy === 'SHOW_CHILD' || treeCheckStrictly || !treeCheckable)) {\n      return maxCount;\n    }\n    return null;\n  }, [maxCount, mergedMultiple, treeCheckStrictly, mergedShowCheckedStrategy, treeCheckable]);\n\n  // =========================== Change ===========================\n  var triggerChange = useRefFunc(function (newRawValues, extra, source) {\n    var formattedKeyList = formatStrategyValues(newRawValues, mergedShowCheckedStrategy, keyEntities, mergedFieldNames);\n\n    // Not allow pass with `maxCount`\n    if (mergedMaxCount && formattedKeyList.length > mergedMaxCount) {\n      return;\n    }\n    var labeledValues = convert2LabelValues(newRawValues);\n    setInternalValue(labeledValues);\n\n    // Clean up if needed\n    if (autoClearSearchValue) {\n      setSearchValue('');\n    }\n\n    // Generate rest parameters is costly, so only do it when necessary\n    if (onChange) {\n      var eventValues = newRawValues;\n      if (treeConduction) {\n        eventValues = formattedKeyList.map(function (key) {\n          var entity = valueEntities.get(key);\n          return entity ? entity.node[mergedFieldNames.value] : key;\n        });\n      }\n      var _ref = extra || {\n          triggerValue: undefined,\n          selected: undefined\n        },\n        triggerValue = _ref.triggerValue,\n        selected = _ref.selected;\n      var returnRawValues = eventValues;\n\n      // We need fill half check back\n      if (treeCheckStrictly) {\n        var halfValues = rawHalfLabeledValues.filter(function (item) {\n          return !eventValues.includes(item.value);\n        });\n        returnRawValues = [].concat(_toConsumableArray(returnRawValues), _toConsumableArray(halfValues));\n      }\n      var returnLabeledValues = convert2LabelValues(returnRawValues);\n      var additionalInfo = {\n        // [Legacy] Always return as array contains label & value\n        preValue: rawLabeledValues,\n        triggerValue: triggerValue\n      };\n\n      // [Legacy] Fill legacy data if user query.\n      // This is expansive that we only fill when user query\n      // https://github.com/react-component/tree-select/blob/fe33eb7c27830c9ac70cd1fdb1ebbe7bc679c16a/src/Select.jsx\n      var showPosition = true;\n      if (treeCheckStrictly || source === 'selection' && !selected) {\n        showPosition = false;\n      }\n      fillAdditionalInfo(additionalInfo, triggerValue, newRawValues, mergedTreeData, showPosition, mergedFieldNames);\n      if (mergedCheckable) {\n        additionalInfo.checked = selected;\n      } else {\n        additionalInfo.selected = selected;\n      }\n      var returnValues = mergedLabelInValue ? returnLabeledValues : returnLabeledValues.map(function (item) {\n        return item.value;\n      });\n      onChange(mergedMultiple ? returnValues : returnValues[0], mergedLabelInValue ? null : returnLabeledValues.map(function (item) {\n        return item.label;\n      }), additionalInfo);\n    }\n  });\n\n  // ========================== Options ===========================\n  /** Trigger by option list */\n  var onOptionSelect = React.useCallback(function (selectedKey, _ref2) {\n    var _node$mergedFieldName;\n    var selected = _ref2.selected,\n      source = _ref2.source;\n    var entity = keyEntities[selectedKey];\n    var node = entity === null || entity === void 0 ? void 0 : entity.node;\n    var selectedValue = (_node$mergedFieldName = node === null || node === void 0 ? void 0 : node[mergedFieldNames.value]) !== null && _node$mergedFieldName !== void 0 ? _node$mergedFieldName : selectedKey;\n\n    // Never be falsy but keep it safe\n    if (!mergedMultiple) {\n      // Single mode always set value\n      triggerChange([selectedValue], {\n        selected: true,\n        triggerValue: selectedValue\n      }, 'option');\n    } else {\n      var newRawValues = selected ? [].concat(_toConsumableArray(rawValues), [selectedValue]) : rawCheckedValues.filter(function (v) {\n        return v !== selectedValue;\n      });\n\n      // Add keys if tree conduction\n      if (treeConduction) {\n        // Should keep missing values\n        var _splitRawValues = splitRawValues(newRawValues),\n          missingRawValues = _splitRawValues.missingRawValues,\n          existRawValues = _splitRawValues.existRawValues;\n        var keyList = existRawValues.map(function (val) {\n          return valueEntities.get(val).key;\n        });\n\n        // Conduction by selected or not\n        var checkedKeys;\n        if (selected) {\n          var _conductCheck = conductCheck(keyList, true, keyEntities);\n          checkedKeys = _conductCheck.checkedKeys;\n        } else {\n          var _conductCheck2 = conductCheck(keyList, {\n            checked: false,\n            halfCheckedKeys: rawHalfCheckedValues\n          }, keyEntities);\n          checkedKeys = _conductCheck2.checkedKeys;\n        }\n\n        // Fill back of keys\n        newRawValues = [].concat(_toConsumableArray(missingRawValues), _toConsumableArray(checkedKeys.map(function (key) {\n          return keyEntities[key].node[mergedFieldNames.value];\n        })));\n      }\n      triggerChange(newRawValues, {\n        selected: selected,\n        triggerValue: selectedValue\n      }, source || 'option');\n    }\n\n    // Trigger select event\n    if (selected || !mergedMultiple) {\n      onSelect === null || onSelect === void 0 || onSelect(selectedValue, fillLegacyProps(node));\n    } else {\n      onDeselect === null || onDeselect === void 0 || onDeselect(selectedValue, fillLegacyProps(node));\n    }\n  }, [splitRawValues, valueEntities, keyEntities, mergedFieldNames, mergedMultiple, rawValues, triggerChange, treeConduction, onSelect, onDeselect, rawCheckedValues, rawHalfCheckedValues, maxCount]);\n\n  // ========================== Dropdown ==========================\n  var onInternalDropdownVisibleChange = React.useCallback(function (open) {\n    if (onDropdownVisibleChange) {\n      var legacyParam = {};\n      Object.defineProperty(legacyParam, 'documentClickClose', {\n        get: function get() {\n          warning(false, 'Second param of `onDropdownVisibleChange` has been removed.');\n          return false;\n        }\n      });\n      onDropdownVisibleChange(open, legacyParam);\n    }\n  }, [onDropdownVisibleChange]);\n\n  // ====================== Display Change ========================\n  var onDisplayValuesChange = useRefFunc(function (newValues, info) {\n    var newRawValues = newValues.map(function (item) {\n      return item.value;\n    });\n    if (info.type === 'clear') {\n      triggerChange(newRawValues, {}, 'selection');\n      return;\n    }\n\n    // TreeSelect only have multiple mode which means display change only has remove\n    if (info.values.length) {\n      onOptionSelect(info.values[0].value, {\n        selected: false,\n        source: 'selection'\n      });\n    }\n  });\n\n  // ========================== Context ===========================\n  var treeSelectContext = React.useMemo(function () {\n    return {\n      virtual: virtual,\n      dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n      listHeight: listHeight,\n      listItemHeight: listItemHeight,\n      listItemScrollOffset: listItemScrollOffset,\n      treeData: filteredTreeData,\n      fieldNames: mergedFieldNames,\n      onSelect: onOptionSelect,\n      treeExpandAction: treeExpandAction,\n      treeTitleRender: treeTitleRender,\n      onPopupScroll: onPopupScroll,\n      leftMaxCount: maxCount === undefined ? null : maxCount - cachedDisplayValues.length,\n      leafCountOnly: mergedShowCheckedStrategy === 'SHOW_CHILD' && !treeCheckStrictly && !!treeCheckable,\n      valueEntities: valueEntities\n    };\n  }, [virtual, dropdownMatchSelectWidth, listHeight, listItemHeight, listItemScrollOffset, filteredTreeData, mergedFieldNames, onOptionSelect, treeExpandAction, treeTitleRender, onPopupScroll, maxCount, cachedDisplayValues.length, mergedShowCheckedStrategy, treeCheckStrictly, treeCheckable, valueEntities]);\n\n  // ======================= Legacy Context =======================\n  var legacyContext = React.useMemo(function () {\n    return {\n      checkable: mergedCheckable,\n      loadData: loadData,\n      treeLoadedKeys: treeLoadedKeys,\n      onTreeLoad: onTreeLoad,\n      checkedKeys: rawCheckedValues,\n      halfCheckedKeys: rawHalfCheckedValues,\n      treeDefaultExpandAll: treeDefaultExpandAll,\n      treeExpandedKeys: treeExpandedKeys,\n      treeDefaultExpandedKeys: treeDefaultExpandedKeys,\n      onTreeExpand: onTreeExpand,\n      treeIcon: treeIcon,\n      treeMotion: treeMotion,\n      showTreeIcon: showTreeIcon,\n      switcherIcon: switcherIcon,\n      treeLine: treeLine,\n      treeNodeFilterProp: treeNodeFilterProp,\n      keyEntities: keyEntities\n    };\n  }, [mergedCheckable, loadData, treeLoadedKeys, onTreeLoad, rawCheckedValues, rawHalfCheckedValues, treeDefaultExpandAll, treeExpandedKeys, treeDefaultExpandedKeys, onTreeExpand, treeIcon, treeMotion, showTreeIcon, switcherIcon, treeLine, treeNodeFilterProp, keyEntities]);\n\n  // =========================== Render ===========================\n  return /*#__PURE__*/React.createElement(TreeSelectContext.Provider, {\n    value: treeSelectContext\n  }, /*#__PURE__*/React.createElement(LegacyContext.Provider, {\n    value: legacyContext\n  }, /*#__PURE__*/React.createElement(BaseSelect, _extends({\n    ref: ref\n  }, restProps, {\n    // >>> MISC\n    id: mergedId,\n    prefixCls: prefixCls,\n    mode: mergedMultiple ? 'multiple' : undefined\n    // >>> Display Value\n    ,\n    displayValues: cachedDisplayValues,\n    onDisplayValuesChange: onDisplayValuesChange\n    // >>> Search\n    ,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch\n    // >>> Options\n    ,\n    OptionList: OptionList,\n    emptyOptions: !mergedTreeData.length,\n    onDropdownVisibleChange: onInternalDropdownVisibleChange,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth\n  }))));\n});\n\n// Assign name for Debug\nif (process.env.NODE_ENV !== 'production') {\n  TreeSelect.displayName = 'TreeSelect';\n}\nvar GenericTreeSelect = TreeSelect;\nGenericTreeSelect.TreeNode = TreeNode;\nGenericTreeSelect.SHOW_ALL = SHOW_ALL;\nGenericTreeSelect.SHOW_PARENT = SHOW_PARENT;\nGenericTreeSelect.SHOW_CHILD = SHOW_CHILD;\nexport default GenericTreeSelect;"],"names":["useCache","values","cacheRef","React.useRef","React.useMemo","valueLabels","valueLabelsCache","filledValues","item","value","label","mergedLabel","_objectSpread","useCheckedKeys","rawLabeledValues","rawHalfCheckedValues","treeConduction","keyEntities","extractValues","_ref","checkedKeys","halfCheckedKeys","missingValues","key","finalCheckedKeys","finalHalfCheckedKeys","conductResult","conductCheck","_toConsumableArray","toArray","fillFieldNames","fieldNames","children","isCheckDisabled","node","getAllKeys","treeData","keys","dig","list","isNil","val","useDataEntities","collection","convertDataToEntities","wrapper","entity","TreeNode","_excluded","convertChildrenToData","nodes","React.isValidElement","_ref$props","restProps","_objectWithoutProperties","data","childData","fillLegacyProps","dataNode","cloneNode","warning","fillAdditionalInfo","extra","triggerValue","checkedValues","showPosition","triggerNode","nodeList","generateMap","level","parentIncluded","option","index","pos","included","React.createElement","child","checkedNode","_ref2","_ref3","val1","val2","index1","index2","_ref4","useFilterTreeData","searchValue","options","treeNodeFilterProp","filterTreeNode","fieldChildren","filterOptionFunc","_","filterTreeNodes","keepAll","filtered","isMatch","filteredChildren","_defineProperty","useRefFunc","callback","funcRef","cacheFn","React.useCallback","buildTreeStructure","config","id","pId","rootPId","nodeMap","rootNodes","nodeKey","clonedNode","parentKey","parent","useTreeData","simpleMode","_typeof","LegacySelectContext","React.createContext","TreeSelectContext","HIDDEN_STYLE","OptionList","ref","_useBaseProps","useBaseProps","prefixCls","multiple","toggleOpen","open","notFoundContent","_React$useContext","React.useContext","virtual","listHeight","listItemHeight","listItemScrollOffset","onSelect","dropdownMatchSelectWidth","treeExpandAction","treeTitleRender","onPopupScroll","leftMaxCount","leafCountOnly","valueEntities","_React$useContext2","LegacyContext","checkable","treeExpandedKeys","treeDefaultExpandAll","treeDefaultExpandedKeys","onTreeExpand","treeIcon","showTreeIcon","switcherIcon","treeLine","loadData","treeLoadedKeys","treeMotion","onTreeLoad","treeRef","memoTreeData","useMemo","prev","next","mergedCheckedKeys","React.useEffect","_treeRef$current","onListMouseDown","event","onInternalSelect","__","info","_React$useState","React.useState","_React$useState2","_slicedToArray","expandedKeys","setExpandedKeys","_React$useState3","_React$useState4","searchExpandedKeys","setSearchExpandedKeys","mergedExpandedKeys","onInternalExpand","lowerSearchValue","treeNode","_React$useState5","_React$useState6","disabledCache","setDisabledCache","getDisabledWithCache","isLeaf","checkableChildren","childTreeNode","checkableChildrenCount","nodeDisabled","useEvent","nodeValue","getFirstMatchingNode","_iterator","_createForOfIteratorHelper","_step","matchInChildren","err","_React$useState7","_React$useState8","activeKey","setActiveKey","activeEntity","nextActiveKey","getFirstNode","firstNode","React.useImperativeHandle","_treeRef$current2","_treeRef$current3","which","KeyCode","isNodeDisabled","selectable","disabled","hasLoadDataFn","preSearchValue","_ref5","nextSearchValue","nextExcludeSearchExpandedKeys","syncLoadData","treeProps","UnstableContext","Tree","_extends","RefOptionList","React.forwardRef","SHOW_ALL","SHOW_PARENT","SHOW_CHILD","formatStrategyValues","strategy","valueSet","isRawValue","TreeSelect","props","_props$prefixCls","defaultValue","onChange","onDeselect","inputValue","onSearch","_props$autoClearSearc","autoClearSearchValue","_props$treeNodeFilter","showCheckedStrategy","treeNodeLabelProp","treeCheckable","treeCheckStrictly","labelInValue","maxCount","treeDataSimpleMode","_props$listHeight","_props$listItemHeight","_props$listItemScroll","onDropdownVisibleChange","_props$dropdownMatchS","mergedId","useId","mergedCheckable","mergedLabelInValue","mergedMultiple","_useMergedState","useMergedState","_useMergedState2","internalValue","setInternalValue","mergedShowCheckedStrategy","mergedFieldNames","_useMergedState3","search","_useMergedState4","mergedSearchValue","setSearchValue","onInternalSearch","searchText","mergedTreeData","_useDataEntities","splitRawValues","newRawValues","missingRawValues","existRawValues","filteredTreeData","getLabel","titleList","i","title","toLabeledValues","draftValues","convert2LabelValues","rawLabel","rawValue","rawHalfChecked","rawDisabled","_rawLabel","labelInValueItem","labeledItem","rawMixedLabeledValues","_React$useMemo","fullCheckValues","halfCheckValues","_React$useMemo2","rawHalfLabeledValues","rawValues","_useCheckedKeys","_useCheckedKeys2","rawCheckedValues","displayValues","displayKeys","_keyEntities$key$node","_keyEntities$key","labeledValues","targetItem","rawDisplayValues","firstVal","_item$label","_useCache","_useCache2","cachedDisplayValues","mergedMaxCount","triggerChange","source","formattedKeyList","eventValues","selected","returnRawValues","halfValues","returnLabeledValues","additionalInfo","returnValues","onOptionSelect","selectedKey","_node$mergedFieldName","selectedValue","v","_splitRawValues","keyList","_conductCheck","_conductCheck2","onInternalDropdownVisibleChange","legacyParam","onDisplayValuesChange","newValues","treeSelectContext","legacyContext","BaseSelect","GenericTreeSelect"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}