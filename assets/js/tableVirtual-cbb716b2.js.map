{"version":3,"file":"tableVirtual-cbb716b2.js","sources":["../../../src/views/list/basicTable/components/tableVirtual.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Button, Segmented, Space, Switch, Table, Typography } from 'antd'\r\nimport type { TableProps } from 'antd'\r\n\r\ninterface RecordType {\r\n\tid: number\r\n\tfirstName: string\r\n\tlastName: string\r\n\tage: number\r\n\taddress1: string\r\n\taddress2: string\r\n\taddress3: string\r\n}\r\n\r\nconst fixedColumns: TableProps<RecordType>['columns'] = [\r\n\t{\r\n\t\ttitle: 'ID',\r\n\t\tdataIndex: 'id',\r\n\t\twidth: 100,\r\n\t\tfixed: 'left',\r\n\t},\r\n\t{\r\n\t\ttitle: 'FistName',\r\n\t\tdataIndex: 'firstName',\r\n\t\twidth: 120,\r\n\t\tfixed: 'left',\r\n\t},\r\n\t{\r\n\t\ttitle: 'LastName',\r\n\t\tdataIndex: 'lastName',\r\n\t\twidth: 120,\r\n\t\tfixed: 'left',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Group',\r\n\t\twidth: 120,\r\n\t\trender: (_, record) => `Group ${Math.floor(record.id / 4)}`,\r\n\t\tonCell: record => ({\r\n\t\t\trowSpan: record.id % 4 === 0 ? 4 : 0,\r\n\t\t}),\r\n\t},\r\n\t{\r\n\t\ttitle: 'Age',\r\n\t\tdataIndex: 'age',\r\n\t\twidth: 100,\r\n\t\tonCell: record => ({\r\n\t\t\tcolSpan: record.id % 4 === 0 ? 2 : 1,\r\n\t\t}),\r\n\t},\r\n\t{\r\n\t\ttitle: 'Address 1',\r\n\t\tdataIndex: 'address1',\r\n\t\tonCell: record => ({\r\n\t\t\tcolSpan: record.id % 4 === 0 ? 0 : 1,\r\n\t\t}),\r\n\t},\r\n\t{\r\n\t\ttitle: 'Address 2',\r\n\t\tdataIndex: 'address2',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Address 3',\r\n\t\tdataIndex: 'address3',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Action',\r\n\t\twidth: 150,\r\n\t\tfixed: 'right',\r\n\t\trender: () => (\r\n\t\t\t<Space>\r\n\t\t\t\t<Typography.Link>Action1</Typography.Link>\r\n\t\t\t\t<Typography.Link>Action2</Typography.Link>\r\n\t\t\t</Space>\r\n\t\t),\r\n\t},\r\n]\r\n\r\nconst columns: TableProps<RecordType>['columns'] = [\r\n\t{\r\n\t\ttitle: 'ID',\r\n\t\tdataIndex: 'id',\r\n\t\twidth: 100,\r\n\t},\r\n\t{\r\n\t\ttitle: 'FistName',\r\n\t\tdataIndex: 'firstName',\r\n\t\twidth: 120,\r\n\t},\r\n\t{\r\n\t\ttitle: 'LastName',\r\n\t\tdataIndex: 'lastName',\r\n\t\twidth: 120,\r\n\t},\r\n]\r\n\r\nconst getData = (count: number) => {\r\n\tconst data: RecordType[] = new Array(count).fill(null).map((_, index) => ({\r\n\t\tid: index,\r\n\t\tfirstName: `First_${index.toString(16)}`,\r\n\t\tlastName: `Last_${index.toString(16)}`,\r\n\t\tage: 25 + (index % 10),\r\n\t\taddress1: `New York No. ${index} Lake Park`,\r\n\t\taddress2: `London No. ${index} Lake Park`,\r\n\t\taddress3: `Sydney No. ${index} Lake Park`,\r\n\t}))\r\n\r\n\treturn data\r\n}\r\n\r\nconst App: any = ({ isShow }: any) => {\r\n\tconst [fixed, setFixed] = React.useState(true)\r\n\tconst [bordered, setBordered] = React.useState(true)\r\n\tconst [expanded, setExpanded] = React.useState(false)\r\n\tconst [empty, setEmpty] = React.useState(false)\r\n\tconst [count, setCount] = React.useState(10000)\r\n\r\n\tconst tblRef: Parameters<typeof Table>[0]['ref'] = React.useRef(null)\r\n\tconst data = React.useMemo(() => getData(count), [count])\r\n\r\n\tconst mergedColumns = React.useMemo<typeof fixedColumns>(() => {\r\n\t\tif (!fixed) {\r\n\t\t\treturn columns\r\n\t\t}\r\n\r\n\t\tif (!expanded) {\r\n\t\t\treturn fixedColumns\r\n\t\t}\r\n\r\n\t\treturn fixedColumns.map(col => ({ ...col, onCell: undefined }))\r\n\t}, [expanded, fixed])\r\n\r\n\tconst expandableProps = React.useMemo<TableProps<RecordType>['expandable']>(() => {\r\n\t\tif (!expanded) {\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tcolumnWidth: 48,\r\n\t\t\texpandedRowRender: record => <p style={{ margin: 0 }}>ðŸŽ‰ Expanded {record.address1}</p>,\r\n\t\t\trowExpandable: record => record.id % 2 === 0,\r\n\t\t}\r\n\t}, [expanded])\r\n\r\n\treturn (\r\n\t\tisShow && (\r\n\t\t\t<div style={{ padding: 64 }}>\r\n\t\t\t\t<Space direction=\"vertical\" style={{ width: '100%' }}>\r\n\t\t\t\t\t<Space>\r\n\t\t\t\t\t\t<Switch checked={bordered} onChange={() => setBordered(!bordered)} checkedChildren=\"Bordered\" unCheckedChildren=\"Bordered\" />\r\n\t\t\t\t\t\t<Switch checked={fixed} onChange={() => setFixed(!fixed)} checkedChildren=\"Fixed\" unCheckedChildren=\"Fixed\" />\r\n\t\t\t\t\t\t<Switch checked={expanded} onChange={() => setExpanded(!expanded)} checkedChildren=\"Expandable\" unCheckedChildren=\"Expandable\" />\r\n\t\t\t\t\t\t<Switch checked={empty} onChange={() => setEmpty(!empty)} checkedChildren=\"Empty\" unCheckedChildren=\"Empty\" />\r\n\t\t\t\t\t\t<Segmented\r\n\t\t\t\t\t\t\tvalue={count}\r\n\t\t\t\t\t\t\tonChange={(value: any) => setCount(value)}\r\n\t\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: 'None',\r\n\t\t\t\t\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: 'Less',\r\n\t\t\t\t\t\t\t\t\tvalue: 4,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: 'Lot',\r\n\t\t\t\t\t\t\t\t\tvalue: 10000,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t{data.length >= 999 && (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\ttblRef.current?.scrollTo({ index: 999 })\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tScroll To index 999\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Space>\r\n\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tbordered={bordered}\r\n\t\t\t\t\t\tvirtual\r\n\t\t\t\t\t\tcolumns={mergedColumns}\r\n\t\t\t\t\t\tscroll={{ x: 2000, y: 400 }}\r\n\t\t\t\t\t\trowKey=\"id\"\r\n\t\t\t\t\t\tdataSource={empty ? [] : data}\r\n\t\t\t\t\t\tpagination={false}\r\n\t\t\t\t\t\tref={tblRef}\r\n\t\t\t\t\t\trowSelection={\r\n\t\t\t\t\t\t\texpanded\r\n\t\t\t\t\t\t\t\t? undefined\r\n\t\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\t\ttype: 'radio',\r\n\t\t\t\t\t\t\t\t\t\tcolumnWidth: 48,\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\texpandable={expandableProps}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Space>\r\n\t\t\t</div>\r\n\t\t)\r\n\t)\r\n}\r\n\r\nexport default App\r\n"],"names":["fixedColumns","_","record","jsxs","Space","jsx","Typography","columns","getData","count","index","App","isShow","fixed","setFixed","React","bordered","setBordered","expanded","setExpanded","empty","setEmpty","setCount","tblRef","data","mergedColumns","col","expandableProps","Switch","Segmented","value","Button","_a","Table"],"mappings":"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"}