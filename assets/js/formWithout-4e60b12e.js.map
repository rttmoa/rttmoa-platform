{"version":3,"file":"formWithout-4e60b12e.js","sources":["../../../src/views/form/basicForm/components/formWithout.tsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport React, { useState } from \"react\";\r\nimport { Form, InputNumber } from \"antd\";\r\n\r\ntype ValidateStatus = Parameters<typeof Form.Item>[0][\"validateStatus\"];\r\n\r\nconst validatePrimeNumber = (number: number): { validateStatus: ValidateStatus; errorMsg: string | null } => {\r\n  if (number === 11) {\r\n    return {\r\n      validateStatus: \"success\",\r\n      errorMsg: null\r\n    };\r\n  }\r\n  return {\r\n    validateStatus: \"error\",\r\n    errorMsg: \"The prime between 8 and 12 is 11!\"\r\n  };\r\n};\r\n\r\nconst formItemLayout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 12 }\r\n};\r\n\r\nconst tips = \"A prime is a natural number greater than 1 that has no positive divisors other than 1 and itself.\";\r\n\r\nconst App: React.FC<{ value: string }> = ({ value: PropsValue }) => {\r\n  const [number, setNumber] = useState<{\r\n    value: number;\r\n    validateStatus?: ValidateStatus;\r\n    errorMsg?: string | null;\r\n  }>({ value: 11 });\r\n\r\n  const onNumberChange = (value: any) => {\r\n    setNumber({\r\n      ...validatePrimeNumber(value),\r\n      value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {PropsValue == \"FormWithout\" && (\r\n        <>\r\n          <Form style={{ maxWidth: 600 }}>\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label=\"Prime between 8 & 12\"\r\n              validateStatus={number.validateStatus} // \"\" | \"success\" | \"warning\" | \"error\" | \"validating\" | undefined\r\n              help={number.errorMsg || tips} // React.ReactNode\r\n            >\r\n              <InputNumber min={8} max={12} value={number.value} onChange={onNumberChange} />\r\n            </Form.Item>\r\n          </Form>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"names":["validatePrimeNumber","number","formItemLayout","tips","App","PropsValue","setNumber","useState","onNumberChange","value","jsx","Fragment","Form","InputNumber"],"mappings":"+DAMA,MAAMA,EAAuBC,GACvBA,IAAW,GACN,CACL,eAAgB,UAChB,SAAU,IAAA,EAGP,CACL,eAAgB,QAChB,SAAU,mCAAA,EAIRC,EAAiB,CACrB,SAAU,CAAE,KAAM,CAAE,EACpB,WAAY,CAAE,KAAM,EAAG,CACzB,EAEMC,EAAO,oGAEPC,EAAmC,CAAC,CAAE,MAAOC,KAAiB,CAC5D,KAAA,CAACJ,EAAQK,CAAS,EAAIC,WAIzB,CAAE,MAAO,GAAI,EAEVC,EAAkBC,GAAe,CAC3BH,EAAA,CACR,GAAGN,EAAoBS,CAAK,EAC5B,MAAAA,CAAA,CACD,CAAA,EAID,OAAAC,EAAAA,IAAAC,EAAAA,SAAA,CACG,SAAcN,GAAA,eAEXK,EAAA,IAAAC,WAAA,CAAA,SAAAD,EAAA,IAACE,GAAK,MAAO,CAAE,SAAU,GAAA,EACvB,SAAAF,EAAA,IAACE,EAAK,KAAL,CACE,GAAGV,EACJ,MAAM,uBACN,eAAgBD,EAAO,eACvB,KAAMA,EAAO,UAAYE,EAEzB,SAAAO,EAAAA,IAACG,EAAY,CAAA,IAAK,EAAG,IAAK,GAAI,MAAOZ,EAAO,MAAO,SAAUO,CAAgB,CAAA,CAAA,CAAA,EAEjF,EACF,CAEJ,CAAA,CAEJ"}