{"version":3,"file":"index-cd00096d.js","sources":["../../../src/hooks/useClipboard.ts","../../../src/views/feat/clipboard/index.tsx"],"sourcesContent":["import { useRef, useState } from 'react'\r\n\r\ninterface ClipboardFunctions {\r\n\tcopyToClipboard: (text: string) => void\r\n}\r\ntype IsCopiedState = boolean\r\ntype TextareaRef = React.RefObject<HTMLTextAreaElement>\r\n\r\ntype ClipboardHook = ClipboardFunctions & {\r\n\tisCopied: IsCopiedState\r\n\ttextareaRef: TextareaRef\r\n}\r\n\r\n// todoÔºöuse Hooks ËÆæÁΩÆÂâ™ÂàáÁâà\r\n// todoÔºöÂ∏∏Áî®ÂäüËÉΩÔºö Ââ™ÂàáÊùø\r\nconst useClipboard = (): ClipboardHook => {\r\n\tconst textareaRef = useRef<HTMLTextAreaElement>(null)\r\n\tconst [isCopied, setIsCopied] = useState<IsCopiedState>(false)\r\n\r\n\tconst copyToClipboard = async (text: string) => {\r\n\t\ttry {\r\n\t\t\tawait navigator.clipboard.writeText(text)\r\n\t\t\tsetIsCopied(true)\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('Â§çÂà∂Êìç‰Ωú‰∏çË¢´ÊîØÊåÅÊàñÂ§±Ë¥•: ', err)\r\n\t\t}\r\n\t}\r\n\r\n\treturn { copyToClipboard, isCopied, textareaRef }\r\n}\r\n\r\nexport default useClipboard\r\n","import { useState } from 'react'\r\nimport { Alert, Button, Card, Divider, Input, Space, Typography } from 'antd'\r\nimport { SmileFilled, SmileOutlined } from '@ant-design/icons'\r\nimport { message } from '@/hooks/useMessage'\r\nimport useClipboard from '@/hooks/useClipboard'\r\n\r\nconst { Paragraph, Link } = Typography\r\n\r\nconst Clipboard: React.FC = () => {\r\n\tconst { copyToClipboard, isCopied } = useClipboard()\r\n\r\n\tconst [value, setValue] = useState('')\r\n\r\n\tconst handleCopy = () => {\r\n\t\tif (!value) return message.warning('ËØ∑ËæìÂÖ•Ë¶Å Copy ÁöÑÂÜÖÂÆπ ÔºÅ')\r\n\t\tcopyToClipboard(value)\r\n\t\tmessage.success('Copy Success ÔºÅ')\r\n\t}\r\n\r\n\tconst antMessage = (\r\n\t\t<span>\r\n\t\t\tAnt Design Paragraph copyable Ôºö\r\n\t\t\t<Link href=\"https://ant.design/components/typography-cn#components-typography-demo-interactive\" target=\"_blank\">\r\n\t\t\t\tParagraph ÁªÑ‰ª∂ËØ¶ÊÉÖ\r\n\t\t\t</Link>\r\n\t\t</span>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Alert message=\"useClipboard hook üåà\" type=\"info\" showIcon className=\"mb20\" />\r\n\r\n\t\t\t<Space.Compact style={{ width: '350px' }}>\r\n\t\t\t\t<Input placeholder=\"Please enter content\" value={value} onChange={e => setValue(e.target.value)} />\r\n\t\t\t\t<Button type=\"primary\" onClick={handleCopy}>\r\n\t\t\t\t\tCopy\r\n\t\t\t\t</Button>\r\n\t\t\t</Space.Compact>\r\n\t\t\t<span className=\"ml10\"> Copy Status: {isCopied + ''}</span>\r\n\r\n\t\t\t<Divider />\r\n\r\n\t\t\t<Alert message={antMessage} type=\"info\" showIcon className=\"mb20\" />\r\n\r\n\t\t\t<Paragraph copyable>This is a copyable text.</Paragraph>\r\n\t\t\t<Paragraph copyable={{ text: 'Hello, Hooks Admin!' }}>Replace copy text.</Paragraph>\r\n\t\t\t<Paragraph\r\n\t\t\t\tcopyable={{\r\n\t\t\t\t\ticon: [<SmileOutlined key=\"copy-icon\" />, <SmileFilled key=\"copied-icon\" />],\r\n\t\t\t\t\ttooltips: ['click here', 'you clicked!!'],\r\n\t\t\t\t}}>\r\n\t\t\t\tCustom Copy icon and replace tooltips text.\r\n\t\t\t</Paragraph>\r\n\t\t\t<Paragraph copyable={{ tooltips: false }}>Hide Copy tooltips.</Paragraph>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default Clipboard\r\n"],"names":["useClipboard","textareaRef","useRef","isCopied","setIsCopied","useState","copyToClipboard","text","navigator","clipboard","writeText","err","console","error","Paragraph","Link","Typography","Clipboard","value","setValue","handleCopy","message","antMessage","Card","jsx","Alert","jsxs","Space","Input","e","Button","Divider","SmileOutlined","SmileFilled"],"mappings":"0PAeA,MAAMA,EAAeA,IAAqB,CACnC,MAAAC,EAAcC,SAA4B,IAAI,EAC9C,CAACC,EAAUC,CAAW,EAAIC,WAAwB,EAAK,EAWtD,MAAA,CAAEC,gBATe,MAAOC,GAAiB,CAC3C,GAAA,CACG,MAAAC,UAAUC,UAAUC,UAAUH,CAAI,EACxCH,EAAY,EAAI,QACRO,EAAK,CACLC,QAAAC,MAAM,gBAAiBF,CAAG,CACnC,GAGyBR,SAAAA,EAAUF,YAAAA,EACrC,ECvBM,CAAE,UAAAa,EAAW,KAAAC,CAAS,EAAAC,EAEtBC,EAAsB,IAAM,CACjC,KAAM,CAAE,gBAAAX,EAAiB,SAAAH,CAAS,EAAIH,EAAa,EAE7C,CAACkB,EAAOC,CAAQ,EAAId,WAAS,EAAE,EAE/Be,EAAa,IAAM,CACxB,GAAI,CAACF,EAAc,OAAAG,EAAQ,QAAQ,iBAAiB,EACpDf,EAAgBY,CAAK,EACrBG,EAAQ,QAAQ,gBAAgB,CAAA,EAG3BC,SACJ,OAAK,CAAA,SAAA,CAAA,wCAEJP,EAAK,CAAA,KAAK,qFAAqF,OAAO,SAAS,SAEhH,iBAAA,CACD,CAAA,CAAA,EAGD,cACEQ,EACA,CAAA,SAAA,CAACC,EAAAA,IAAAC,EAAA,CAAM,QAAQ,uBAAuB,KAAK,OAAO,SAAQ,GAAC,UAAU,MAAO,CAAA,EAE5EC,OAACC,EAAM,QAAN,CAAc,MAAO,CAAE,MAAO,OAC9B,EAAA,SAAA,CAACH,EAAAA,IAAAI,EAAA,CAAM,YAAY,uBAAuB,MAAAV,EAAc,YAAeC,EAASU,EAAE,OAAO,KAAK,CAAG,CAAA,QAChGC,EAAO,CAAA,KAAK,UAAU,QAASV,EAAY,SAE5C,OAAA,CAAA,EACD,EACAM,EAAAA,KAAC,OAAK,CAAA,UAAU,OAAO,SAAA,CAAA,iBAAevB,EAAW,EAAA,EAAG,QAEnD4B,EAAQ,EAAA,EAETP,EAAAA,IAACC,GAAM,QAASH,EAAY,KAAK,OAAO,SAAQ,GAAC,UAAU,MAAO,CAAA,EAEjEE,EAAA,IAAAV,EAAA,CAAU,SAAQ,GAAC,SAAwB,2BAAA,QAC3CA,EAAU,CAAA,SAAU,CAAE,KAAM,uBAAyB,SAAkB,qBAAA,EACxEU,EAAA,IAACV,EAAA,CACA,SAAU,CACT,KAAM,CAAEU,EAAAA,IAAAQ,EAAA,GAAkB,WAAY,EAAIR,EAAAA,IAACS,EAAgB,GAAA,aAAc,CAAE,EAC3E,SAAU,CAAC,aAAc,eAAe,CACzC,EAAG,SAAA,6CAAA,CAEJ,QACCnB,EAAU,CAAA,SAAU,CAAE,SAAU,IAAS,SAAmB,sBAAA,CAC9D,CAAA,CAAA,CAEF"}