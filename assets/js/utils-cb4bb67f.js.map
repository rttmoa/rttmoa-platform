{"version":3,"file":"utils-cb4bb67f.js","sources":["../../../src/utils/public.ts","../../../src/views/feat/demo/components/utils.tsx"],"sourcesContent":["export const waitTime = (time = 100) => {\n  return new Promise(reslove => {\n    setTimeout(() => {\n      reslove(true);\n    }, time);\n  });\n};\n\nexport const suffix = (object = {}) => {\n  const timestamp = Math.round(new Date().getTime());\n  return {\n    ...object,\n    timestamp\n  };\n};\n\nexport const flattenRoutes: any = (arr = []) =>\n  arr.reduce((prev: any[], item: { children: any }) => {\n    if (Array.isArray(item.children)) {\n      prev.push(item);\n    }\n    return prev.concat(Array.isArray(item.children) ? flattenRoutes(item.children) : item);\n  }, []);\n\nexport const getLocalStorage = (key: string) => {\n  const value = window.localStorage.getItem(key) as any;\n  try {\n    return JSON.parse(value);\n  } catch (error) {\n    return value;\n  }\n};\nexport const setLocalStorage = (key: string, value: any) => {\n  window.localStorage.setItem(key, JSON.stringify(value));\n};\nexport const removeLocalStorage = (key: string) => {\n  window.localStorage.removeItem(key);\n};\nexport const clearLocalStorage = () => {\n  window.localStorage.clear();\n};\n\nexport const getEnv = () => {\n  let env;\n  if (typeof process !== \"undefined\" && Object.prototype.toString.call(process) === \"[object process]\") {\n    env = \"NODE\";\n  }\n  if (typeof XMLHttpRequest !== \"undefined\") {\n    env = \"BROWSER\";\n  }\n  return env;\n};\nexport const customizeTimer: any = {\n  intervalTimer: null,\n  timeoutTimer: null,\n  setTimeout(cb: () => void, interval: number) {\n    const { now } = Date;\n    const stime = now();\n    let etime = stime;\n    const loop = () => {\n      this.timeoutTimer = requestAnimationFrame(loop);\n      etime = now();\n      if (etime - stime >= interval) {\n        cb();\n        cancelAnimationFrame(this.timeoutTimer);\n      }\n    };\n    this.timeoutTimer = requestAnimationFrame(loop);\n    return this.timeoutTimer;\n  },\n  clearTimeout() {\n    cancelAnimationFrame(this.timeoutTimer);\n  },\n  setInterval(cb: () => void, interval: number) {\n    const { now } = Date;\n    let stime = now();\n    let etime = stime;\n    const loop = () => {\n      this.intervalTimer = requestAnimationFrame(loop);\n      etime = now();\n      if (etime - stime >= interval) {\n        stime = now();\n        etime = stime;\n        cb();\n      }\n    };\n    this.intervalTimer = requestAnimationFrame(loop);\n    return this.intervalTimer;\n  },\n  clearInterval() {\n    cancelAnimationFrame(this.intervalTimer);\n  }\n};\n\n/*\n ** 判断用户是否离开当前页面\n */\nexport const checkIsLocalPage = () => {\n  document.addEventListener(\"visibilitychange\", () => {\n    if (document.visibilityState === \"hidden\") {\n      return false;\n    }\n    if (document.visibilityState === \"visible\") {\n      return true;\n    }\n    window.addEventListener(\n      \"pagehide\",\n      event => {\n        if (event.persisted) {\n          /* the page isn't being discarded, so it can be reused later */\n        }\n      },\n      false\n    );\n  });\n};\n\n// Generate Random Hex\nexport const randomHex = () =>\n  `#${Math.floor(Math.random() * 0xffffff)\n    .toString(16)\n    .padEnd(6, \"0\")}`;\n\n// Clear All Cookies\nexport const clearCookies = document.cookie\n  .split(\";\")\n  .forEach(\n    cookie => (document.cookie = cookie.replace(/^ +/, \"\").replace(/[=].*/, `=;expires=${new Date(0).toUTCString()};path=/`))\n  );\n\n// Find the number of days between two days\nexport const dayDif = (date1: Date, date2: Date) => Math.ceil(Math.abs(date1.getTime() - date2.getTime()) / 86400000);\n\n// Capitalize a String\nexport const capitalize = (str: string) => str.charAt(0).toUpperCase() + str.slice(1);\n\n// Check if the array is empty\nexport const isNotEmpty = (arr: [] | any) => Array.isArray(arr) && arr.length > 0;\n\n// Detect Dark Mode\nexport const isDarkMode = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\nexport const shuffleArr = (arr: any[]) => arr.sort(() => 0.5 - Math.random());\nexport const sleep = (time: number | undefined) => new Promise<void>(resolve => setTimeout(() => resolve(), time));\nexport const ThousandNum = (num: { toString: () => string }) => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\nexport const RandomId = (len: number | undefined) => Math.random().toString(36).substring(3, len);\nexport const RoundNum = (num: number, decimal: number) => Math.round(num * 10 ** decimal) / 10 ** decimal;\nexport const randomNum = (min: number, max: number) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const isEmptyArray = (arr: string | any[]) => Array.isArray(arr) && !arr.length;\nexport const randomItem = (arr: string | any[]) => arr[Math.floor(Math.random() * arr.length)];\nexport const asyncTo = (promise: Promise<any>) => promise.then((data: any) => [null, data]).catch((err: any) => [err]);\nexport const hasFocus = (element: Element | null) => element === document.activeElement;\nexport const isEqual = (a: any, b: any) => JSON.stringify(a) === JSON.stringify(b);\nexport const randomString = () => Math.random().toString(36).slice(2);\nexport const toCamelCase = (str: string) => str.trim().replace(/[-_\\s]+(.)?/g, (_: any, c: string) => (c ? c.toUpperCase() : \"\"));\nexport const random = (min: number, max: number) => Math.floor(Math.random() * (max - min + 1) + min);\nexport const randomColor = () => `#${Math.random().toString(16).slice(2, 8).padEnd(6, \"0\")}`;\nexport const pause = (millions: number | undefined) => new Promise(resolve => setTimeout(resolve, millions));\nexport const camelizeCamelCase = (str: string) =>\n  str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (letter: string, index: number) =>\n      index === 0 ? letter.toLowerCase() : letter.toUpperCase()\n    )\n    .replace(/\\s+/g, \"\");\n\nexport const promiseWithTimeout = (promise: any, timeout: number) => {\n  const timeoutPromise = new Promise(resolve => setTimeout(() => resolve(\"Time Out!\"), timeout));\n  return Promise.race([timeoutPromise, promise]);\n};\nexport const copyTextToClipboard = async (textToCopy: string) => {\n  try {\n    if (navigator?.clipboard?.writeText) {\n      await navigator.clipboard.writeText(textToCopy);\n      console.log(\"已成功复制到剪贴板\");\n    }\n  } catch (err: any) {\n    console.error(`复制到剪贴板失败:${err.message}`);\n  }\n};\n\nexport const getRandomId = () => {\n  let text = \"\";\n  const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0; i < 32; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n};\n\n// https://github.com/Azure/fetch-event-source\n// https://github.com/mpetazzoni/sse.js\n// https://nodejs.org/api/http.html#httprequesturl-options-callback\nexport const oneApiChat = (chatList: any, token: any, signal: any) =>\n  fetch(\"https://api.openai.com/v1/chat/completions\", {\n    method: \"POST\",\n    signal,\n    headers: {\n      Authorization: token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      model: \"gpt-3.5-turbo\",\n      messages: chatList,\n      stream: true\n    })\n  });\nexport const getCurrentDate = () => {\n  const date = new Date();\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n  return `${year}-${month}-${day}`;\n};\nexport const exportJsonData = (data: string) => {\n  const date = getCurrentDate();\n  const jsonString = JSON.stringify(JSON.parse(data), null, 2);\n  const blob = new Blob([jsonString], { type: \"application/json\" });\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement(\"a\");\n  link.href = url;\n  link.download = `chat-store_${date}.json`;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\nexport const saveHtmlToPng = async (eleHtml: HTMLElement | null, successFun: () => void, errorFun: (arg0: any) => void) => {\n  try {\n    const ele = eleHtml ?? document.getElementById(\"image-wrapper\");\n    // 需要导入模块，先拿变量代替\n    // import html2canvas from 'html2canvas'\n    const html2canvas: any = () => {};\n    const canvas = await html2canvas(ele, {\n      useCORS: true\n    });\n    const imgUrl = canvas.toDataURL(\"image/png\");\n    const tempLink = document.createElement(\"a\");\n    tempLink.style.display = \"none\";\n    tempLink.href = imgUrl;\n    tempLink.setAttribute(\"download\", \"chat-shot.png\");\n    if (typeof tempLink.download === \"undefined\") tempLink.setAttribute(\"target\", \"_blank\");\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(imgUrl);\n    if (successFun) successFun();\n    Promise.resolve();\n  } catch (error: any) {\n    if (errorFun) errorFun(error.message);\n  }\n};\nexport const readFromFile = () =>\n  // onClick={() => importFromFile()}\n  // readFromFile().then((content) => { JSON.parse(content)})\n\n  new Promise((res, rej) => {\n    const fileInput = document.createElement(\"input\");\n    fileInput.type = \"file\";\n    fileInput.accept = \"application/json\";\n\n    fileInput.onchange = (event: any) => {\n      const file = event.target.files[0];\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        res(e.target.result);\n      };\n      fileReader.onerror = e => rej(e);\n      fileReader.readAsText(file);\n    };\n\n    fileInput.click();\n  });\n","/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable prettier/prettier */\r\nimport React from \"react\";\r\n\r\nimport * as uts from \"@/utils/is\";\r\nimport { randomHex } from \"@/utils/public\";\r\n\r\nexport default function Utils() {\r\n  console.log(\"========  Utils IS ========\");\r\n  // console.log(uts.isFunction(() => {}), uts.isFunction(123));\r\n  // console.log(uts.isDef(undefined), uts.isDef(null));\r\n  // console.log(uts.isUnDef(undefined), uts.isUnDef(null));\r\n  // console.log(uts.isObject({}), uts.isObject(null));\r\n  // console.log(\r\n  //   // uts.isPromise( Promise.resolve(1) )\r\n  //   uts.isElement( document.createElement(\"a\") )\r\n  // );\r\n  // console.log(!!document.createElement(\"a\").tagName)\r\n  console.log(randomHex());\r\n\r\n  return (\r\n    <>\r\n      <b>Utils</b>\r\n    </>\r\n  );\r\n}\r\n"],"names":["randomHex","Math","floor","random","toString","padEnd","document","cookie","split","forEach","replace","Date","toUTCString","window","matchMedia","matches","Utils","jsx","Fragment"],"mappings":"wCAsHO,MAAMA,EAAYA,IACvB,IAAIC,KAAKC,MAAMD,KAAKE,OAAO,EAAI,QAAQ,EACpCC,SAAS,EAAE,EACXC,OAAO,EAAG,GAAG,CAAC,GAGSC,SAASC,OAClCC,MAAM,GAAG,EACTC,WACYH,SAASC,OAASA,EAAOG,QAAQ,MAAO,EAAE,EAAEA,QAAQ,qBAA0B,IAAAC,KAAK,CAAC,EAAEC,aAAsB,SAAA,CACzH,EAYwBC,OAAOC,WAAW,8BAA8B,EAAEC,QCrI5E,SAAwBC,GAAQ,CAWtB,OAAIhB,IAIRiB,MAAAC,EAAAA,SAAA,CAAA,SAAAD,EAAA,IAAC,IAAE,CAAA,SAAA,QAAK,CACV,CAAA,CAEJ"}