{"version":3,"file":"tableFilterSort-72728826.js","sources":["../../../src/views/list/basicTable/components/tableFilterSort.tsx"],"sourcesContent":["import React from \"react\";\nimport { Table } from \"antd\";\nimport type { TableColumnsType, TableProps } from \"antd\";\n\ninterface DataType {\n  key: React.Key;\n  name: string;\n  age: number;\n  address: string;\n}\n\nconst columns: TableColumnsType<DataType> = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    filters: [\n      {\n        text: \"Joe\",\n        value: \"Joe\"\n      },\n      {\n        text: \"Jim\",\n        value: \"Jim\"\n      },\n      {\n        text: \"Submenu\",\n        value: \"Submenu\",\n        children: [\n          {\n            text: \"Green\",\n            value: \"Green\"\n          },\n          {\n            text: \"Black\",\n            value: \"Black\"\n          }\n        ]\n      }\n    ],\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n    onFilter: (value: any, record) => record.name.indexOf(value) === 0,\n    sorter: (a, b) => a.name.length - b.name.length,\n    sortDirections: [\"descend\"]\n  },\n  {\n    title: \"Age\",\n    dataIndex: \"age\",\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => a.age - b.age\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    filters: [\n      {\n        text: \"London\",\n        value: \"London\"\n      },\n      {\n        text: \"New York\",\n        value: \"New York\"\n      }\n    ],\n    onFilter: (value: any, record) => record.address.indexOf(value) === 0\n  }\n];\n\nconst data = [\n  {\n    key: \"1\",\n    name: \"John Brown\",\n    age: 32,\n    address: \"New York No. 1 Lake Park\"\n  },\n  {\n    key: \"2\",\n    name: \"Jim Green\",\n    age: 42,\n    address: \"London No. 1 Lake Park\"\n  },\n  {\n    key: \"3\",\n    name: \"Joe Black\",\n    age: 32,\n    address: \"Sydney No. 1 Lake Park\"\n  },\n  {\n    key: \"4\",\n    name: \"Jim Red\",\n    age: 32,\n    address: \"London No. 2 Lake Park\"\n  }\n];\n\nconst onChange: TableProps<DataType>[\"onChange\"] = (pagination, filters, sorter, extra) => {\n  console.log(\"params\", pagination, filters, sorter, extra);\n};\n\n// ?对某一列数据进行排序，通过指定列的 sorter 函数即可启动排序按钮\n// ?对某一列数据进行筛选，使用列的 filters 属性来指定需要筛选菜单的列，onFilter 用于筛选当前数据，filterMultiple 用于指定多选和单选。\n// ? 树形筛选菜单：https://ant.design/components/table-cn?theme=happy-work#components-table-demo-filter-in-tree\nconst App: any = ({ isShow }: any) => isShow && <Table columns={columns} dataSource={data} onChange={onChange} />;\n\nexport default App;\n"],"names":["columns","value","record","a","b","data","onChange","pagination","filters","sorter","extra","App","isShow","jsx","Table"],"mappings":"sZAWA,MAAMA,EAAsC,CAC1C,CACE,MAAO,OACP,UAAW,OACX,QAAS,CACP,CACE,KAAM,MACN,MAAO,KACT,EACA,CACE,KAAM,MACN,MAAO,KACT,EACA,CACE,KAAM,UACN,MAAO,UACP,SAAU,CACR,CACE,KAAM,QACN,MAAO,OACT,EACA,CACE,KAAM,QACN,MAAO,OACT,CACF,CACF,CACF,EAGA,SAAU,CAACC,EAAYC,IAAWA,EAAO,KAAK,QAAQD,CAAK,IAAM,EACjE,OAAQ,CAACE,EAAGC,IAAMD,EAAE,KAAK,OAASC,EAAE,KAAK,OACzC,eAAgB,CAAC,SAAS,CAC5B,EACA,CACE,MAAO,MACP,UAAW,MACX,iBAAkB,UAClB,OAAQ,CAACD,EAAGC,IAAMD,EAAE,IAAMC,EAAE,GAC9B,EACA,CACE,MAAO,UACP,UAAW,UACX,QAAS,CACP,CACE,KAAM,SACN,MAAO,QACT,EACA,CACE,KAAM,WACN,MAAO,UACT,CACF,EACA,SAAU,CAACH,EAAYC,IAAWA,EAAO,QAAQ,QAAQD,CAAK,IAAM,CACtE,CACF,EAEMI,EAAO,CACX,CACE,IAAK,IACL,KAAM,aACN,IAAK,GACL,QAAS,0BACX,EACA,CACE,IAAK,IACL,KAAM,YACN,IAAK,GACL,QAAS,wBACX,EACA,CACE,IAAK,IACL,KAAM,YACN,IAAK,GACL,QAAS,wBACX,EACA,CACE,IAAK,IACL,KAAM,UACN,IAAK,GACL,QAAS,wBACX,CACF,EAEMC,EAA6C,CAACC,EAAYC,EAASC,EAAQC,IAAU,CAE3F,EAKMC,EAAW,CAAC,CAAE,OAAAC,CAAO,IAAWA,GAAUC,EAAAA,IAACC,EAAM,CAAA,QAAAd,EAAkB,WAAYK,EAAM,SAAAC,CAAoB,CAAA"}