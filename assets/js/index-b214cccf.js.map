{"version":3,"file":"index-b214cccf.js","sources":["../../../src/hooks/useClipboard.ts","../../../src/views/feat/clipboard/index.tsx"],"sourcesContent":["import { useRef, useState } from 'react'\r\n\r\ninterface ClipboardFunctions {\r\n\tcopyToClipboard: (text: string) => void\r\n}\r\ntype IsCopiedState = boolean\r\ntype TextareaRef = React.RefObject<HTMLTextAreaElement>\r\n\r\ntype ClipboardHook = ClipboardFunctions & {\r\n\tisCopied: IsCopiedState\r\n\ttextareaRef: TextareaRef\r\n}\r\n\r\n// todoÔºöuse Hooks ËÆæÁΩÆÂâ™ÂàáÁâà\r\n// todoÔºöÂ∏∏Áî®ÂäüËÉΩÔºö Ââ™ÂàáÊùø\r\nconst useClipboard = (): ClipboardHook => {\r\n\tconst textareaRef = useRef<HTMLTextAreaElement>(null)\r\n\tconst [isCopied, setIsCopied] = useState<IsCopiedState>(false)\r\n\r\n\tconst copyToClipboard = async (text: string) => {\r\n\t\ttry {\r\n\t\t\tawait navigator.clipboard.writeText(text)\r\n\t\t\tsetIsCopied(true)\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('Â§çÂà∂Êìç‰Ωú‰∏çË¢´ÊîØÊåÅÊàñÂ§±Ë¥•: ', err)\r\n\t\t}\r\n\t}\r\n\r\n\treturn { copyToClipboard, isCopied, textareaRef }\r\n}\r\n\r\nexport default useClipboard\r\n","import { useState } from 'react';\nimport { Alert, Button, Card, Divider, Input, Space, Typography } from 'antd';\nimport { SmileFilled, SmileOutlined } from '@ant-design/icons';\nimport { message } from '@/hooks/useMessage';\nimport useClipboard from '@/hooks/useClipboard';\n\nconst { Paragraph, Link } = Typography;\n\nconst Clipboard: React.FC = () => {\n\tconst { copyToClipboard, isCopied } = useClipboard();\n\n\tconst [value, setValue] = useState('');\n\n\tconst handleCopy = () => {\n\t\tif (!value) return message.warning('ËØ∑ËæìÂÖ•Ë¶Å Copy ÁöÑÂÜÖÂÆπ ÔºÅ');\n\t\tcopyToClipboard(value);\n\t\tmessage.success('Copy Success ÔºÅ');\n\t};\n\n\tconst antMessage = (\n\t\t<span>\n\t\t\tAnt Design Paragraph copyable Ôºö\n\t\t\t<Link href='https://ant.design/components/typography-cn#components-typography-demo-interactive' target='_blank'>\n\t\t\t\tParagraph ÁªÑ‰ª∂ ‚Äî copyable ÂèØÂ§çÂà∂Â±ûÊÄß\n\t\t\t</Link>\n\t\t</span>\n\t);\n\n\treturn (\n\t\t<Card className='w-full h-full'>\n\t\t\t<Alert message='useClipboard hook üåà' type='info' showIcon className='mb20' />\n\n\t\t\t<Space.Compact style={{ width: '350px' }}>\n\t\t\t\t<Input placeholder='Please enter content' value={value} onChange={e => setValue(e.target.value)} />\n\t\t\t\t<Button type='primary' onClick={handleCopy}>\n\t\t\t\t\tCopy\n\t\t\t\t</Button>\n\t\t\t</Space.Compact>\n\t\t\t<span className='ml10'> Copy Status: {isCopied + ''}</span>\n\n\t\t\t<Divider />\n\n\t\t\t<Alert message={antMessage} type='info' showIcon className='mt-[40px] mb-[20px]' />\n\t\t\t<Paragraph copyable>This is a copyable text.</Paragraph>\n\t\t\t<Paragraph copyable={{ text: 'Hello, Hooks Admin!' }}>Replace copy text.</Paragraph>\n\t\t\t<Paragraph\n\t\t\t\tcopyable={{\n\t\t\t\t\ticon: [<SmileOutlined key='copy-icon' />, <SmileFilled key='copied-icon' />],\n\t\t\t\t\ttooltips: ['click here', 'you clicked!!'],\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tCustom Copy icon and replace tooltips text.\n\t\t\t</Paragraph>\n\t\t\t<Paragraph copyable={{ tooltips: false }}>Hide Copy tooltips.</Paragraph>\n\t\t</Card>\n\t);\n};\n\nexport default Clipboard;\n"],"names":["useClipboard","textareaRef","useRef","isCopied","setIsCopied","useState","copyToClipboard","text","navigator","clipboard","writeText","err","console","error","Paragraph","Link","Typography","Clipboard","value","setValue","handleCopy","message","antMessage","jsxs","Card","jsx","Alert","Space","Input","e","Button","Divider","SmileOutlined","SmileFilled"],"mappings":"yPAeA,MAAMA,EAAeA,IAAqB,CACnC,MAAAC,EAAcC,SAA4B,IAAI,EAC9C,CAACC,EAAUC,CAAW,EAAIC,WAAwB,EAAK,EAWtD,MAAA,CAAEC,gBATe,MAAOC,GAAiB,CAC3C,GAAA,CACG,MAAAC,UAAUC,UAAUC,UAAUH,CAAI,EACxCH,EAAY,EAAI,QACRO,EAAK,CACLC,QAAAC,MAAM,gBAAiBF,CAAG,CACnC,GAGyBR,SAAAA,EAAUF,YAAAA,EACrC,ECvBM,CAAE,UAAAa,EAAW,KAAAC,CAAS,EAAAC,EAEtBC,EAAsB,IAAM,CACjC,KAAM,CAAE,gBAAAX,EAAiB,SAAAH,CAAS,EAAIH,EAAa,EAE7C,CAACkB,EAAOC,CAAQ,EAAId,WAAS,EAAE,EAE/Be,EAAa,IAAM,CACxB,GAAI,CAACF,EAAc,OAAAG,EAAQ,QAAQ,iBAAiB,EACpDf,EAAgBY,CAAK,EACrBG,EAAQ,QAAQ,gBAAgB,CAAA,EAG3BC,SACJ,OAAK,CAAA,SAAA,CAAA,wCAEJP,EAAK,CAAA,KAAK,qFAAqF,OAAO,SAAS,SAEhH,gCAAA,CACD,CAAA,CAAA,EAIA,OAAAQ,EAAA,KAACC,EAAK,CAAA,UAAU,gBACf,SAAA,CAACC,EAAAA,IAAAC,EAAA,CAAM,QAAQ,uBAAuB,KAAK,OAAO,SAAQ,GAAC,UAAU,MAAO,CAAA,EAE5EH,OAACI,EAAM,QAAN,CAAc,MAAO,CAAE,MAAO,OAC9B,EAAA,SAAA,CAACF,EAAAA,IAAAG,EAAA,CAAM,YAAY,uBAAuB,MAAAV,EAAc,YAAeC,EAASU,EAAE,OAAO,KAAK,CAAG,CAAA,QAChGC,EAAO,CAAA,KAAK,UAAU,QAASV,EAAY,SAE5C,OAAA,CAAA,EACD,EACAG,EAAAA,KAAC,OAAK,CAAA,UAAU,OAAO,SAAA,CAAA,iBAAepB,EAAW,EAAA,EAAG,QAEnD4B,EAAQ,EAAA,EAETN,EAAAA,IAACC,GAAM,QAASJ,EAAY,KAAK,OAAO,SAAQ,GAAC,UAAU,qBAAsB,CAAA,EAChFG,EAAA,IAAAX,EAAA,CAAU,SAAQ,GAAC,SAAwB,2BAAA,QAC3CA,EAAU,CAAA,SAAU,CAAE,KAAM,uBAAyB,SAAkB,qBAAA,EACxEW,EAAA,IAACX,EAAA,CACA,SAAU,CACT,KAAM,CAAEW,EAAAA,IAAAO,EAAA,GAAkB,WAAY,EAAIP,EAAAA,IAACQ,EAAgB,GAAA,aAAc,CAAE,EAC3E,SAAU,CAAC,aAAc,eAAe,CACzC,EACA,SAAA,6CAAA,CAED,QACCnB,EAAU,CAAA,SAAU,CAAE,SAAU,IAAS,SAAmB,sBAAA,CAC9D,CAAA,CAAA,CAEF"}