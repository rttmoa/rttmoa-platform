{"version":3,"file":"Excel-5b5a6619.js","sources":["../../../src/views/assembly/excel/Excel.tsx"],"sourcesContent":["import { Button, Dropdown, Popconfirm, Tooltip, Upload } from 'antd';\nimport React, { useState } from 'react';\n\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport { message } from '@/hooks/useMessage';\nimport { IconFont } from '@/components/Icon';\nimport { DeleteOutlined, EditOutlined, EyeOutlined, QuestionCircleFilled, QuestionCircleTwoTone, QuestionOutlined } from '@ant-design/icons';\n\n// const tableHeaders = ['序号', '学科', '项目名称', '端', '账号', '密码'];\n\n// ! 上传完毕后：还需要记录上传的文件信息（导入表格记录表）\nexport default function Excel(Props: any) {\n\tconst {\n\t\tTableName, // 导出文件名：用户管理\n\t\tExportTableData, // 导出表格数据\n\t\ttableHeaders, // 表头名称：['序号', '学科', '项目名称', '端', '账号', '密码'];\n\t} = Props;\n\tconst [tableLoading, setTableLoading] = useState<boolean>(false); // 加载状态：Loading\n\tconst [fileName, setFileName] = useState<string>(''); // 文件名称： __EXCEL__黑马账号信息.xlsx\n\n\t// ! 导入表格数据\n\t// 参数设置   (file:文件 Blob类型,sheetName:工作区名称 string类型)\n\tconst handleUpload = (file: any) => {\n\t\tconst isExcel = /\\.(xlsx|xls)$/.test(file?.name.toLowerCase());\n\t\tif (!isExcel) {\n\t\t\tmessage.error('请上传Excel文件（.xlsx 或 .xls）');\n\t\t\treturn false;\n\t\t}\n\t\tsetFileName(file.name);\n\t\tsetTableLoading(true);\n\t\tconst reader = new FileReader(); // 异步读取文件\n\t\treader.onload = (e: any) => {\n\t\t\tconst data = new Uint8Array(e.target.result); // 格式化数组\n\t\t\tconst workbook = XLSX.read(data, { type: 'array' }); // 读取文件内容\n\t\t\tconst worksheet = workbook.Sheets[workbook.SheetNames[0]]; //  ['Sheet1']: 指的是工作区一\n\t\t\tconst jsonData: any = XLSX.utils.sheet_to_json(worksheet, { header: 1 }); // 将工作表数据转换为 JSON 格式\n\t\t\tconsole.log('jsonData', jsonData); // ! 这里就是所有的表格数据了\n\t\t\tif (jsonData == 0) {\n\t\t\t\tmessage.warning('导入错误：表格无数据');\n\t\t\t\tsetTableLoading(false);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// 验证表头字段\n\t\t\tconst headers = jsonData[0] || [];\n\t\t\tconst missingHeaders = tableHeaders.filter((h: any) => !headers.includes(h));\n\t\t\tif (missingHeaders.length > 0) {\n\t\t\t\tmessage.error(`导入失败：缺少字段：${missingHeaders.join('、')}`);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst tableDataRes: any[] = [];\n\t\t\t// 第一行默认认为是表头 除开第一行以外都是数据\n\t\t\tjsonData.slice(1).forEach((item: any, itemIndex: number) => {\n\t\t\t\tif (item.length === 0) return false;\n\t\t\t\tconst obj: any = { key: itemIndex };\n\t\t\t\tjsonData[0].forEach((header: any, index: any) => {\n\t\t\t\t\tobj[header] = item[index];\n\t\t\t\t});\n\t\t\t\ttableDataRes.push(obj);\n\t\t\t});\n\t\t\tconsole.log('tableData', tableDataRes); // ! 最终表格数据\n\t\t\tif (tableDataRes.length == 0) {\n\t\t\t\tmessage.warning('导入错误：表格无数据');\n\t\t\t\tsetTableLoading(false);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// // 设置表头\n\t\t\t// setColumns(columns);\n\t\t\t// // 设置数据\n\t\t\t// setTableData(tableDataRes);\n\t\t\t// ! 将数据传过去、传至接口中\n\t\t\t// 取消表格加载状态\n\t\t\tsetTableLoading(false);\n\t\t};\n\t\treader.readAsArrayBuffer(file);\n\t};\n\n\t// * 导出模板\n\t// ! 传参：expectedHeaders表头信息\n\tconst exportTemplate = () => {\n\t\t// const tableHeaders = ['序号', '学科', '项目名称', '端', '账号', '密码'];\n\n\t\t// 1. 构造一个空的 worksheet，只包含表头\n\t\tconst ws = XLSX.utils.aoa_to_sheet([tableHeaders]);\n\n\t\t// 2. 创建 workbook\n\t\tconst wb = XLSX.utils.book_new();\n\t\tXLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n\t\t// 3. 生成并导出\n\t\tconst wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n\t\tconst blob = new Blob([wbout], { type: 'application/octet-stream' });\n\n\t\tsaveAs(blob, `${TableName}模板.xlsx`);\n\t};\n\n\t// * 导出表格\n\tconst handleExport = () => {\n\t\tif (!ExportTableData.length) return message.warning('暂无数据可导出');\n\n\t\tconst worksheet = XLSX.utils.json_to_sheet(ExportTableData);\n\t\tconst workbook = XLSX.utils.book_new();\n\t\tXLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\n\n\t\tconst excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n\t\tconst fileBlob = new Blob([excelBuffer], { type: 'application/octet-stream' });\n\t\tsaveAs(fileBlob, `导出${TableName}数据.xlsx`);\n\t};\n\n\tconst menuList = [\n\t\t{\n\t\t\tkey: '1',\n\t\t\tlabel: (\n\t\t\t\t<div>\n\t\t\t\t\t<Upload\n\t\t\t\t\t\tbeforeUpload={file => {\n\t\t\t\t\t\t\thandleUpload(file);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* 提示：只导入工作区是 Sheet1 的数据 */}\n\t\t\t\t\t\t<Button key='view' type='text' size='middle' icon={<EyeOutlined />}>\n\t\t\t\t\t\t\t导入表格数据\n\t\t\t\t\t\t\t<Tooltip title='向表格中导入数据、先下载模板并导入！'>\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<QuestionCircleTwoTone />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Upload>\n\t\t\t\t</div>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tkey: '2',\n\t\t\tlabel: (\n\t\t\t\t<Button key='edit' type='text' size='middle' icon={<EditOutlined />} onClick={exportTemplate}>\n\t\t\t\t\t导出表格模板\n\t\t\t\t\t<Tooltip title='模板格式、按格式去导入！'>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<QuestionCircleTwoTone />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Button>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tkey: '3',\n\t\t\tlabel: (\n\t\t\t\t<Button key='delete' type='text' size='middle' icon={<DeleteOutlined />} onClick={handleExport}>\n\t\t\t\t\t导出表格数据\n\t\t\t\t\t<Tooltip title='导出表格中所有的数据！'>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<QuestionCircleTwoTone />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Button>\n\t\t\t),\n\t\t},\n\t];\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\tmenu={{\n\t\t\t\t\titems: menuList,\n\t\t\t\t}}\n\t\t\t\tplacement='bottom'\n\t\t\t\tarrow={{ pointAtCenter: true }}\n\t\t\t\ttrigger={['click']}\n\t\t\t>\n\t\t\t\t<div className='more-button-item'>\n\t\t\t\t\t<IconFont style={{ fontSize: 22 }} type='icon-xiala' />\n\t\t\t\t</div>\n\t\t\t</Dropdown>\n\t\t</>\n\t);\n}\n"],"names":["Excel","Props","TableName","ExportTableData","tableHeaders","tableLoading","setTableLoading","useState","fileName","setFileName","handleUpload","file","message","reader","e","data","workbook","XLSX.read","worksheet","jsonData","XLSX.utils","headers","missingHeaders","h","tableDataRes","item","itemIndex","obj","header","index","exportTemplate","ws","wb","wbout","XLSX.write","blob","saveAs","handleExport","excelBuffer","fileBlob","menuList","jsx","Upload","jsxs","Button","EyeOutlined","Tooltip","QuestionCircleTwoTone","EditOutlined","DeleteOutlined","Fragment","Dropdown","IconFont"],"mappings":"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"}